// ts
import { bitOp, xor } from '../../libs/BitwiseOp'
import { Utils } from '../../utils'

export const encrypt = (input: ArrayBuffer, options: {
  key: string
  scheme: 'Standard' | 'Input differential' | 'Output differential' | 'Cascade'
  nullPreserving: boolean
} = {
  key: '3b453f04a6d5d45a9672f7deafabaf9',
  scheme: 'Standard' as const,
  nullPreserving: false
}) => {
  input = new Uint8Array(input)
  const key = Utils.convertToByteArray(options.key, 'utf8')
  const { scheme, nullPreserving } = options

  return bitOp(input, key, xor, nullPreserving, scheme)
}
