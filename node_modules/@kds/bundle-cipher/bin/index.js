#!/usr/bin/env node

const yargs = require('yargs/yargs')
const { hideBin } = require('yargs/helpers')
const { encrypt } = require('../lib')

yargs(hideBin(process.argv))
  .command('encrypt [png-path]', '', (yargs) => {
    return yargs
      .positional('pngPath', {
        describe: 'png 产物文件路径'
      })
  }, (argv) => {
    const { pngPath, cryType = 1, bundleFilename, outputPngPath, outputBundleFilename } = argv
    const result = encrypt({
      pngPath,
      type: cryType,
      bundleFileName: bundleFilename,
      output: outputPngPath || outputBundleFilename
        ? {
            pngPath: outputPngPath,
            bundleFileName: outputBundleFilename
          }
        : undefined
    })
    console.log(`加密结果：${JSON.stringify(result, null, 2)}`)
  })
  .option('cry-type', {
    type: 'number',
    description: '加密类型'
  })
  .option('bundle-filename', {
    type: 'string',
    description: 'png 中 bundle 文件名，例如 resouce.tex'
  })
  .option('output-png-path', {
    type: 'string',
    description: '加密后的 png 输出路径，例如 ./output.png'
  })
  .option('output-bundle-filename', {
    type: 'string',
    description: '加密后 png 中 bundle 的文件名 ，例如 resouce.tks'
  })
  .help()
  .parse()
