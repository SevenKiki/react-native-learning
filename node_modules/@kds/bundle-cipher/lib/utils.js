"use strict";
/**
 * @author n1474335 [n1474335@gmail.com]
 * @copyright Crown Copyright 2016
 * @license Apache-2.0
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Utils = void 0;
const utf8 = __importStar(require("utf8"));
/**
  * Utility functions for use in operations, the core framework and the stage.
  */
// eslint-disable-next-line @typescript-eslint/no-extraneous-class
class Utils {
    static convertToByteArray(str, type) {
        switch (type.toLowerCase()) {
            case 'utf8':
                return Utils.strToUtf8ByteArray(str);
            case 'latin1':
            default:
                return Utils.strToByteArray(str);
        }
    }
    /**
       * Converts a string to a byte array.
       * Treats the string as UTF-8 if any values are over 255.
       *
       * @param {string} str
       * @returns {byteArray}
       *
       * @example
       * // returns [72,101,108,108,111]
       * Utils.strToByteArray("Hello");
       *
       * // returns [228,189,160,229,165,189]
       * Utils.strToByteArray("你好");
       */
    static strToByteArray(str) {
        const byteArray = new Array(str.length);
        let i = str.length;
        let b;
        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions
        while (i--) {
            b = str.charCodeAt(i);
            byteArray[i] = b;
            // If any of the bytes are over 255, read as UTF-8
            if (b > 255)
                return Utils.strToUtf8ByteArray(str);
        }
        return byteArray;
    }
    /**
   * Converts a string to a UTF-8 byte array.
   *
   * @param {string} str
   * @returns {byteArray}
   *
   * @example
   * // returns [72,101,108,108,111]
   * Utils.strToUtf8ByteArray("Hello");
   *
   * // returns [228,189,160,229,165,189]
   * Utils.strToUtf8ByteArray("你好");
   */
    static strToUtf8ByteArray(str) {
        const utf8Str = utf8.encode(str);
        return Utils.strToByteArray(utf8Str);
    }
}
exports.Utils = Utils;
