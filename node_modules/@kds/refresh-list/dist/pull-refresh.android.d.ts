import React, { Component } from 'react';
import { Animated } from 'react-native';
import { PullRefreshState, DefaultRefreshControl, PullState, PullRefreshProps, PushingState } from './constant';
import type { CompositeAnimation } from 'react-native/Libraries/Animated/AnimatedImplementation';
interface AndroidPullRefreshState extends PullRefreshState {
    top: number;
    viewHeight: number;
    children: React.ReactNode;
}
export default class PullRefresh extends Component<PullRefreshProps, AndroidPullRefreshState> {
    pullAnimHeight: number;
    minPullDistance: number;
    pan: Animated.Value;
    scrollY: number;
    isPulling: boolean;
    isRefreshing: boolean;
    animation?: CompositeAnimation;
    touching: boolean;
    pullState: PullState;
    moveHeight: number;
    movePercent: number;
    timeout?: number;
    refreshNode: any;
    refreshControl?: DefaultRefreshControl;
    nowPullState?: PushingState;
    constructor(props: PullRefreshProps);
    renderRefreshControl(): void;
    setRefreshControl: (ref: DefaultRefreshControl) => void;
    updatePullState(state: PullState): void;
    shouldComponentUpdate(nextProps: PullRefreshProps, nextState: PullRefreshState): boolean;
    UNSAFE_componentWillReceiveProps(nextProps: PullRefreshProps): void;
    onLayout: (evt: any) => void;
    _onPushingState: (evt: any) => void;
    setRefreshNode: (refreshNode: any) => void;
    finishRefresh: () => void;
    startRefresh(calledFromNative?: boolean): void;
    render(): JSX.Element;
}
export {};
