import React, { forwardRef, useImperativeHandle, useRef } from 'react';
import { requireNativeComponent, UIManager, findNodeHandle, } from 'react-native';
const RefreshLayout = requireNativeComponent('RCTRefreshView');
const AndroidRefreshLayout = (props, ref) => {
    const { children, ...restProps } = props;
    const refresh = useRef(null);
    useImperativeHandle(ref, () => ({
        finishRefresh,
        startRefresh,
    }));
    const getRefreshLayoutHandle = () => {
        return findNodeHandle(refresh.current);
    };
    const finishRefresh = () => {
        UIManager.dispatchViewManagerCommand(getRefreshLayoutHandle(), UIManager.getViewManagerConfig('RCTRefreshView').Commands
            .finishRefresh, []);
    };
    const startRefresh = () => {
        UIManager.dispatchViewManagerCommand(getRefreshLayoutHandle(), UIManager.getViewManagerConfig('RCTRefreshView').Commands
            .startRefresh, []);
    };
    return (<RefreshLayout ref={refresh} {...restProps}>
      {children}
    </RefreshLayout>);
};
const AndroidRefreshLayoutWrapper = forwardRef(AndroidRefreshLayout);
AndroidRefreshLayoutWrapper.defaultProps = {
    refreshable: true,
    isContentScroll: true,
};
export default AndroidRefreshLayoutWrapper;
