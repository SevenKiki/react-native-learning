var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
/** Auxilary function to shorten code */
export function objFromKeys(keys, fun) {
    return keys.reduce(function (obj, key) {
        var _a;
        return (__assign(__assign({}, obj), (_a = {}, _a[key] = fun(key), _a)));
    }, {});
}
export function cornerToStyle(corner, alternative) {
    switch (corner) {
        case 'topLeft': return alternative ? 'borderTopStartRadius' : 'borderTopLeftRadius';
        case 'topRight': return alternative ? 'borderTopEndRadius' : 'borderTopRightRadius';
        case 'bottomLeft': return alternative ? 'borderBottomStartRadius' : 'borderBottomLeftRadius';
        case 'bottomRight': return alternative ? 'borderBottomEndRadius' : 'borderBottomRightRadius';
    }
}
