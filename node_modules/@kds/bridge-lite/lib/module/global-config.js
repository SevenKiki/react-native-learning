import { getCurrentMode, setCurrentMode } from './mode';
import { version } from './version';
export const defaultSerializer = {
  stringify: params => JSON.stringify(params),
  parse: params => JSON.parse(params)
};
let rootTag = null;
let serializer = defaultSerializer;
export const globalConfig = {
  get mode() {
    return getCurrentMode();
  },

  set mode(mode) {
    setCurrentMode(mode);
    console.info(`You're currently running version ${version} in ${mode} mode`);
  },

  get rootTag() {
    return rootTag;
  },

  set rootTag(value) {
    rootTag = value;
  },

  get serializer() {
    return serializer;
  },

  set serializer(newSerializer) {
    serializer = newSerializer;
  },

  get isSetSerializer() {
    return serializer !== defaultSerializer;
  }

};
export const setGlobalConfig = nextGlobalConfig => {
  Object.assign(globalConfig, nextGlobalConfig);
};
//# sourceMappingURL=global-config.js.map