{"version":3,"names":["callbacks","Map","KdsCallback","callback","callbackId","result","get","BatchedBridge","registerCallableModule","getInvocationConfig","args","bridge","params","optionsOrCallback","options","initialBridge","invoke","config","timeout","globalConfig","namespace","method","split","Platform","OS","url","startsWith","appVersion","VersionIs","LessThan","JSON","parse","callbackOnlyBridgeSet","has","set","data","isSetSerializer","serializer","NativeModules","Kds","invokeWithArgs","rootTag","nameSpace","multiCallback","callbackType","undefined","invokeWithMultiCallback","baseInvoking","Promise","resolve","reject","baseInvokingSuccessHandle","BridgeError","stringify","error_msg","message","restData","baseInvokingFailHandle","err","then","res","invoking","Number","isFinite","race","invokeSync","unSupported","syncInvokeWithReturnStr","syncInvoke","supportedNamespaces","supportedMethodNames","system","platform","tool","social","indexOf","resultOrError","withReturnStrResultOrErrorString","code","errorCode","errorMsg"],"sources":["invoke.ts"],"sourcesContent":["import { BridgeError } from './bridge-error';\nimport { callbackOnlyBridgeSet } from './constants';\nimport { globalConfig } from './global-config';\nimport type {\n    YodaBridges,\n    InvocationParameters,\n    InvocationPromise,\n    InvocationOptions,\n    InvocationConfig,\n    InvocationBridgeNamespace,\n    InvocationBridgeName,\n    YodaSupportSyncBridges,\n    InvocationResponse,\n    InvocationParams,\n} from './types';\nimport {\n    dealRejectErrorInfo,\n    delay,\n    generateUUID,\n    normalParams,\n    normalNamespace,\n    getAppVersion,\n    versionCompare,\n    VersionIs,\n} from './utils';\nimport BatchedBridge from 'react-native/Libraries/BatchedBridge/BatchedBridge';\nimport { NativeModules, Platform } from 'react-native';\nimport getKswitchData from './legency/get-kswitch-data';\nimport loadUri from './legency/load-uri';\nimport getSlideBack from './legency/get-slide-back';\nimport setSlideBack from './legency/set-slide-back';\nimport exitPageWithInfo from './legency/exit-page-with-info';\n\n// 支持多次callback回调的简单实现\nconst callbacks = new Map();\nconst KdsCallback = {\n    callback(callbackId: String, result: any) {\n        let callback = callbacks.get(callbackId);\n        if (callback) {\n            callback(result);\n        }\n    },\n};\nBatchedBridge.registerCallableModule('KdsCallback', KdsCallback);\n\nconst getInvocationConfig = <T extends keyof YodaBridges>(\n    args: InvocationParameters<T>,\n) => {\n    const [bridge, params = {}, optionsOrCallback] = args;\n    const [options, callback] =\n        typeof optionsOrCallback === 'function'\n            ? [{} as InvocationOptions, optionsOrCallback]\n            : [optionsOrCallback ?? {}];\n\n    return {\n        initialBridge: bridge,\n        bridge,\n        params,\n        options,\n        callback,\n    } as InvocationConfig<T>;\n};\n\nexport const invoke = <T extends keyof YodaBridges>(\n    ...args: InvocationParameters<T>\n): InvocationPromise<T> => {\n    const config = getInvocationConfig(args);\n    const {\n        bridge,\n        params,\n        callback,\n        options: { timeout = globalConfig.timeout ?? 0 },\n    } = config;\n    const [namespace, method] = bridge.split('.') as [\n        InvocationBridgeNamespace<T>,\n        InvocationBridgeName<T>,\n    ];\n\n    // 基于 10.5.10 之前版本 如果url 以 market://开头 调用NativeModules.KRNBasic.open方法.\n    // https://team.corp.kuaishou.com/task/T2502723\n    if (\n        method === 'loadUri' &&\n        namespace === 'platform' &&\n        Platform.OS === 'android' &&\n        (params as InvocationParams<'platform.loadUri'>)?.url?.startsWith(\n            'market://',\n        )\n    ) {\n        const appVersion = getAppVersion();\n        if (versionCompare(appVersion, '10.5.20') === VersionIs.LessThan) {\n            return loadUri(params as any);\n        }\n    }\n\n    // @ts-ignore 类型声明中暂时没有这个 bridge\n    if (method === 'getSlideBack' && namespace === 'tool') {\n        return getSlideBack(JSON.parse(normalParams(params || {})));\n    }\n    // @ts-ignore 类型声明中暂时没有这个 bridge\n    if (method === 'setSlideBack' && namespace === 'tool') {\n        return setSlideBack(JSON.parse(normalParams(params || {})));\n    }\n\n    // https://team.corp.kuaishou.com/task/T3494368\n    if (method === 'exitPageWithInfo' && namespace === 'ui') {\n        return exitPageWithInfo(JSON.parse(normalParams(params || {})));\n    }\n\n    if (callbackOnlyBridgeSet.has(bridge)) {\n        // 只支持多次回调的 bridge，需要注册 callbackId\n        const callbackId = generateUUID();\n        callbacks.set(callbackId, (result: any) => {\n            const data = globalConfig.isSetSerializer\n                ? globalConfig.serializer.parse(result)\n                : result;\n            callback?.(data);\n        });\n        if (globalConfig.isSetSerializer && NativeModules.Kds?.invokeWithArgs) {\n            NativeModules.Kds.invokeWithArgs({\n                rootTag: params?.rootTag || globalConfig.rootTag,\n                nameSpace: normalNamespace(namespace),\n                method,\n                params: normalParams(params),\n                callbackId,\n                multiCallback: true,\n                callbackType: 'str',\n            });\n            return undefined;\n        }\n        NativeModules.Kds.invokeWithMultiCallback(\n            normalNamespace(namespace),\n            method,\n            normalParams(params),\n            callbackId,\n        );\n        return undefined;\n    }\n\n    const baseInvoking = new Promise((resolve, reject) => {\n        const baseInvokingSuccessHandle = (data: any) => {\n            // 返回的结果中如果有 result 字段时且不为 1，则按照错误处理，进入 reject\n            if (\n                data &&\n                'result' in data &&\n                typeof data.result === 'number' &&\n                data.result !== 1\n            ) {\n                reject(\n                    new BridgeError(\n                        `bridge：${bridge} 调用出错，调用参数为：${JSON.stringify(\n                            params,\n                        )}，错误信息为：${\n                            data.error_msg || data.message || ''\n                        }`,\n                        data.result,\n                        {\n                            bridge,\n                            params,\n                        },\n                    ),\n                );\n                return;\n            }\n            if (data && data.result === 1) {\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const { result, ...restData } = data;\n                resolve(restData);\n                return;\n            }\n            resolve(data);\n        };\n        const baseInvokingFailHandle = (err: any) => {\n            reject(dealRejectErrorInfo(err));\n        };\n        if (globalConfig.isSetSerializer && NativeModules.Kds?.invokeWithArgs) {\n            NativeModules.Kds.invokeWithArgs({\n                rootTag: params?.rootTag || globalConfig.rootTag,\n                nameSpace: normalNamespace(namespace),\n                method,\n                params: normalParams(params),\n                callbackType: 'str',\n            }).then((res: any) => {\n                const data = globalConfig.serializer.parse(res);\n                baseInvokingSuccessHandle(data);\n            }, baseInvokingFailHandle);\n            return;\n        }\n        NativeModules.Kds.invoke(\n            normalNamespace(namespace),\n            method,\n            normalParams(params),\n        ).then(baseInvokingSuccessHandle, baseInvokingFailHandle);\n    }) as InvocationPromise<T>;\n\n    const invoking =\n        timeout > 0 && Number.isFinite(timeout)\n            ? Promise.race([\n                  baseInvoking,\n                  delay(timeout).then(() =>\n                      Promise.reject(\n                          new BridgeError('timeout', 125010, {\n                              bridge,\n                              params: config.params,\n                          }),\n                      ),\n                  ),\n              ])\n            : baseInvoking;\n\n    return invoking;\n};\n\nexport const invokeSync = <T extends keyof YodaSupportSyncBridges>(\n    ...args: InvocationParameters<T>\n): InvocationResponse<T> => {\n    const config = getInvocationConfig(args);\n    const { bridge, params } = config;\n\n    const unSupported = globalConfig.isSetSerializer\n        ? !NativeModules.Kds?.syncInvokeWithReturnStr\n        : !NativeModules.Kds?.syncInvoke;\n    if (unSupported) {\n        throw new BridgeError('当前客户端版本不支持同步调用', -1, {\n            bridge,\n            params,\n        });\n    }\n\n    const [namespace, method] = bridge.split('.') as [\n        InvocationBridgeNamespace<T>,\n        InvocationBridgeName<T>,\n    ];\n\n    // 修改支持同步调用的列表时，请先修改 api/index.ts 下面的 SupportSyncAPI 和 SupportSyncAPIMethodName\n    const supportedNamespaces = [\n        'platform' as const,\n        'system' as const,\n        'tool' as const,\n        'social' as const,\n    ];\n    const supportedMethodNames = {\n        system: [\n            'isNetworkConnected',\n            'getServerTime',\n            'isBottomNavigationBarShown',\n            'getNetworkType',\n            'getPushPermission',\n            'isPad',\n            'getDisplaySetting',\n            'getNavigationBarHeight',\n            'deviceIsLandscape',\n        ],\n        platform: ['getDarkMode'],\n        tool: [\n            'getClipBoard',\n            'getKswitchData',\n            'canIUse',\n            'getABTestInfo',\n            'getStartUpData',\n        ],\n        social: [\n            'getNoticeRecoTextSync',\n            'getPymkRecoTextSync',\n            'getRemarkNameSync',\n            'getSocialMultiStringLangsSync',\n        ],\n    };\n    // 不支持的命名空间\n    if (supportedNamespaces.indexOf(namespace) === -1) {\n        throw new BridgeError(`${namespace} 命名空间不支持同步调用`, -1, {\n            bridge,\n            params,\n        });\n    }\n    // 不支持的方法名\n    if (supportedMethodNames[namespace].indexOf(method as any) === -1) {\n        throw new BridgeError(\n            `${namespace} 命名空间的 ${method} 方法不支持同步调用`,\n            -1,\n            {\n                bridge,\n                params,\n            },\n        );\n    }\n\n    // 如果调用 tool.getKswitchData，在 10.4.40 之前使用 NativeModules.SwitchBridge.getKswitchDataSync 调用\n    if (method === 'getKswitchData' && namespace === 'tool') {\n        const appVersion = getAppVersion();\n        if (versionCompare(appVersion, '10.4.40') === VersionIs.LessThan) {\n            return getKswitchData(params as any);\n        }\n    }\n    let resultOrError;\n    // 如果自定义了 serializer 就走新方法\n    if (globalConfig.isSetSerializer) {\n        const withReturnStrResultOrErrorString =\n            NativeModules.Kds.syncInvokeWithReturnStr({\n                rootTag: params?.rootTag || globalConfig.rootTag,\n                nameSpace: normalNamespace(namespace),\n                method,\n                params: normalParams(params),\n                callbackType: 'str',\n            });\n        resultOrError = globalConfig.serializer.parse(\n            withReturnStrResultOrErrorString,\n        );\n    } else {\n        // 否则走旧方法\n        resultOrError = NativeModules.Kds.syncInvoke({\n            nameSpace: normalNamespace(namespace),\n            method,\n            params: normalParams(params),\n        });\n    }\n    if (resultOrError && 'errorCode' in resultOrError) {\n        resultOrError.code = resultOrError.errorCode;\n        resultOrError.message = resultOrError.errorMsg;\n        // 删除掉原来的错误码及错误信息字段\n        delete resultOrError.errorCode;\n        delete resultOrError.errorMsg;\n\n        throw dealRejectErrorInfo(resultOrError);\n    }\n    return resultOrError;\n};\n"],"mappings":"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"}