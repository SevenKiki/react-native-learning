export interface StartNeoAdVideoParams {
    neoParams: string;
}

export interface StartNeoAdVideoResponseData extends Record<string, never> {}

export interface GetGamePackageVersionParams {
    callback?: string | undefined;
    packageName?: string | undefined;
}

export interface GetGamePackageVersionResponseData extends Record<string, any> {}

export interface EnterGroupChatParams {
    groupId: string;
}

export interface EnterGroupChatResponseData extends Record<string, never> {}

export interface HasImportSdkParams {
    identifier: string;
}

export interface HasImportSdkResponseData extends Record<string, never> {}

export interface InjectCookieParams {
    url: string;
}

export interface InjectCookieResponseData extends Record<string, never> {}

export interface OpenBrowserParams {
    url: string;
}

export interface OpenBrowserResponseData extends Record<string, never> {}

export interface ReqSessionStickyOnTopWithThreadParams {
    threadId: string;
    type: number;
    stickyOnTop: boolean;
}

export interface ReqSessionStickyOnTopWithThreadResponseData extends Record<string, never> {}

export interface SelectMixMediasAndUploadParams {
    uploadTokenPrams: {
        uploadTokenApi?: string | undefined;
        appId?: string | undefined;
        sid?: string | undefined;
        subBiz?: string | undefined;
        token?: string | undefined;
        target?: string | undefined;
        targetType?: number | undefined;
        publicGroup?: boolean | undefined;
    };
    sourceType?: string[];
    limits: {
        type?: string | undefined;
        errmsg?: string | undefined;
        count?: number | undefined;
        title?: string | undefined;
        totalDuration?: number | undefined;
        minDuration?: number | undefined;
        confirmTitle: string;
        uploadMaxSize: number;
    };
    thumbnailCompressConfig: {
        maxWidth?: number | undefined;
        maxHeight?: number | undefined;
        maxFileSize?: number | undefined;
    };
    imageCompressConfig: {
        maxWidth?: number | undefined;
        maxHeight?: number | undefined;
        maxFileSize?: number | undefined;
    };
    encodeConfig: Record<string, unknown>;
}

export interface SelectMixMediasAndUploadResponseData extends Record<string, never> {}

export interface StartDepositParams {
    provider: string;
    accountGroupKey: string;
    data: {
        merchantId?: string | undefined;
        version?: string | undefined;
        format?: string | undefined;
        sign?: string | undefined;
        timestamp?: string | undefined;
        biz_content?: string | undefined;
    };
}

export interface StartDepositResponseData extends Record<string, never> {}

export interface CloseLiveFloatingWindowParams extends Record<string, never> {}

export interface CloseLiveFloatingWindowResponseData extends Record<string, never> {}

export interface VideoParams extends Record<string, unknown> {}

export interface VideoResponseData extends Record<string, any> {}

export interface AudioRecordParams extends Record<string, never> {}

export interface AudioRecordResponseData extends Record<string, never> {}

export interface GetSidTokenParams {
    sid: string;
    forceRefresh: boolean;
}

export interface GetSidTokenResponseData {
    token: string;
    ssecurity: string;
}

export interface GetWebConfigParams {
    key?: string | undefined;
}

export interface GetWebConfigResponseData {
    value: string;
}

export interface OpenMediaBrowserPageParams extends Record<string, never> {}

export interface OpenMediaBrowserPageResponseData extends Record<string, never> {}

export interface QuerySessionIsStickyOnTopParams {
    threadId: string;
    type: number;
}

export interface QuerySessionIsStickyOnTopResponseData extends Record<string, any> {}

export interface SetWebConfigParams {
    value?: string | undefined;
    key?: string | undefined;
}

export interface SetWebConfigResponseData extends Record<string, any> {}

export interface IsLowPerformanceDeviceParams extends Record<string, never> {}

export interface IsLowPerformanceDeviceResponseData {
    isLowPerformanceDevice: boolean;
}

export interface LoadUriParams {
    url?: string | undefined;
    newTask?: boolean | undefined;
    cancelExitAnim?: boolean | undefined;
}

export interface LoadUriResponseData {
    success: boolean;
}

export interface KaraokeParams {
    duetMode?: string | undefined;
}

export interface KaraokeResponseData extends Record<string, never> {}

export interface SelectVideoAndUploadParams {
    selectFileEventName?: string | undefined;
    sourceType?: string[];
    progressEventName?: string | undefined;
    callback?: string | undefined;
    failEventName?: string | undefined;
    successEventName?: string | undefined;
    uploadConfig?: {
        endPoints?: string[];
        host?: string | undefined;
        maxDuration?: number | undefined;
        maxSize?: number | undefined;
        port?: Record<string, unknown>;
        protocol?: string | undefined;
        supportFormats?: {
            suffix: string;
            mime: string;
        }[];
        token?: string | undefined;
    };
}

export interface SelectVideoAndUploadResponseData extends Record<string, never> {}

export interface BindRiskPreCheckParams extends Record<string, never> {}

export interface BindRiskPreCheckResponseData extends Record<string, never> {}

export interface NeedUpdateProfileParams extends Record<string, never> {}

export interface NeedUpdateProfileResponseData extends Record<string, never> {}

export interface OpenWechatMiniProgramParams {
    originalID: string;
    path: string;
}

export interface OpenWechatMiniProgramResponseData extends Record<string, never> {}

export interface AppointGameParams {
    gameId?: string | undefined;
    schema?: string | undefined;
    showFollowButton?: boolean | undefined;
    confirmDialogText?: string | undefined;
    bundleId?: string | undefined;
    noResultHint?: boolean | undefined;
    page2?: string | undefined;
    provider?: number | undefined;
    refer?: string | undefined;
    confirmDialogShow?: boolean | undefined;
    extra?: {
        from?: string | undefined;
        liveStreamId?: string | undefined;
        ext?: string | undefined;
    };
    name?: string | undefined;
    callback?: string | undefined;
}

export interface AppointGameResponseData extends Record<string, never> {}

export interface AddTokenBlockShareIdParams {
    callback?: string | undefined;
    shareId?: string | undefined;
}

export interface AddTokenBlockShareIdResponseData extends Record<string, never> {}

export interface BindPhoneParams extends Record<string, never> {}

export interface BindPhoneResponseData extends Record<string, never> {}

export interface AuthorizationStatusForCalendarParams extends Record<string, never> {}

export interface AuthorizationStatusForCalendarResponseData extends Record<string, never> {}

export interface ChangeEventForCalendarParams {
    method: 'add' | 'delete' | 'search';
    event: {
        type: 1 | 2 | 3;
        title?: string | undefined;
        note?: string | undefined;
        url?: string | undefined;
        startDay?: string | undefined;
        endDay?: string | undefined;
        eventId?: string | undefined;
        hwType?: string | undefined;
        hwDescription?: string | undefined;
        hwUrl?: string | undefined;
    };
}

export interface ChangeEventForCalendarResponseData {
    eventId?: string;
}

export interface CloseChildLockParams extends Record<string, unknown> {}

export interface CloseChildLockResponseData extends Record<string, any> {}

export interface CollapseKeyboardParams extends Record<string, never> {}

export interface CollapseKeyboardResponseData extends Record<string, never> {}

export interface CloseLiveMerchantFloatingWindowParams extends Record<string, never> {}

export interface CloseLiveMerchantFloatingWindowResponseData extends Record<string, never> {}

export interface GameTaskSelectImageParams {
    gameId?: string | undefined;
    callback?: string | undefined;
    text?: string | undefined;
    source?: string | undefined;
    requestParam?: string | undefined;
}

export interface GameTaskSelectImageResponseData extends Record<string, never> {}

export interface GameSendLogParams {
    content_package?: {
        user_package?: {
            accountType?: number | undefined;
            avatar_status?: string | undefined;
            identity?: string | undefined;
            index?: number | undefined;
            kwai_id?: string | undefined;
            params?: string | undefined;
            promotion_tag?: boolean | undefined;
        };
    };
    element_package?: {
        action?: number | undefined;
        action2?: string | undefined;
        index?: number | undefined;
        name?: string | undefined;
        params?: string | undefined;
        status?: number | undefined;
        type?: number | undefined;
        value?: number | undefined;
    };
    action?: number | undefined;
    callback?: string | undefined;
    url_package?: {
        page?: number | undefined;
        page2?: string | undefined;
        params?: string | undefined;
    };
    event?: string | undefined;
    type?: number | undefined;
}

export interface GameSendLogResponseData extends Record<string, never> {}

export interface GetAddressBookAccessStatusParams extends Record<string, never> {}

export interface GetAddressBookAccessStatusResponseData {
    status: number;
}

export interface ToolGetClipBoardParams extends Record<string, never> {}

export interface ToolGetClipBoardResponseData {
    text?: string;
}

export interface PlatformGetClipBoardParams extends Record<string, unknown> {}

export interface PlatformGetClipBoardResponseData {
    text?: string;
}

export interface GetDarkModeParams extends Record<string, never> {}

export interface GetDarkModeResponseData {
    darkMode: boolean;
}

export interface GetDeviceSecretInfoParams {
    success?: (() => void) | undefined;
    fail?: (() => void) | undefined;
}

export interface GetDeviceSecretInfoResponseData extends Record<string, never> {}

export interface GetDeviceInfoParams extends Record<string, never> {}

export interface GetDeviceInfoResponseData {
    sys: string;
    mod: string;
    imei: string;
    deviceName: string;
}

export interface GetExpTagTransListParams extends Record<string, never> {}

export interface GetExpTagTransListResponseData {
    expTagTransList: {
        serverExpTag?: string;
        clientExpTag?: string;
    }[];
}

export interface GetPushPermissionParams extends Record<string, never> {}

export interface GetPushPermissionResponseData {
    permitted: boolean;
}

export interface GetServerTimeParams extends Record<string, never> {}

export interface GetServerTimeResponseData {
    serverTimeStamp: number;
}

export interface GetVideoUploadStatusParams {
    taskIdList: number[];
}

export interface GetVideoUploadStatusResponseData {
    data: {
        taskId?: string;
        thumbnail?: string;
        progress?: string;
        fileSize?: number;
        fileType?: string;
        remainingTime?: number;
        duration?: number;
    };
}

export interface Gete2Params extends Record<string, never> {}

export interface Gete2ResponseData {
    data: {
        e2: string;
        iv2: string;
    };
}

export interface IntownShareParams {
    hideResultToast?: boolean | undefined;
    param: {
        platform: string;
        imgUrl: string;
        caption: string;
        desc: string;
        siteUrl: string;
    };
}

export interface IntownShareResponseData extends Record<string, never> {}

export interface LaunchAppParams {
    scheme?: string | undefined;
    identifier?: string | undefined;
}

export interface LaunchAppResponseData extends Record<string, never> {}

export interface LoadUrlOnNewMerchantPageParams {
    url: string;
    type?: string | undefined;
}

export interface LoadUrlOnNewMerchantPageResponseData extends Record<string, never> {}

export interface LoginParams {
    checkFromServer?: boolean | undefined;
}

export interface LoginResponseData extends Record<string, never> {}

export interface LogoutParams extends Record<string, never> {}

export interface LogoutResponseData extends Record<string, never> {}

export interface MerchantSetPhotoPlayStatusParams {
    photoId?: string | undefined;
    photoStatus?: number | undefined;
}

export interface MerchantSetPhotoPlayStatusResponseData extends Record<string, never> {}

export interface OnItemSelectedParams {
    itemName?: string | undefined;
    itemInfo?: string | undefined;
}

export interface OnItemSelectedResponseData extends Record<string, any> {}

export interface OpenDetailPageParams {
    coverUrl?: string | undefined;
    coverPlaceholdColor?: string | undefined;
    callback?: string | undefined;
    coverPhotoType?: string | undefined;
    photoId?: string | undefined;
    coverAspectRatio?: string | undefined;
    coverBase64String?: string | undefined;
    disallowShot?: boolean | undefined;
}

export interface OpenDetailPageResponseData extends Record<string, never> {}

export interface OpenKspayWebViewParams {
    url: string;
    translucent?: boolean | undefined;
}

export interface OpenKspayWebViewResponseData extends Record<string, never> {}

export interface OpenNativeGamecenterParams {
    tabId?: number | undefined;
    callback?: string | undefined;
    url?: string | undefined;
}

export interface OpenNativeGamecenterResponseData extends Record<string, any> {}

export interface OpenPushPermissionParams extends Record<string, never> {}

export interface OpenPushPermissionResponseData extends Record<string, never> {}

export interface OpenRelationViewParams {
    gameId?: string | undefined;
    identifier?: string | undefined;
    downloadUrl?: string | undefined;
    packageSize?: number | undefined;
    pageId?: number | undefined;
    buttonShowFollow?: string | undefined;
    appointed?: boolean | undefined;
    gameName?: string | undefined;
    campainId?: number | undefined;
    releaseStatus?: number | undefined;
    callback?: string | undefined;
    iconUrl?: string | undefined;
    abName?: string | undefined;
}

export interface OpenRelationViewResponseData extends Record<string, any> {}

export interface PopupToFollowParams {
    userAvatar: string;
    userName: string;
    fansCount: string;
    recommendReason: string;
    userId: string;
    followReferStack: string;
}

export interface PopupToFollowResponseData {
    data: {
        code?: number;
    };
}

export interface RequestFollowUserV2Params {
    userId: string;
    following: boolean;
    activityId: string;
    info?: Record<string, unknown>;
}

export interface RequestFollowUserV2ResponseData {
    followState?: 0 | 1 | 2;
}

export interface ResumeVideoUploadParams {
    taskIdList: number[];
}

export interface ResumeVideoUploadResponseData {
    data: {
        taskId?: string;
        thumbnail?: string;
        progress?: string;
        fileSize?: number;
        fileType?: string;
        remainingTime?: number;
    };
}

export interface ToolScanCodeParams {
    scene?: string | undefined;
    isNeedCallBack?: boolean | undefined;
    targetHandlerActionList?: string[];
    isForceCloseScanPage?: boolean | undefined;
}

export interface ToolScanCodeResponseData {
    code?: string;
    data: {
        extendInfo?: Record<string, any>;
        originalCode: string;
    };
}

export interface SocialScanCodeParams {
    scene?: string | undefined;
}

export interface SocialScanCodeResponseData {
    code?: string;
}

export interface SelectAndUploadMediaParams {
    sourceType: ('album' | 'camera')[];
    uploadToken: string;
    mediaType: string;
    fileType: string;
    maxFileSize: number;
}

export interface SelectAndUploadMediaResponseData extends Record<string, never> {}

export interface SelectCityParams {
    defaultCityCode?: string | undefined;
    title: string;
    submitBtnColor: string;
    forceDialogTop: boolean;
}

export interface SelectCityResponseData {
    data: {
        cityCode?: string;
        cityName?: string;
        code?: string;
        provinceName?: string;
    };
}

export interface SelectCountryPhoneCodeParams extends Record<string, never> {}

export interface SelectCountryPhoneCodeResponseData {
    phoneCode?: number;
}

export interface SendImFriendMessageParams {
    targetType: number;
    targetId: number;
    msgType: number;
    text?: string | undefined;
    image?: {
        url: string;
        width?: number | undefined;
        height?: number | undefined;
    };
    link?: {
        url: string;
        iconUrl: string;
        title: string;
        desc: string;
        name: string;
    };
    paiYiPai?: {
        authorId: string;
        contentId: string;
        contentType: number;
        actionUrl: string;
        comment?: string | undefined;
        repliedMessageType: number;
        text?: string | undefined;
        coverImage: string[];
        emotion?: {
            emotionId: string;
            packageId: string;
        };
        photoTitle?: string | undefined;
        actionType: number;
    };
    scene?: number | undefined;
}

export interface SendImFriendMessageResponseData extends Record<string, never> {}

export interface SendSMSParams {
    encryptedMobile?: string | undefined;
    mobile: string;
    content: string;
}

export interface SendSMSResponseData extends Record<string, never> {}

export interface SetPageFollowReferParams {
    followRefer: string;
}

export interface SetPageFollowReferResponseData extends Record<string, never> {}

export interface SetSettingEntryForCourseParams {
    expireTime?: number | undefined;
    show?: boolean | undefined;
    linkUrl?: string | undefined;
    iconUrl?: string | undefined;
    expireTimeInterval?: number | undefined;
    text?: string | undefined;
}

export interface SetSettingEntryForCourseResponseData extends Record<string, never> {}

export interface SetShareTokenToClipBoardParams {
    text?: string | undefined;
}

export interface SetShareTokenToClipBoardResponseData extends Record<string, never> {}

export interface SetStatusBarStyleParams {
    style: 0 | 1;
}

export interface SetStatusBarStyleResponseData extends Record<string, never> {}

export interface ShareParams {
    param: {
        subBiz: string;
        shareObjectId: string;
        showSharePanel: boolean;
        shareContent?: string | undefined;
        shareDirectActionUrl?: string | undefined;
        tokenStoreParams?: Record<string, unknown>;
        shareInitConfigs?: {
            extTransientParams?: Record<string, unknown>;
            extTokenStoreParams?: Record<string, unknown>;
            extInitPosterParams?: {
                relativeWidth: number;
                absoluteTopMargin?: number | undefined;
                absoluteBottomMargin?: number | undefined;
            };
            extInitPainterParams?: {
                type: 'long_pic' | 'short_pic' | 'big_pic' | 'big_qr';
                imageUrl?: string | undefined;
                imageBytes?: string | undefined;
                title?: string | undefined;
                subTitle?: string | undefined;
                icon?: string | undefined;
                qrImageRelativeX?: number | undefined;
                qrImageRelativeY?: number | undefined;
                qrCorrectionLevel?: number | undefined;
                qrImageRelativeWidth: number;
            };
        };
        extraChannelOptions?: {
            shareChannel: 'wechat' | 'qq' | 'qzone' | 'wechatMoments' | 'weibo' | 'copyLink' | 'wechatWow' | 'im';
            shareMethod: 'PICTURE' | 'CARD' | 'TOKEN' | 'TOKEN_LINK' | 'MINI_PROGRAM';
            shareMode: 'app' | 'system';
            configs?: Record<string, unknown>;
            subTokenStoreParams?: Record<string, unknown>;
            forceConfigs?: Record<string, unknown>;
            subAnyPainterParams?: Record<string, unknown>;
        }[];
        posterConfigs?: {
            posterImageBytes?: string | undefined;
            posterImageUrl?: string | undefined;
            posterImageAspectRatio: number;
            qrImageAspectRatio: number;
            qrImageRelativeX: string;
            qrImageRelativeWidth: string;
            posterShowType?: 0 | 1;
        };
        extAnyPainterParams?: Record<string, unknown>;
        commonConfigs?: Record<string, unknown>;
        logParams?: string | undefined;
        backupShareConfigs?: Record<string, unknown>;
        panelConfigs?: {
            headerImageBytes?: string | undefined;
            headerImageUrl?: string | undefined;
            headerImageAspectRatio: number;
            headerActionUrl: string;
            hidePanelOnHeaderClicked: boolean;
        };
    };
}

export interface ShareResponseData extends Record<string, never> {}

export interface UiShowBottomSheetParams {
    title: string;
    options: {
        text: string;
        value: string;
        type: 0 | 1;
    }[];
}

export interface UiShowBottomSheetResponseData {
    value?: string;
}

export interface PlatformShowBottomSheetParams {
    title: string;
    options: {
        text: string;
        value: string;
        type: 0 | 1;
    }[];
}

export interface PlatformShowBottomSheetResponseData {
    value?: string;
}

export interface ShowMerchantPayResultParams {
    callback?: string | undefined;
    payResultJson?: string | undefined;
}

export interface ShowMerchantPayResultResponseData extends Record<string, never> {}

export interface ShowDialogParams {
    title?: string | undefined;
    content: string;
    positiveButton: {
        text: string;
    };
    negativeButton?: {
        text: string;
    };
    neutralButton?: {
        text: string;
    };
    isAddToWindow?: boolean | undefined;
}

export interface ShowDialogResponseData {
    buttonType: number;
}

export interface ShowPickerParams {
    param: {
        headerText?: string | undefined;
        default?: {
            text: string;
            value: string;
        }[];
        column: number;
        columnWidth?: number[];
        data?: {
            text: string;
            value: string;
            subGroup?: {
                text: string;
                value: string;
            }[];
        }[][];
        group?: boolean | undefined;
        forceDialogTop?: boolean | undefined;
        useDialogStyle?: boolean | undefined;
    };
}

export interface ShowPickerResponseData {
    data: {
        selectedData: {
            text: string;
            value: string;
        }[];
    };
}

export interface ShowSafeDialogParams {
    confirm?: string | undefined;
    gameId?: string | undefined;
    identifier?: string | undefined;
    gameName?: string | undefined;
    callback?: string | undefined;
    url?: string | undefined;
}

export interface ShowSafeDialogResponseData extends Record<string, never> {}

export interface StartAuthActivityParams {
    kwai_request_app_id: string;
    kwai_request_type: string;
    kwai_request_scope: string;
}

export interface StartAuthActivityResponseData {
    kwai_response_open_id?: string;
    kwai_response_code?: string;
    kwai_response_access_token?: string;
}

export interface StartFansTopLivePlayParams {
    widgetParams?: string | undefined;
    timeout?: number | undefined;
    awardType?: number | undefined;
    ' neoParams': string;
}

export interface StartFansTopLivePlayResponseData extends Record<string, never> {}

export interface StartFaceRecognitionParams {
    errorUrl: string;
}

export interface StartFaceRecognitionResponseData {
    type: number;
    token: string;
    ztIdentityVerificationType: string;
    ztIdentityVerificationCheckToken: string;
}

export interface StartGatewayWithdrawParams {
    url: string;
}

export interface StartGatewayWithdrawResponseData extends Record<string, never> {}

export interface StartKspayOrderPrepayParams {
    merchantId: string;
    outOrderNo: string;
    provider?: string | undefined;
    paymentChannelType?: string | undefined;
    paymentMethod?: string | undefined;
    activityDiscountCode?: string | undefined;
    loadingIconUrl?: string | undefined;
    loadingText?: string | undefined;
}

export interface StartKspayOrderPrepayResponseData extends Record<string, never> {}

export interface UpdateWeatherInfoParams {
    iconUrl?: string | undefined;
    title?: string | undefined;
}

export interface UpdateWeatherInfoResponseData extends Record<string, never> {}

export interface UpdateSoGameInfoListParams extends Record<string, unknown> {}

export interface UpdateSoGameInfoListResponseData extends Record<string, any> {}

export interface UserIncentivesUpdateTasksParams {
    nextTaskWidgetParams?: string | undefined;
    callback?: string | undefined;
}

export interface UserIncentivesUpdateTasksResponseData extends Record<string, never> {}

export interface UploadVideoFromAlbumParams {
    taskId: string;
    uploadToken: string;
    endpointList?: Record<string, unknown>[];
    onFinished: {
        reportApi?: string | undefined;
        params: Record<string, unknown>;
    };
    limits?: {
        type: string;
        range: number[];
        errmsg: string;
    }[];
}

export interface UploadVideoFromAlbumResponseData {
    data: {
        taskId?: string;
        thumbnail?: string;
        progress?: string;
        fileSize?: string;
        fileType?: string;
        remainingTime?: number;
        duration?: number;
    };
}

export interface VerifyAccountParams {
    info?: string | undefined;
}

export interface VerifyAccountResponseData extends Record<string, never> {}

export interface VerifySMSCodeParams {
    title?: string | undefined;
    info?: string | undefined;
    type: number;
    needMobile: boolean;
}

export interface VerifySMSCodeResponseData {
    data: {
        mobileCode?: string;
        mobileCountryCode?: string;
        mobile?: string;
    };
}

export interface WechatLoginParams extends Record<string, never> {}

export interface WechatLoginResponseData extends Record<string, never> {}

export interface CallCardHandlerParams {
    action: string;
    data: string;
}

export interface CallCardHandlerResponseData {
    data: Record<string, any>;
}

export interface VerifyThirdPartyLoginParams {
    platform: 'sina2.0' | 'weixin' | 'qq2.0' | 'apple';
    ignoreNativeToast?: boolean | undefined;
}

export interface VerifyThirdPartyLoginResponseData {
    accessToken?: string;
}

export interface CallAdBridgeParams {
    action: string;
    data: string;
}

export interface CallAdBridgeResponseData {
    data: Record<string, any>;
}

export interface DispatchGlobalEventParams {
    type: string;
    data: Record<string, unknown>;
}

export interface DispatchGlobalEventResponseData extends Record<string, never> {}

export interface GetNetworkTypeParams extends Record<string, never> {}

export interface GetNetworkTypeResponseData {
    net: string;
}

export interface GetAppInfoParams extends Record<string, never> {}

export interface GetAppInfoResponseData {
    kpn?: string;
    kpf?: string;
    userId?: string;
    did?: string;
    c?: string;
    ver?: string;
    appver?: string;
    language?: string;
    countryCode?: string;
    bundleId?: string;
}

export interface ShakeDetectionParams {
    register?: number | undefined;
}

export interface ShakeDetectionResponseData extends Record<string, never> {}

export interface VibrateShortParams {
    type?: string | undefined;
}

export interface VibrateShortResponseData extends Record<string, never> {}

export interface IsNetworkConnectedParams extends Record<string, unknown> {}

export interface IsNetworkConnectedResponseData {
    connected: boolean;
}

export interface GetLocationPermissionParams {
    biz: string;
}

export interface GetLocationPermissionResponseData {
    hasPermission?: boolean;
}

export interface GetLocationCityInfoParams {
    biz: string;
}

export interface GetLocationCityInfoResponseData {
    longitude?: number;
    latitude?: number;
    address?: string;
    locationTime?: number;
    country?: string;
    province?: string;
    city?: string;
    subLocality?: string;
}

export interface RequestLocationParams {
    biz: string;
    title?: string | undefined;
    content?: string | undefined;
    statKey?: string | undefined;
    alertScene?: string | undefined;
    updateLocationScene?: string | undefined;
}

export interface RequestLocationResponseData {
    longitude: number;
    latitude: number;
    address: string;
    locationTime: number;
    country: string;
    province: string;
    city: string;
    subLocality?: string;
}

export interface IsBottomNavigationBarShownParams extends Record<string, unknown> {}

export interface IsBottomNavigationBarShownResponseData {
    shown: boolean;
}

export interface GetABTestInfoParams {
    type?: unknown;
    key?: string | undefined;
}

export interface GetABTestInfoResponseData {
    value: unknown;
}

export interface GetKswitchDataParams {
    keys: {
        key: string;
        project?: string | undefined;
    }[];
}

export interface GetKswitchDataResponseData {
    data: {
        project?: string;
        key: string;
        value: unknown;
    }[];
}

export interface HandleEntryTagParams extends Record<string, never> {}

export interface HandleEntryTagResponseData extends Record<string, never> {}

export interface EncryptParams {
    content: string;
    key?: string | undefined;
}

export interface EncryptResponseData {
    value: string;
}

export interface DecryptParams {
    content: string;
    key?: string | undefined;
}

export interface DecryptResponseData {
    value: string;
}

export interface GetParamWithKeyParams {
    key: string;
}

export interface GetParamWithKeyResponseData {
    value: string;
}

export interface GetAllCommonParamsParams extends Record<string, unknown> {}

export interface GetAllCommonParamsResponseData {
    params: Record<string, any>;
}

export interface IsChildLockEnableParams extends Record<string, unknown> {}

export interface IsChildLockEnableResponseData {
    enable: boolean;
}

export interface GetFileCRC32Params {
    filePath?: string | undefined;
}

export interface GetFileCRC32ResponseData {
    crc32: string;
}

export interface GetCityInfoByCodeParams {
    cityCode: string;
}

export interface GetCityInfoByCodeResponseData {
    provinceName: string;
    cityName: string;
}

export interface UpdateBottomNavigationBarColorParams {
    color?: string | undefined;
}

export interface UpdateBottomNavigationBarColorResponseData extends Record<string, never> {}

export interface StartNewTaskParams {
    taskWidgetParams?: string | undefined;
}

export interface StartNewTaskResponseData extends Record<string, any> {}

export interface OpenFansGroupParams {
    headUrl?: string | undefined;
    isMember?: boolean | undefined;
    userId?: string | undefined;
}

export interface OpenFansGroupResponseData extends Record<string, never> {}

export interface GetHistoryParams {
    type?: number | undefined;
}

export interface GetHistoryResponseData {
    data?: Record<string, any>;
}

export interface ClearHistoryParams {
    type?: number | undefined;
}

export interface ClearHistoryResponseData extends Record<string, any> {}

export interface LikePhotoParams {
    cancel?: string | undefined;
    biz?: string | undefined;
    serverExpTag?: string | undefined;
    expTag?: string | undefined;
    photoId?: string | undefined;
    userId?: string | undefined;
}

export interface LikePhotoResponseData extends Record<string, never> {}

export interface IsWarmUpSuccessParams {
    resourceUrl?: string | undefined;
    type?: number | undefined;
}

export interface IsWarmUpSuccessResponseData {
    status: number;
}

export interface CouponUsedParams {
    callback?: string | undefined;
    couponId?: string | undefined;
}

export interface CouponUsedResponseData extends Record<string, never> {}

export interface StopLivePlayParams extends Record<string, never> {}

export interface StopLivePlayResponseData extends Record<string, never> {}

export interface OpenUrlParams {
    url?: string | undefined;
}

export interface OpenUrlResponseData extends Record<string, any> {}

export interface DismissBottomSheetRNDialogParams {
    pageId: string;
}

export interface DismissBottomSheetRNDialogResponseData extends Record<string, never> {}

export interface DismissYellowCarListParams {
    liveStreamId?: string | undefined;
    animated?: boolean | undefined;
}

export interface DismissYellowCarListResponseData extends Record<string, any> {}

export interface ShowBottomSheetRNDialogParams {
    callback?: string | undefined;
    url?: string | undefined;
}

export interface ShowBottomSheetRNDialogResponseData extends Record<string, any> {}

export interface MerchantReservationParams {
    sellerId?: string | undefined;
    isCancel?: string | undefined;
    reservationId?: string | undefined;
    activeBizType?: string | undefined;
    callback?: string | undefined;
    reserveType?: string | undefined;
    statParams?: string | undefined;
    logPage?: string | undefined;
}

export interface MerchantReservationResponseData extends Record<string, any> {}

export interface ShowVFCInviteDialogParams {
    callback?: string | undefined;
    anchorId?: string | undefined;
}

export interface ShowVFCInviteDialogResponseData extends Record<string, any> {}

export interface SelectIdCardParams {
    authorizeType?: number | undefined;
    minHeight?: number | undefined;
    maxHeight?: number | undefined;
    callback?: string | undefined;
    minWidth?: number | undefined;
    maxFileSize?: number | undefined;
    maxWidth?: number | undefined;
}

export interface SelectIdCardResponseData extends Record<string, never> {}

export interface StartRouterParams {
    params?: Record<string, unknown>;
    requestForResult?: boolean | undefined;
    url?: string | undefined;
    pageId: string;
}

export interface StartRouterResponseData extends Record<string, never> {}

export interface DebugLoggerParams {
    logType?: number | undefined;
    msg?: string | undefined;
    biz?: string | undefined;
    tag?: string | undefined;
    params?: Record<string, unknown>;
}

export interface DebugLoggerResponseData extends Record<string, any> {}

export interface RequestMerchantLocationInfoParams {
    title?: string | undefined;
    content?: string | undefined;
    positiveButtonText: string;
    negativeButtonText?: string | undefined;
    key?: string | undefined;
}

export interface RequestMerchantLocationInfoResponseData {
    data: {
        buttonInfo: {
            buttonType: 1 | 2;
        };
        locationInfo?: {
            latitude: number;
            longitude: number;
        };
    };
}

export interface OrderConfirmBackToLiveParams extends Record<string, unknown> {}

export interface OrderConfirmBackToLiveResponseData extends Record<string, any> {}

export interface DismissBottomSheetRNDialogWithCloseTypeParams extends Record<string, unknown> {}

export interface DismissBottomSheetRNDialogWithCloseTypeResponseData extends Record<string, any> {}

export interface StartHalfScreenRechargeParams {
    showMask?: boolean | undefined;
    maxHeight?: number | undefined;
    newContainer?: boolean | undefined;
    callback?: string | undefined;
    extraParam?: string | undefined;
    showCloseBtn?: boolean | undefined;
    source?: string | undefined;
    targetDou?: number | undefined;
    url?: string | undefined;
}

export interface StartHalfScreenRechargeResponseData extends Record<string, never> {}

export interface ContractParams {
    provider?: string | undefined;
    callback?: string | undefined;
    type?: string | undefined;
    providerConfig?: string | undefined;
}

export interface ContractResponseData extends Record<string, never> {}

export interface ToolClearClipBoardParams extends Record<string, unknown> {}

export interface ToolClearClipBoardResponseData extends Record<string, any> {}

export interface PlatformClearClipBoardParams extends Record<string, unknown> {}

export interface PlatformClearClipBoardResponseData extends Record<string, any> {}

export interface ShowDatePickerParams {
    defaultTimestamp?: number | undefined;
    timeType: number;
    title?: string | undefined;
    endTimestamp: number;
    startTimestamp: number;
    forceDialogTop: boolean;
    style?: string | undefined;
    useDialogStyle?: boolean | undefined;
}

export interface ShowDatePickerResponseData {
    timestamp: number;
}

export interface PostJsEventParams {
    data?: string | undefined;
    type?: string | undefined;
}

export interface PostJsEventResponseData extends Record<string, any> {}

export interface EditAtlasParams {
    activityId?: string | undefined;
    imagePaths?: Record<string, unknown>;
    callback?: string | undefined;
    initCaption?: string | undefined;
    tag?: string | undefined;
    isReturnToWeb?: boolean | undefined;
    bridgeSource?: string | undefined;
    defaultAtlasTab?: string | undefined;
    argsMap: Record<string, unknown>;
}

export interface EditAtlasResponseData extends Record<string, never> {}

export interface DeleteCacheVideoByPhotoIdParams {
    callback?: string | undefined;
    photoId?: string | undefined;
}

export interface DeleteCacheVideoByPhotoIdResponseData extends Record<string, never> {}

export interface SelectLocationParams {
    callback?: string | undefined;
    title?: string | undefined;
}

export interface SelectLocationResponseData extends Record<string, any> {}

export interface MultiChooseMessageParams {
    imSubbiz?: string | undefined;
    targetId?: string | undefined;
    chooseLimit?: number | undefined;
    targetType?: number | undefined;
}

export interface MultiChooseMessageResponseData extends Record<string, never> {}

export interface SetFollowActivityIdParams {
    activityId?: string | undefined;
    callback?: string | undefined;
}

export interface SetFollowActivityIdResponseData extends Record<string, never> {}

export interface FollowUserParams {
    following: boolean;
    userId: string;
    info?: Record<string, unknown>;
    followRefer?: number | undefined;
}

export interface FollowUserResponseData {
    followState: number;
}

export interface SendIMMessageParams {
    activityId?: string | undefined;
    image?: Record<string, unknown>;
    targetName?: string | undefined;
    msgType?: number | undefined;
    targetHeadUrl?: string | undefined;
    targetId?: string | undefined;
    link?: Record<string, unknown>;
    callback?: string | undefined;
    targetType?: number | undefined;
    text?: string | undefined;
    autoLogSendMessage?: boolean | undefined;
    disableShareDialog?: boolean | undefined;
    photos?: Record<string, unknown>[];
}

export interface SendIMMessageResponseData extends Record<string, never> {}

export interface RecommendStatParams {
    prsid?: string | undefined;
    profile_user_id?: number | undefined;
    action?: number | undefined;
    callback?: string | undefined;
    author_id?: number | undefined;
}

export interface RecommendStatResponseData extends Record<string, any> {}

export interface ExitPageFromStackParams extends Record<string, unknown> {}

export interface ExitPageFromStackResponseData extends Record<string, any> {}

export interface CurrentUserInfoParams extends Record<string, never> {}

export interface CurrentUserInfoResponseData extends Record<string, never> {}

export interface ShowInFragmentParams extends Record<string, unknown> {}

export interface ShowInFragmentResponseData extends Record<string, any> {}

export interface ShowInActivityParams extends Record<string, unknown> {}

export interface ShowInActivityResponseData extends Record<string, any> {}

export interface RewardVideoTaskParams {
    widgetParams?: string | undefined;
}

export interface RewardVideoTaskResponseData extends Record<string, any> {}

export interface ShowPendantBubbleParams {
    id?: number | undefined;
    text?: string | undefined;
}

export interface ShowPendantBubbleResponseData extends Record<string, any> {}

export interface StartMiniParams {
    data?: Record<string, unknown>;
    action?: string | undefined;
}

export interface StartMiniResponseData extends Record<string, never> {}

export interface PrepareMiniParams {
    data?: Record<string, unknown>;
    action?: string | undefined;
}

export interface PrepareMiniResponseData extends Record<string, never> {}

export interface HandleMiniEventParams {
    data?: Record<string, unknown>;
    action?: string | undefined;
}

export interface HandleMiniEventResponseData extends Record<string, never> {}

export interface GetOriginUrlParams {
    ksUri: string;
    callback?: string | undefined;
}

export interface GetOriginUrlResponseData {
    url: string;
}

export interface GetUserInfoParams {
    subBiz: string;
    type?: number | undefined;
    targetId: string;
    groupId?: string | undefined;
    callback?: string | undefined;
}

export interface GetUserInfoResponseData {
    data: {
        userId: string;
        userName: string;
        gender: string;
        headUrl: string;
        verifiedDetail: {
            type: number;
            description: string;
            iconType: number;
            isMusician: boolean;
        };
        relationType: number;
        officialAccountType: number;
        blocked: boolean;
    };
}

export interface UploadGroupAvatarParams {
    targetId: string;
    filePath: string;
    subBiz: string;
    callback?: string | undefined;
}

export interface UploadGroupAvatarResponseData {
    ksUri: string;
    url: string;
}

export interface BatchUpdateGroupInfoParams {
    brief?: string | undefined;
    groupName?: string | undefined;
    groupHeadUrl?: string | undefined;
    groupId?: string | undefined;
    callback?: string | undefined;
    tag?: string | undefined;
    groupLocation?: {
        latitude?: string | undefined;
        longitude?: string | undefined;
        poi?: string | undefined;
        poi_id?: number | undefined;
    };
}

export interface BatchUpdateGroupInfoResponseData extends Record<string, never> {}

export interface FetchMemberListInfoParams {
    groupType: number;
    groupId: string;
    callback?: string | undefined;
}

export interface FetchMemberListInfoResponseData {
    date: {
        role: number;
        text: string;
        memberList: {
            userId: string;
            showName: string;
            nickName: string;
            groupNickName: string;
            userInfo: Record<string, any>;
            enableDelete: boolean;
            tag: {
                type: number;
                text: string;
                style: number;
            };
            groupRole: number;
            verifiedDetail: {
                type: number;
                description: string;
                iconType: number;
                isMusician: boolean;
            };
        }[];
    }[];
}

export interface KickMemberParams {
    uids?: string[];
    groupId: string;
    joinBlackList?: boolean | undefined;
    callback?: string | undefined;
}

export interface KickMemberResponseData extends Record<string, never> {}

export interface SetMemberNickNameParams {
    groupId: string;
    name: string;
    callback?: string | undefined;
}

export interface SetMemberNickNameResponseData extends Record<string, never> {}

export interface SetPrivateGroupNameParams {
    groupId: string;
    name: string;
    callback?: string | undefined;
}

export interface SetPrivateGroupNameResponseData extends Record<string, never> {}

export interface OpenSerialOpPhotoDetailParams {
    extParams?: {
        h5Page?: string | undefined;
        headerUrl?: string | undefined;
        index?: number | undefined;
        isCollected?: boolean | undefined;
        page?: string | undefined;
        param?: string | undefined;
        parsePath?: string | undefined;
        photoId?: string | undefined;
        poiAddress?: string | undefined;
        poiId?: string | undefined;
        poiTitle?: string | undefined;
        startTs?: string | undefined;
        url?: string | undefined;
    };
    qPhoto?: Record<string, unknown>;
}

export interface OpenSerialOpPhotoDetailResponseData extends Record<string, any> {}

export interface OpenPhotoDetailParams {
    extParams?: {
        h5Page?: string | undefined;
        headerUrl?: string | undefined;
        index?: number | undefined;
        isCollected?: boolean | undefined;
        page?: string | undefined;
        param?: string | undefined;
        parsePath?: string | undefined;
        photoId?: string | undefined;
        poiAddress?: string | undefined;
        poiId?: string | undefined;
        poiTitle?: string | undefined;
        startTs?: string | undefined;
        url?: string | undefined;
    };
    qPhoto?: Record<string, unknown>;
}

export interface OpenPhotoDetailResponseData extends Record<string, any> {}

export interface UpdateServiceLinkParams {
    metaText: string;
    subtype: string;
    extData?: string | undefined;
    topics?: string[];
    atFriends?: {
        userName: string;
        userId: string;
    }[];
    serviceId: string;
    entryId: string;
}

export interface UpdateServiceLinkResponseData extends Record<string, never> {}

export interface GetCoronaTvChasingDataParams extends Record<string, unknown> {}

export interface GetCoronaTvChasingDataResponseData extends Record<string, any> {}

export interface UpdateUserRecoBitParams {
    userRecoBit: number;
}

export interface UpdateUserRecoBitResponseData extends Record<string, never> {}

export interface UpdateDeviceBitParams {
    deviceBit: number;
}

export interface UpdateDeviceBitResponseData extends Record<string, never> {}

export interface SocialJoinGroupParams {
    groupid: string;
    signData: string;
    inviterid: string;
    closeWebViewOnSuccess?: boolean | undefined;
}

export interface SocialJoinGroupResponseData extends Record<string, any> {}

export interface ImJoinGroupParams {
    groupId: string;
    signData: string;
    inviterId: string;
    closeWebViewOnSuccess?: boolean | undefined;
}

export interface ImJoinGroupResponseData extends Record<string, never> {}

export interface MerchantNotifyParams {
    type: number;
    data: string;
}

export interface MerchantNotifyResponseData extends Record<string, never> {}

export interface StartSkuPanelParams extends Record<string, unknown> {}

export interface StartSkuPanelResponseData extends Record<string, any> {}

export interface ToolLoadUrlOnNewPageParams {
    url: string;
    type: 'back' | 'close';
    ignoreHalfScreenDisplay?: number | undefined;
    ignoreAnimated?: number | undefined;
    cancelExitAnim?: boolean | undefined;
}

export interface ToolLoadUrlOnNewPageResponseData extends Record<string, never> {}

export interface PlatformLoadUrlOnNewPageParams {
    url: string;
    type: string;
}

export interface PlatformLoadUrlOnNewPageResponseData extends Record<string, never> {}

export interface SaveTempImagesParams {
    imageData: string[];
    isPng?: boolean | undefined;
}

export interface SaveTempImagesResponseData extends Record<string, never> {}

export interface MediaInteractionSelectImageParams {
    count?: number | undefined;
    sourceType?: ('album' | 'camera')[];
    maxFileSize?: number | undefined;
    maxWidth?: number | undefined;
    maxHeight?: number | undefined;
    title?: string | undefined;
    confirmTitle?: string | undefined;
    minFileSize?: number | undefined;
    minSizeAlert?: string | undefined;
    minWidth?: number | undefined;
    minHeight?: number | undefined;
    minHeightWidthAlert?: string | undefined;
    selectedList?: string[];
}

export interface MediaInteractionSelectImageResponseData {
    data: {
        fileType: string;
        originFilePath: string;
        base64: string;
        width: number;
        height: number;
        filePath: string;
    }[];
}

export interface PostSelectImageParams {
    count?: number | undefined;
    sourceType?: string[];
    maxFileSize?: number | undefined;
    maxWidth?: number | undefined;
    maxHeight?: number | undefined;
    title?: string | undefined;
    confirmTitle?: string | undefined;
    minFileSize?: number | undefined;
    minSizeAlert?: string | undefined;
    minWidth?: number | undefined;
    minHeight?: number | undefined;
    minHeightWidthAlert?: string | undefined;
    selectedList?: string[];
}

export interface PostSelectImageResponseData {
    data: {
        fileType: string;
        originFilePath: string;
        base64: string;
        width: number;
        height: number;
        filePath: string;
        localFilePath: string;
    }[];
}

export interface VibrateLongParams extends Record<string, never> {}

export interface VibrateLongResponseData extends Record<string, never> {}

export interface GetAddressBookInfoParams extends Record<string, unknown> {}

export interface GetAddressBookInfoResponseData extends Record<string, any> {}

export interface TapAddressBookCellParams extends Record<string, unknown> {}

export interface TapAddressBookCellResponseData extends Record<string, any> {}

export interface TapNoticeHeadParams extends Record<string, unknown> {}

export interface TapNoticeHeadResponseData extends Record<string, any> {}

export interface TapNoticeBoxCellParams extends Record<string, unknown> {}

export interface TapNoticeBoxCellResponseData extends Record<string, any> {}

export interface LongPressNoticeBoxParams extends Record<string, unknown> {}

export interface LongPressNoticeBoxResponseData extends Record<string, any> {}

export interface TapNoticeUrlParams extends Record<string, unknown> {}

export interface TapNoticeUrlResponseData extends Record<string, any> {}

export interface LongPressNoticeParams extends Record<string, unknown> {}

export interface LongPressNoticeResponseData extends Record<string, any> {}

export interface StateParams extends Record<string, never> {}

export interface StateResponseData extends Record<string, never> {}

export interface RegisterPushEventNotifierParams {
    commands: string[];
}

export interface RegisterPushEventNotifierResponseData {
    command: string;
    logParam?: string;
    responseData?: string;
    subBiz?: string;
}

export interface SubscribePushMessageParams {
    commands: string[];
}

export interface SubscribePushMessageResponseData extends Record<string, never> {}

export interface GetFormatRawRecoTextInfoParams extends Record<string, unknown> {}

export interface GetFormatRawRecoTextInfoResponseData extends Record<string, any> {}

export interface GetSlideEntranceSubTitleParams extends Record<string, unknown> {}

export interface GetSlideEntranceSubTitleResponseData extends Record<string, any> {}

export interface DidTapSlideEntranceParams extends Record<string, unknown> {}

export interface DidTapSlideEntranceResponseData extends Record<string, any> {}

export interface ClickFollowEachOtherButtonParams extends Record<string, never> {}

export interface ClickFollowEachOtherButtonResponseData extends Record<string, never> {}

export interface DispatchKoiEmitDataParams {
    emitData: Record<string, unknown>;
}

export interface DispatchKoiEmitDataResponseData extends Record<string, any> {}

export interface UiShowToastParams {
    type: 'normal' | 'success' | 'error';
    text: string;
    isAddToWindow?: boolean | undefined;
    duration?: number | undefined;
    isOfficialToast?: boolean | undefined;
}

export interface UiShowToastResponseData extends Record<string, never> {}

export interface PlatformShowToastParams {
    type: string;
    text: string;
    isAddToWindow?: boolean | undefined;
}

export interface PlatformShowToastResponseData extends Record<string, any> {}

export interface MomentCurrentDraftParams extends Record<string, unknown> {}

export interface MomentCurrentDraftResponseData {
    MomentDraftObject: Record<string, any>;
}

export interface GetEmojiImageByCodeParams {
    code: string;
}

export interface GetEmojiImageByCodeResponseData extends Record<string, any> {}

export interface UnsubscribePushMessageParams {
    commands: string[];
}

export interface UnsubscribePushMessageResponseData extends Record<string, never> {}

export interface GetProductClientInfoParams extends Record<string, unknown> {}

export interface GetProductClientInfoResponseData extends Record<string, any> {}

export interface IsLivePluginAvailableParams extends Record<string, never> {}

export interface IsLivePluginAvailableResponseData extends Record<string, never> {}

export interface GetLiveInfoParams extends Record<string, unknown> {}

export interface GetLiveInfoResponseData extends Record<string, any> {}

export interface PlayCommandParams extends Record<string, unknown> {}

export interface PlayCommandResponseData extends Record<string, any> {}

export interface EntranceUpdateParams extends Record<string, unknown> {}

export interface EntranceUpdateResponseData extends Record<string, any> {}

export interface SetRequestOrientationParams extends Record<string, unknown> {}

export interface SetRequestOrientationResponseData extends Record<string, any> {}

export interface QueryBalanceParams extends Record<string, unknown> {}

export interface QueryBalanceResponseData extends Record<string, any> {}

export interface QueryMicStatusParams extends Record<string, unknown> {}

export interface QueryMicStatusResponseData extends Record<string, any> {}

export interface ObservePushParams extends Record<string, unknown> {}

export interface ObservePushResponseData extends Record<string, any> {}

export interface ShowGzoneEntranceParams extends Record<string, unknown> {}

export interface ShowGzoneEntranceResponseData extends Record<string, any> {}

export interface MobileQuickLoginInfoParams {
    notUseCache?: boolean | undefined;
}

export interface MobileQuickLoginInfoResponseData {
    phoneNumber: string;
    token: string;
    operatorType: number;
    accessCode: string;
}

export interface OpenMerchantAddressPageParams extends Record<string, unknown> {}

export interface OpenMerchantAddressPageResponseData extends Record<string, any> {}

export interface MobileQuickAuthInfoParams extends Record<string, unknown> {}

export interface MobileQuickAuthInfoResponseData {
    token: string;
    operatorType: number;
}

export interface GetAppIdParams extends Record<string, never> {}

export interface GetAppIdResponseData {
    appId: string;
}

export interface UploadShopVideoParams {
    taskId: string;
    token: string;
    coverUploadUrl: string;
    endpointList: Record<string, unknown>[];
}

export interface UploadShopVideoResponseData {
    data: {
        progress: string;
        status: string;
        thumbnail: string;
        uploadId: string;
        taskId: string;
        filePath: string;
    };
}

export interface MediaInteractionSaveImageParams {
    base64String: string;
}

export interface MediaInteractionSaveImageResponseData extends Record<string, never> {}

export interface PostSaveImageParams {
    base64String: string;
    isRequestPermissionsWithCancelEvent?: boolean | undefined;
}

export interface PostSaveImageResponseData extends Record<string, never> {}

export interface PostVideoParams {
    param: {
        tag?: string | undefined;
        topic?: string | undefined;
        magicFaceId?: string | undefined;
        magicName?: string | undefined;
        imageUrl?: string | undefined;
        resourceUrl?: string | undefined;
        version?: string | undefined;
        poiId?: string | undefined;
        address?: string | undefined;
        id?: string | undefined;
        longitude?: string | undefined;
        latitude?: string | undefined;
        title?: string | undefined;
        showNativeTagPage?: boolean | undefined;
        returnToWeb?: boolean | undefined;
        activity?: string | undefined;
        musicId?: string | undefined;
        musicType?: string | undefined;
        allowGoBackVideoPost?: boolean | undefined;
        pairedPhoto?: {
            photoId?: string | undefined;
            type?: string | undefined;
        };
        serviceLinkInfo?: string | undefined;
        interactStickerType?: number | undefined;
        interactStickerInfo?: Record<string, unknown>;
        poiCheckType?: number | undefined;
        poiExtParam?: string | undefined;
    };
}

export interface PostVideoResponseData {
    data?: {
        uploadId?: string;
        coverUrl?: string;
        coverKey?: string;
        videoUrl?: string;
        progress?: string;
        filePath?: string;
        photoId?: string;
    };
}

export interface PreviewVideoParams {
    filePath?: string | undefined;
    videoUrl?: string | undefined;
    coverImgUrl?: string | undefined;
}

export interface PreviewVideoResponseData extends Record<string, never> {}

export interface ReUploadShopVideoParams {
    uploadId: string;
    filePath?: string | undefined;
}

export interface ReUploadShopVideoResponseData {
    data: {
        filePath: string;
        status: string;
        uploadId: string;
    };
}

export interface RequestLocationAuthorizationParams extends Record<string, never> {}

export interface RequestLocationAuthorizationResponseData extends Record<string, never> {}

export interface LaunchMediaSceneParams extends Record<string, unknown> {}

export interface LaunchMediaSceneResponseData extends Record<string, any> {}

export interface SubscribeTagsParams {
    bizId: string;
    tags: string[];
}

export interface SubscribeTagsResponseData extends Record<string, never> {}

export interface UnsubscribeAllTagsParams {
    bizId: string;
    tags: string[];
}

export interface UnsubscribeAllTagsResponseData extends Record<string, never> {}

export interface GetLatestImageParams extends Record<string, unknown> {}

export interface GetLatestImageResponseData extends Record<string, any> {}

export interface Sf2022GetContactInfoParams extends Record<string, unknown> {}

export interface Sf2022GetContactInfoResponseData extends Record<string, any> {}

export interface SocialGetContactInfoParams extends Record<string, unknown> {}

export interface SocialGetContactInfoResponseData extends Record<string, any> {}

export interface ReportAdLogActionParams {
    isClickType: boolean;
    eventType: string;
    elementParams: Record<string, unknown>;
}

export interface ReportAdLogActionResponseData extends Record<string, never> {}

export interface CanIUseParams {
    namespace: string;
    name: string;
}

export interface CanIUseResponseData {
    canUse: boolean;
}

export interface PublishSogameVideoParams {
    gameId: number;
    mouldId: number;
}

export interface PublishSogameVideoResponseData extends Record<string, never> {}

export interface HandleJoinRequestParams {
    reqId: string;
    groupJoinAckType: number;
    groupId: string;
    auditComment?: string | undefined;
    ignoreFutureJoinRequest?: boolean | undefined;
}

export interface HandleJoinRequestResponseData extends Record<string, never> {}

export interface ModifyGroupJoinModeParams {
    groupId: string;
    groupJoinMode: number;
}

export interface ModifyGroupJoinModeResponseData extends Record<string, never> {}

export interface GetAndUpdateHybridDetailParams extends Record<string, unknown> {}

export interface GetAndUpdateHybridDetailResponseData extends Record<string, any> {}

export interface RequestPermissionParams {
    type: 'record_audio' | 'camera';
    showNeverAskHint?: boolean | undefined;
}

export interface RequestPermissionResponseData extends Record<string, never> {}

export interface HasPermissionParams {
    type: 'record_audio' | 'camera' | 'vibrate';
}

export interface HasPermissionResponseData extends Record<string, never> {}

export interface GetApiListParams extends Record<string, never> {}

export interface GetApiListResponseData {
    apiList: {
        namespace: string;
        name: string;
    }[];
}

export interface OpenCompetitionPlayBackParams extends Record<string, unknown> {}

export interface OpenCompetitionPlayBackResponseData extends Record<string, any> {}

export interface GetCoronaPhotoPlayDurationParams {
    photoIds: number[];
}

export interface GetCoronaPhotoPlayDurationResponseData {
    data: string[];
}

export interface OpenLiveSlideContainerParams {
    feed: {
        liveStreamId: string;
        playInfo: Record<string, unknown>;
        caption: string;
        cover_thumbnail_urls: string[];
    };
    feeds: string[];
    sourceType: string;
    utmSource: string;
}

export interface OpenLiveSlideContainerResponseData extends Record<string, any> {}

export interface GetIsGPSOpenParams extends Record<string, never> {}

export interface GetIsGPSOpenResponseData {
    isGPSOpen: boolean;
}

export interface GetNavigationBarHeightParams extends Record<string, never> {}

export interface GetNavigationBarHeightResponseData {
    height: number;
}

export interface DraftRecommendPhotosParams {
    startTime: number;
    endTime: number;
    limitNumber: number;
    publishIntervalTime: number;
    filterAutoSaved: boolean;
    filterPublished: boolean;
    filterBlackList: boolean;
    extraParams: string[];
}

export interface DraftRecommendPhotosResponseData {
    data: string[];
}

export interface DraftRecommendPublishPhotosParams {
    limitNumber: number;
    extraParams: string[];
}

export interface DraftRecommendPublishPhotosResponseData {
    data: string[];
}

export interface GetDraftCoverPathParams {
    draftIdentifier: string;
}

export interface GetDraftCoverPathResponseData {
    data: string;
}

export interface AddDraftRecommendBlackListParams {
    blackList: string[];
}

export interface AddDraftRecommendBlackListResponseData {
    data: boolean;
}

export interface DraftRecommendResultParams {
    bubbleJsonString: string;
    draftIdentifier: string;
}

export interface DraftRecommendResultResponseData {
    data: string;
}

export interface GetHostParams {
    businessName: string;
}

export interface GetHostResponseData {
    host: string;
    scheme: 'http' | 'https';
}

export interface JumpToMapPageParams extends Record<string, never> {}

export interface JumpToMapPageResponseData extends Record<string, never> {}

export interface ShowHometownPanelParams extends Record<string, never> {}

export interface ShowHometownPanelResponseData extends Record<string, never> {}

export interface GetRoamCityDataParams extends Record<string, never> {}

export interface GetRoamCityDataResponseData extends Record<string, never> {}

export interface OnCitySelectedParams extends Record<string, never> {}

export interface OnCitySelectedResponseData extends Record<string, never> {}

export interface CheckAndUpdateRoamCityDataParams extends Record<string, never> {}

export interface CheckAndUpdateRoamCityDataResponseData extends Record<string, never> {}

export interface UpdateBusinessInfoParams {
    businessInfos: {
        key: string;
        title: string;
        value: string;
        placeholder: string;
        url: string;
        subValue: string;
        name: string;
    }[];
}

export interface UpdateBusinessInfoResponseData extends Record<string, never> {}

export interface LaunchDatePickerParams {
    datePickerInfo: {
        title: string;
        startTimestamp: number;
        endTimestamp: number;
        defaultTimestamp: number;
        timeType: number;
    };
}

export interface LaunchDatePickerResponseData {
    timestamp: number;
}

export interface LaunchPhonePageParams {
    phoneInfo: {
        phoneNumber: string;
    };
    userId: string;
    localPhoneNumber?: string | undefined;
}

export interface LaunchPhonePageResponseData extends Record<string, never> {}

export interface LaunchNativePageParams {
    url: string;
}

export interface LaunchNativePageResponseData extends Record<string, never> {}

export interface ResetWebViewHeightParams {
    height: number;
    unit?: number | undefined;
}

export interface ResetWebViewHeightResponseData extends Record<string, never> {}

export interface SetDiskDataForKeyParams {
    key: string;
    value: string;
}

export interface SetDiskDataForKeyResponseData extends Record<string, never> {}

export interface DiskDataForKeyParams {
    key: string;
}

export interface DiskDataForKeyResponseData extends Record<string, never> {}

export interface LaunchBindAccountDialogParams {
    contract: {
        name: string;
        url: string;
    };
    headUrl: string;
    name: string;
    text: string;
    followActInfo?: {
        text?: string | undefined;
        selected?: string | undefined;
        befollowedUserId?: string | undefined;
        followFromPage: string;
    };
}

export interface LaunchBindAccountDialogResponseData {
    data: {
        result: number;
    };
}

export interface StartTunaDownloadParams {
    downloadUrl: string;
    id: string;
    packageName: string;
    type: number;
}

export interface StartTunaDownloadResponseData extends Record<string, never> {}

export interface LaunchTunaWebDialogParams {
    urlModel: {
        url: string;
        openType: number;
        jumpProtocolWhitelist: string[];
        allowH5Download: boolean;
        showAfterResetHeight: boolean;
        webThemeType: string;
        tachikomaUrl: string;
        halfScreenMaskState: string;
    };
    width: number;
    height: number;
    dialogStyle: number;
}

export interface LaunchTunaWebDialogResponseData extends Record<string, never> {}

export interface EmbedWebContentDidUpdateParams {
    height: number;
}

export interface EmbedWebContentDidUpdateResponseData extends Record<string, never> {}

export interface ReportVideoPlayEventParams {
    eventType: number;
    open: number;
}

export interface ReportVideoPlayEventResponseData {
    data: {
        eventType: number;
        open: number;
    };
}

export interface ReceiveModuleUpdateMsgParams {
    moduleId: string;
    data: Record<string, unknown>;
}

export interface ReceiveModuleUpdateMsgResponseData extends Record<string, never> {}

export interface UpdateLivePrepareEarnMoneyStatusParams {
    buttonText: string;
    action: number;
    bizConfig: {
        bizType: string;
        bizId: string;
        bizDataId: string;
    };
    actionUrl: Record<string, unknown>;
}

export interface UpdateLivePrepareEarnMoneyStatusResponseData extends Record<string, never> {}

export interface ActionLoggerParams {
    level: number;
    tag: string;
    message: string;
}

export interface ActionLoggerResponseData extends Record<string, never> {}

export interface UpdateProfileUserTypeParams {
    userType: number;
}

export interface UpdateProfileUserTypeResponseData extends Record<string, never> {}

export interface ShowBottomAlertParams {
    title: string;
    message: string;
    actionTitle: string;
    isAddToWindow?: boolean | undefined;
}

export interface ShowBottomAlertResponseData extends Record<string, never> {}

export interface GetGroupInfoParams {
    groupId: string;
    fromServer?: boolean | undefined;
}

export interface GetGroupInfoResponseData {
    data: {
        role: number;
        groupJoinMode: number;
        groupId: string;
        maxManagerCount: number;
        isMuteAll: boolean;
        invitePermissionType: number;
        groupType: number;
        groupNumber: string;
        groupName: string;
        memberCount: number;
        groupHeadUrl: string;
        joinPermission: number;
        groupOriginHeadUrl: string;
    };
}

export interface OpenLiveSlideContainerWithParamsParams extends Record<string, never> {}

export interface OpenLiveSlideContainerWithParamsResponseData extends Record<string, never> {}

export interface GetCdnHostParams {
    hostGroupType:
        | 'business'
        | 'game'
        | 'feed'
        | 'middleware'
        | 'merchant'
        | 'live'
        | 'social'
        | 'post'
        | 'platform'
        | 'idc_eshop_app'
        | 'idc_zt_ppg'
        | 'idc_api_appm'
        | 'idc_eshoppay_www'
        | 'idc_api_live'
        | 'cdn_platform_design';
}

export interface GetCdnHostResponseData {
    host: string;
}

export interface ShowTreasureBoxPriseDialogParams {
    prise: string;
}

export interface ShowTreasureBoxPriseDialogResponseData extends Record<string, never> {}

export interface UpdatePLCParams {
    photoId: string;
    bizType?: number | undefined;
}

export interface UpdatePLCResponseData extends Record<string, never> {}

export interface UpdateNavigationBarParams {
    titleText?: string | undefined;
    leftIcons?: {
        iconUrl: string;
        iconUrlDark: string;
        actionType: string;
    }[];
    rightIcons?: {
        iconUrl: string;
        iconUrlDark: string;
        actionType: string;
    }[];
}

export interface UpdateNavigationBarResponseData {
    data?: {
        titleText?: string;
        leftIcons?: {
            iconUrl: string;
            iconUrlDark: string;
            actionType: number;
        }[];
        rightIcons?: {
            iconUrl: string;
            iconUrlDark: string;
            actionType: string;
        }[];
    };
}

export interface NebulaStartGatewayWithdrawParams {
    url: string;
}

export interface NebulaStartGatewayWithdrawResponseData extends Record<string, never> {}

export interface UploadContactsParams extends Record<string, never> {}

export interface UploadContactsResponseData extends Record<string, never> {}

export interface AddNavigationBarParams {
    leftIcons?: {
        iconUrl: string;
        iconUrlDark: string;
        actionType: number;
    }[];
    rightIcons?: {
        iconUrl: string;
        iconUrlDark: string;
        actionType: number;
    }[];
}

export interface AddNavigationBarResponseData {
    data?: {
        titleText?: string;
        leftIcons: {
            iconUrl: string;
            iconUrlDark: string;
            actionType: number;
        }[];
        rightIcons: {
            iconUrl: string;
            iconUrlDark: string;
            actionType: number;
        }[];
    };
}

export interface GetSmartAlbumDataParams {
    count: number;
    period: number;
    maxCoverWidth: number;
}

export interface GetSmartAlbumDataResponseData {
    data: {
        coverPath: string;
        subTitle: string;
        identifier: string;
        title: string;
        shown: boolean;
    };
}

export interface EditDraftParams {
    identifier: string;
    coverPath?: string | undefined;
    isReturnToWeb: boolean;
}

export interface EditDraftResponseData extends Record<string, never> {}

export interface GetEditDraftDataParams {
    count: number;
    period: number;
}

export interface GetEditDraftDataResponseData {
    data: {
        coverPath: string;
        subTitle: string;
        identifier: string;
        lastModified: number;
    };
}

export interface EditSmartAlbumParams {
    identifier: string;
    coverPath?: string | undefined;
    isReturnToWeb: boolean;
}

export interface EditSmartAlbumResponseData extends Record<string, never> {}

export interface HasInstalledAppParams {
    identifier: string;
}

export interface HasInstalledAppResponseData {
    isInstalled: boolean;
}

export interface Sf2022GetWifiInfoParams extends Record<string, unknown> {}

export interface Sf2022GetWifiInfoResponseData extends Record<string, any> {}

export interface SystemGetWifiInfoParams extends Record<string, never> {}

export interface SystemGetWifiInfoResponseData {
    bassid: string;
    ssid: string;
}

export interface SetClipBoardParams {
    text: string;
}

export interface SetClipBoardResponseData extends Record<string, never> {}

export interface UpdateAnchorFollowStatusParams {
    follow: number;
}

export interface UpdateAnchorFollowStatusResponseData extends Record<string, never> {}

export interface QueryAnchorFollowStatusParams extends Record<string, never> {}

export interface QueryAnchorFollowStatusResponseData {
    follow: number;
}

export interface QueryOpenIdParams {
    appId: string;
}

export interface QueryOpenIdResponseData {
    openId: string;
}

export interface GetRandomMusicSimpleInfoFromKSwitchKeyParams {
    kswitchKey: string;
}

export interface GetRandomMusicSimpleInfoFromKSwitchKeyResponseData {
    musicId: string;
    musicType: number;
}

export interface MerchantJumpToPreviewParams {
    params?: {
        uploadMediaPath: string[];
        costEffectiveScore: number;
        comment: string;
        musicId: string;
        musicType: number;
        initTag: string;
        defaultMediaUrl: string;
        goodsId: string;
        commentId?: string | undefined;
        goodsDescribe: string;
    };
    draftId?: string | undefined;
}

export interface MerchantJumpToPreviewResponseData extends Record<string, never> {}

export interface PublishFromDraftIdParams {
    draftId: string;
    commentId: string;
    isNormalPublish: boolean;
}

export interface PublishFromDraftIdResponseData extends Record<string, never> {}

export interface PublishFromMerchantParamsParams {
    params: {
        uploadMediaPath: string[];
        costEffectiveScore: number;
        comment: string;
        musicId: string;
        musicType: number;
        initTag: string;
        defaultMediaUrl: string;
        goodsId: string;
        commentId?: string | undefined;
        goodsDescribe: string;
    };
    isNormalPublish: boolean;
}

export interface PublishFromMerchantParamsResponseData extends Record<string, never> {}

export interface CacheRoamCityDataParams extends Record<string, never> {}

export interface CacheRoamCityDataResponseData extends Record<string, never> {}

export interface FetchUsersOnlineStatusParams {
    subBiz?: string | undefined;
    uids: string[];
}

export interface FetchUsersOnlineStatusResponseData {
    resultCode: number;
    data: {
        userId: string;
        status: number;
        lastOfflineTime: number;
    }[];
    errorInfo: Record<string, any>;
}

export interface GetUseTimeParams extends Record<string, never> {}

export interface GetUseTimeResponseData {
    data: Record<string, any>[];
}

export interface GetRestIntervalParams extends Record<string, never> {}

export interface GetRestIntervalResponseData {
    data: number;
}

export interface SetRestIntervalParams {
    interval: number;
}

export interface SetRestIntervalResponseData extends Record<string, never> {}

export interface GetSleepIntervalsParams extends Record<string, never> {}

export interface GetSleepIntervalsResponseData {
    data: number[];
}

export interface SetSleepIntervalsParams {
    intervals: number[];
}

export interface SetSleepIntervalsResponseData extends Record<string, never> {}

export interface OpenFeedSlideParams {
    backTitle: string;
    selectedPhoto: Record<string, unknown>;
    selectedPhotoIndex: number;
    param: {
        moduleId: string;
    };
    feedList: Record<string, unknown>[];
    url: string;
    parsePath: string;
}

export interface OpenFeedSlideResponseData extends Record<string, never> {}

export interface PublishRubasParams {
    event: string;
    payload?: unknown;
    token?: unknown;
}

export interface PublishRubasResponseData {
    null: unknown;
}

export interface SetRubasDimensionParams {
    key: string;
    value: string;
}

export interface SetRubasDimensionResponseData {
    null?: unknown;
}

export interface SetRubasDimensionBatchParams {
    dimensions: Record<string, unknown>;
}

export interface SetRubasDimensionBatchResponseData {
    null?: unknown;
}

export interface NearbyPoisParams {
    pcursor: string;
    page: number;
    extParams: string;
    location: Record<string, unknown>;
    poiBiz: string;
    poiSubBiz: string;
}

export interface NearbyPoisResponseData {
    locations: string[];
    extParams: string;
    pcursor: string;
    hasMore: boolean;
    page: number;
}

export interface SearchKeywordPoisParams {
    keyword: string;
    pcursor?: string | undefined;
    page?: string | undefined;
    extParams?: string | undefined;
    location?: Record<string, unknown>;
    cityName?: string | undefined;
    poiBiz?: string | undefined;
    poiSubBiz: string;
}

export interface SearchKeywordPoisResponseData {
    locations?: Record<string, any>[];
    extParams?: string;
    pcursor?: string;
    hasMore?: string;
    page?: string;
}

export interface IsPadParams extends Record<string, never> {}

export interface IsPadResponseData {
    isPad: boolean;
}

export interface DeviceIsLandscapeParams extends Record<string, never> {}

export interface DeviceIsLandscapeResponseData {
    isLandscape: boolean;
}

export interface RecommendPoisParams {
    extParams?: string | undefined;
    location?: {
        latitude: number;
        longitude: number;
    };
    poiBiz: string;
    poiSubBiz: string;
}

export interface RecommendPoisResponseData {
    data: {
        extParams?: string;
        pcursor?: string;
        hasMore?: string;
        page?: number;
    };
    error: Record<string, any>;
}

export interface AddShortcutParams {
    uri: string;
    shortcutId: string;
    name: string;
    icon?: string | undefined;
    updateIfExist?: boolean | undefined;
}

export interface AddShortcutResponseData extends Record<string, never> {}

export interface RemoveFansParams {
    userId: string;
}

export interface RemoveFansResponseData extends Record<string, never> {}

export interface RequestParams {
    config: {
        url: string;
    };
}

export interface RequestResponseData extends Record<string, never> {}

export interface GetEapiRequestParamsParams extends Record<string, never> {}

export interface GetEapiRequestParamsResponseData {
    appInfo: string;
    deviceInfo: string;
    networkInfo: string;
    userInfo: string;
}

export interface OpenMidGroundUrlParams {
    url: string;
    isTranslucent: string;
}

export interface OpenMidGroundUrlResponseData extends Record<string, never> {}

export interface SearchFollowUsersParams {
    keyword: string;
}

export interface SearchFollowUsersResponseData {
    users: Record<string, any>[];
}

export interface SyncFollowUsersParams {
    syncType: number;
}

export interface SyncFollowUsersResponseData extends Record<string, never> {}

export interface UpdateFollowUsersParams {
    users: Record<string, unknown>[];
}

export interface UpdateFollowUsersResponseData extends Record<string, never> {}

export interface EditRemarkNameParams {
    userId: string;
}

export interface EditRemarkNameResponseData extends Record<string, never> {}

export interface SearchFriendUsersParams {
    keyword: string;
}

export interface SearchFriendUsersResponseData {
    users: string[];
}

export interface KwaiPopCustomFuncParams {
    name: string;
    params?: Record<string, unknown>;
}

export interface KwaiPopCustomFuncResponseData extends Record<string, never> {}

export interface RecordVideoAndUploadParams {
    successEventName: string;
}

export interface RecordVideoAndUploadResponseData {
    successEventName: string;
}

export interface SearchChatParams {
    keyword: string;
    limitCount: number;
    enableSearchP2PChat: boolean;
    enableSearchPublicGroup: boolean;
    enableSearchPrivateGroup: boolean;
    enableSearchAllGroup: boolean;
    enableSearchMessage: boolean;
}

export interface SearchChatResponseData {
    errorMsg: string;
    data: {
        type: string;
        hasMore: string;
        data: Record<string, any>;
    }[];
}

export interface JumpToSessionWhiteListParams {
    conversationId: string;
    conversationType: number;
    subBiz: string;
}

export interface JumpToSessionWhiteListResponseData extends Record<string, never> {}

export interface OpenGrowthYodaParams {
    heightRatioPercent: number;
    topCornerRadius: number;
    url: string;
    yodaParams: Record<string, unknown>;
}

export interface OpenGrowthYodaResponseData extends Record<string, never> {}

export interface PostFlyWheelLogicEventParams {
    eventName: string;
    payload: string;
    needCache?: boolean | undefined;
}

export interface PostFlyWheelLogicEventResponseData extends Record<string, never> {}

export interface ReadFlyWheelLogicEventCacheParams {
    eventName: string;
}

export interface ReadFlyWheelLogicEventCacheResponseData {
    eventName: string;
    payload?: string;
    hasCache: boolean;
}

export interface GetAllGroupListParams extends Record<string, never> {}

export interface GetAllGroupListResponseData extends Record<string, never> {}

export interface DeleteRedDotParams {
    type: number;
}

export interface DeleteRedDotResponseData extends Record<string, never> {}

export interface GetAliasByUserIdsParams {
    userIds: string[];
}

export interface GetAliasByUserIdsResponseData {
    aliasList: unknown;
}

export interface RequestAndCallVirtualPhoneParams {
    userId: string;
    virtualPhone?: {
        phone?: string | undefined;
        backupPhone?: string | undefined;
        phoneTimeOut?: number | undefined;
        phoneExpiryTimestamp?: number | undefined;
        backupPhoneExpiryTimestamp?: number | undefined;
        source?: string | undefined;
        localPhoneNumber?: string | undefined;
    };
    adCallback?: string | undefined;
}

export interface RequestAndCallVirtualPhoneResponseData extends Record<string, never> {}

export interface UpdateCacheRemarkNameParams {
    userId: string;
    remarkName?: string | undefined;
}

export interface UpdateCacheRemarkNameResponseData extends Record<string, never> {}

export interface EarlyClosePiggyBankTaskParams extends Record<string, never> {}

export interface EarlyClosePiggyBankTaskResponseData extends Record<string, never> {}

export interface StartKwaiCoinRechargeParams extends Record<string, never> {}

export interface StartKwaiCoinRechargeResponseData extends Record<string, never> {}

export interface HealthySlideActionParams {
    action: number;
    slideId: string;
    photoId: string;
}

export interface HealthySlideActionResponseData extends Record<string, never> {}

export interface IsLiveFloatingWindowShowingParams extends Record<string, never> {}

export interface IsLiveFloatingWindowShowingResponseData extends Record<string, never> {}

export interface GetRPRInfoParams {
    activityId: string;
    roundIndex: number;
}

export interface GetRPRInfoResponseData extends Record<string, never> {}

export interface RetryRPRParams {
    activityId: string;
    roundIndex: number;
}

export interface RetryRPRResponseData extends Record<string, never> {}

export interface DownloadParams {
    action: 'start' | 'resume' | 'pause' | 'stop';
    url: string;
    fileType?: string | undefined;
    photoId?: number | undefined;
    clickType?: number | undefined;
    downloadId?: string | undefined;
    notificationHidden?: boolean | undefined;
    extraInfo?: string | undefined;
    downloadName?: string | undefined;
    notForceReDownload?: boolean | undefined;
    customExtension?: string | undefined;
}

export interface DownloadResponseData {
    stage: 'start' | 'resume' | 'progress' | 'complete';
    percent?: number;
}

export interface FollowFansListSettingsParams extends Record<string, never> {}

export interface FollowFansListSettingsResponseData extends Record<string, never> {}

export interface HideNewJoinFriendsPointParams extends Record<string, never> {}

export interface HideNewJoinFriendsPointResponseData extends Record<string, never> {}

export interface GetContainerStatusParams extends Record<string, never> {}

export interface GetContainerStatusResponseData {
    data?: {
        status: string;
        availableSize: {
            width: number;
            height: number;
        };
        rect: {
            height: number;
            width: number;
            x: number;
            y: number;
        };
        safeArea: {
            bottom: number;
            top: number;
            left: number;
            right: number;
        };
    };
}

export interface SetContainerStatusParams {
    status: number;
}

export interface SetContainerStatusResponseData extends Record<string, never> {}

export interface PayParams {
    payData: string;
    type: string;
}

export interface PayResponseData extends Record<string, never> {}

export interface QueryEnergyParams extends Record<string, never> {}

export interface QueryEnergyResponseData {
    balance: number;
}

export interface GetTokenParams extends Record<string, never> {}

export interface GetTokenResponseData {
    token: string;
}

export interface SwitchAggregationVideoParams {
    photoId: string;
    poiBarDetailSessionId: string;
}

export interface SwitchAggregationVideoResponseData extends Record<string, never> {}

export interface GetSlideBackParams extends Record<string, never> {}

export interface GetSlideBackResponseData {
    enabled: boolean;
}

export interface SetSlideBackParams {
    enabled: boolean;
}

export interface SetSlideBackResponseData extends Record<string, never> {}

export interface UpdateLivePrepareEarnMLocalLifeStatusParams {
    action: string;
}

export interface UpdateLivePrepareEarnMLocalLifeStatusResponseData extends Record<string, never> {}

export interface GetStorageParams {
    key: string;
}

export interface GetStorageResponseData extends Record<string, never> {}

export interface PauseOfflineParams {
    photoId: string;
}

export interface PauseOfflineResponseData extends Record<string, never> {}

export interface ResumeOfflineParams {
    photoId: string;
}

export interface ResumeOfflineResponseData extends Record<string, never> {}

export interface SetStorageParams {
    key: string;
    value: string;
}

export interface SetStorageResponseData extends Record<string, never> {}

export interface GetOfflineCacheListParams extends Record<string, never> {}

export interface GetOfflineCacheListResponseData extends Record<string, never> {}

export interface DeleteOfflineCacheParams extends Record<string, never> {}

export interface DeleteOfflineCacheResponseData extends Record<string, never> {}

export interface ToOfflineCacheListPageParams extends Record<string, never> {}

export interface ToOfflineCacheListPageResponseData extends Record<string, never> {}

export interface SendActionsParams {
    pagePath?: string | undefined;
    viewIdentifier: string;
}

export interface SendActionsResponseData {
    errorCode: number;
}

export interface GetOfflineCachingListParams extends Record<string, never> {}

export interface GetOfflineCachingListResponseData extends Record<string, never> {}

export interface StartOfflineParams extends Record<string, never> {}

export interface StartOfflineResponseData extends Record<string, never> {}

export interface StartAllOfflineParams extends Record<string, never> {}

export interface StartAllOfflineResponseData extends Record<string, never> {}

export interface PauseAllOfflineParams extends Record<string, never> {}

export interface PauseAllOfflineResponseData extends Record<string, never> {}

export interface EnableRedDotRestrainParams {
    category?: string | undefined;
    subBiz?: string | undefined;
}

export interface EnableRedDotRestrainResponseData {
    data: boolean;
}

export interface SetSandeagoMaxNumParams {
    maxNum: number;
}

export interface SetSandeagoMaxNumResponseData extends Record<string, never> {}

export interface SystemOpenToolSwitchParams {
    type: number;
    liveStreamId: string;
}

export interface SystemOpenToolSwitchResponseData extends Record<string, never> {}

export interface MerchantOpenToolSwitchParams {
    type: number;
    liveStreamId: string;
}

export interface MerchantOpenToolSwitchResponseData extends Record<string, never> {}

export interface CloseToolSwitchParams {
    type: number;
    liveStreamId: string;
}

export interface CloseToolSwitchResponseData extends Record<string, never> {}

export interface GetConversationInfoParams {
    subBiz: string;
    conversationType?: string | undefined;
    conversationId: string;
}

export interface GetConversationInfoResponseData {
    subBiz: string;
    conversationType: number;
    conversationId: string;
    mute: boolean;
    stickyOnTop: boolean;
}

export interface SetConversationMuteParams {
    subBiz: string;
    type: number;
    conversationId: string;
    isMute: boolean;
}

export interface SetConversationMuteResponseData {
    subBiz: string;
    type: string;
    conversationId: string;
    isMute: string;
}

export interface LoadConversationListParams {
    subBiz: string;
    category: number;
    lastConversation: string;
}

export interface LoadConversationListResponseData {
    models: {
        conversationType: number;
        conversationId: string;
        name: string;
        url: string;
    }[];
    lastConversation: string;
    hasMore: boolean;
}

export interface SetConversationStickyOnTopParams {
    subBiz: string;
    conversationType: number;
    conversationId: string;
    isStickOnTop: boolean;
}

export interface SetConversationStickyOnTopResponseData extends Record<string, never> {}

export interface DeleteConversationMessageParams {
    subBiz: string;
    conversationType: string;
    conversationId: string;
}

export interface DeleteConversationMessageResponseData {
    success: boolean;
}

export interface OpenLiveFeedParams {
    sourceType: number;
    liveSquareSource: number;
    path: string;
    disableLoadMore: boolean;
    liveStreamId: string;
    feeds: Record<string, unknown>;
}

export interface OpenLiveFeedResponseData extends Record<string, never> {}

export interface ShowSelectOnGameAlertParams {
    selectedCompetionIds: string;
}

export interface ShowSelectOnGameAlertResponseData {
    selectedCompetionIds: string;
}

export interface ShowSelectOnCalenderAlertParams {
    selectedCompetionIds: string;
}

export interface ShowSelectOnCalenderAlertResponseData {
    selectedTime: string;
}

export interface GetUAGConfigParams extends Record<string, never> {}

export interface GetUAGConfigResponseData {
    data: Record<string, any>;
}

export interface GetUAGSubConfigParams {
    subKey: string;
}

export interface GetUAGSubConfigResponseData {
    data: Record<string, any>;
}

export interface NoticeConversationBlackListParams {
    blockedUid: string;
    ownerUid: string;
    isAddToBlackList: boolean;
}

export interface NoticeConversationBlackListResponseData extends Record<string, never> {}

export interface LoadRejectConversationListParams {
    subBiz: string;
    offset: string;
    pageSize: number;
}

export interface LoadRejectConversationListResponseData {
    models: {
        conversationType: string;
        conversationId: string;
        name: string;
        url: string;
    }[];
    offset: string;
    hasMore: string;
}

export interface SetConversationReceiveMessageParams {
    subBiz: string;
    conversationType: number;
    conversationId: string;
    isReceiveMessage: boolean;
}

export interface SetConversationReceiveMessageResponseData extends Record<string, never> {}

export interface BatchGetUserInfoParams {
    userInfoItems: {
        subBiz: string;
        type: string;
        targetId: number;
    }[];
    groupId?: string | undefined;
    fromServer?: string | undefined;
}

export interface BatchGetUserInfoResponseData {
    data: {
        userId: string;
        userName: string;
        headUrl: string;
        verifiedDetail: {
            iconType: number;
        };
        relationType: number;
        gender: string;
        headUrls: string[];
        officialAccountType: number;
        blocked: boolean;
        tag: string;
        userPendantIconUrl: string;
    }[];
}

export interface SocialJumpToEditGroupNamePageParams extends Record<string, never> {}

export interface SocialJumpToEditGroupNamePageResponseData extends Record<string, never> {}

export interface ImJumpToEditGroupNamePageParams {
    groupId: string;
    ' groupType': number;
    name: string;
    isGroupName: boolean;
}

export interface ImJumpToEditGroupNamePageResponseData extends Record<string, never> {}

export interface RefreshGroupInfoParams {
    groupId: string;
}

export interface RefreshGroupInfoResponseData extends Record<string, never> {}

export interface SyncFollowsFansPrivacyParams {
    privacy: number;
}

export interface SyncFollowsFansPrivacyResponseData extends Record<string, never> {}

export interface GetGroupMembersParams {
    groupId: string;
    maxCount: number;
}

export interface GetGroupMembersResponseData extends Record<string, never> {}

export interface GetFriendUsersParams {
    enableFetchFullAfterColdStart: boolean;
}

export interface GetFriendUsersResponseData {
    data: {
        users: {
            userId: string;
            userName: string;
            headUrl: string;
            gender: string;
            relation: string;
        }[];
    };
}

export interface GetFollowUsersParams {
    enableFetchFullAfterColdStart: boolean;
}

export interface GetFollowUsersResponseData {
    data: {
        users: {
            userId: string;
            userName: string;
            headUrl: string;
            gender: string;
            relation: string;
        }[];
    };
}

export interface InviteGroupUsersParams {
    groupId: string;
    userIds: string[];
    desc?: string | undefined;
}

export interface InviteGroupUsersResponseData extends Record<string, never> {}

export interface OpenGroupMemberManageActivityParams {
    groupId: string;
}

export interface OpenGroupMemberManageActivityResponseData extends Record<string, never> {}

export interface HideWanfaPanelParams extends Record<string, never> {}

export interface HideWanfaPanelResponseData extends Record<string, never> {}

export interface SystemGotoGroupMemberListParams {
    groupId: string;
}

export interface SystemGotoGroupMemberListResponseData extends Record<string, never> {}

export interface ImGotoGroupMemberListParams {
    groupId: string;
}

export interface ImGotoGroupMemberListResponseData extends Record<string, never> {}

export interface SetGroupStickyTopParams {
    groupId: string;
    targetType: string;
    isOpened: string;
}

export interface SetGroupStickyTopResponseData extends Record<string, never> {}

export interface GotoGroupQrCodePageParams {
    groupId: string;
}

export interface GotoGroupQrCodePageResponseData extends Record<string, never> {}

export interface ReportGroupParams {
    groupId: string;
    refer: string;
    preRefer: string;
    sourceType: string;
}

export interface ReportGroupResponseData extends Record<string, never> {}

export interface ImParams {
    groupId: string;
}

export interface ImResponseData extends Record<string, never> {}

export interface DelAllMessageParams {
    groupId: string;
}

export interface DelAllMessageResponseData {
    res: string;
}

export interface ExitGroupParams {
    groupId: string;
    isDestroyGroup: boolean;
}

export interface ExitGroupResponseData extends Record<string, never> {}

export interface GetStartupConfigParams {
    keys: string[];
}

export interface GetStartupConfigResponseData {
    data: Record<string, any>[];
}

export interface LaunchMediaSceneV2Params {
    postParams: {
        templateId: number;
        sceneType: number;
        requireAlbum?: boolean | undefined;
        requirePreview?: boolean | undefined;
        useCommonInterface: boolean;
        topColor?: string | undefined;
        bottomColor?: string | undefined;
        bizParams?: string | undefined;
        returnOriginPage?: boolean | undefined;
        allowJumpToolbox?: boolean | undefined;
        loadingTitle?: string[];
        loadingSubtitle?: string[];
        argsMap?: Record<string, unknown>;
        skipSessionEndWaiting?: boolean | undefined;
    };
}

export interface LaunchMediaSceneV2ResponseData extends Record<string, never> {}

export interface ExecuteRPNParams {
    context: Record<string, unknown>;
    dsl: string;
}

export interface ExecuteRPNResponseData extends Record<string, never> {}

export interface LockFlyWheelTaskTypeParams {
    taskType: number;
}

export interface LockFlyWheelTaskTypeResponseData extends Record<string, never> {}

export interface GetDisplaySettingParams extends Record<string, never> {}

export interface GetDisplaySettingResponseData {
    nativeScale: string;
}

export interface SameFollowPageShouldShowTipsParams extends Record<string, never> {}

export interface SameFollowPageShouldShowTipsResponseData extends Record<string, never> {}

export interface CreatePrivateGroupParams {
    userIds: string[];
}

export interface CreatePrivateGroupResponseData {
    data: {
        groupId: string;
    };
}

export interface SendPrivateMessageParams extends Record<string, never> {}

export interface SendPrivateMessageResponseData extends Record<string, never> {}

export interface OpenGroupMemberManagePageParams {
    groupId: string;
}

export interface OpenGroupMemberManagePageResponseData extends Record<string, never> {}

export interface DeleteGroupMessageParams {
    groupId: string;
}

export interface DeleteGroupMessageResponseData extends Record<string, never> {}

export interface RegisterFeedBackMenuParams {
    scene: string;
    feedbackTitle: string;
    feedbackIcon: string;
    clickAction: {
        nameSpace: string;
        methodName: string;
        params: string;
    };
}

export interface RegisterFeedBackMenuResponseData extends Record<string, never> {}

export interface ReportAdLogParams {
    reportType: number;
    clickType: number;
    feedData: string;
    adPlacePosition: string;
    itemId: string;
    llsid: string;
    posSequence?: string | undefined;
}

export interface ReportAdLogResponseData extends Record<string, never> {}

export interface CheckTvVipStatusParams extends Record<string, never> {}

export interface CheckTvVipStatusResponseData extends Record<string, never> {}

export interface SendParams {
    command: string;
    subBiz?: string | undefined;
    requestData: string;
    cacheTimeoutInMilliseconds?: number | undefined;
    transferTimeoutInMilliseconds?: number | undefined;
    logParam?: string | undefined;
}

export interface SendResponseData {
    command: string;
    errorCode: number;
    errorMessage: string;
    logParam: string;
    responseData: string;
    subBiz: string;
}

export interface GetInstanceIdParams extends Record<string, never> {}

export interface GetInstanceIdResponseData {
    instanceId: string;
}

export interface MayReconnectImmediatelyParams extends Record<string, never> {}

export interface MayReconnectImmediatelyResponseData extends Record<string, never> {}

export interface ShowStatusToastParams {
    text: string;
    toastIcon: string;
    duration: string;
    isAddToWindow: string;
}

export interface ShowStatusToastResponseData extends Record<string, never> {}

export interface RequestLocationWithoutCustomDialogParams {
    biz: string;
    statKey?: string | undefined;
    alertScene?: string | undefined;
    updateLocationScene?: string | undefined;
}

export interface RequestLocationWithoutCustomDialogResponseData {
    longitude: number;
    latitude: number;
    address: string;
    locationTime: number;
    country: string;
    province: string;
    city: string;
    subLocality?: string;
}

export interface HasNavigationBarParams {
    '\u65E0': string;
}

export interface HasNavigationBarResponseData {
    hasNavibar: string;
}

export interface InitMusicListPlayerParams extends Record<string, never> {}

export interface InitMusicListPlayerResponseData extends Record<string, never> {}

export interface OpenYodaWebViewParams {
    url: string;
}

export interface OpenYodaWebViewResponseData extends Record<string, never> {}

export interface FetchSceneAlbumParams {
    size?: {
        width?: number | undefined;
        height?: number | undefined;
    };
    timeRange?: number | undefined;
}

export interface FetchSceneAlbumResponseData {
    data: {
        identifier: string;
        coverPath: string;
    };
}

export interface GetScreenBrightnessParams extends Record<string, never> {}

export interface GetScreenBrightnessResponseData {
    value: number;
}

export interface SetScreenBrightnessParams {
    value: number;
}

export interface SetScreenBrightnessResponseData extends Record<string, never> {}

export interface UpdateNativeMusicPlayerParams {
    musics: Record<string, unknown>;
    isLoadMore: boolean;
    currentMusic: Record<string, unknown>;
    isFromClick: boolean;
}

export interface UpdateNativeMusicPlayerResponseData extends Record<string, never> {}

export interface ShareGroupQRParams {
    imShareId: string;
    iconUrl: string;
    url: string;
    title: string;
    desc: string;
    name: string;
    style: number;
    snapshot: string;
}

export interface ShareGroupQRResponseData extends Record<string, never> {}

export interface FetchMagicFaceBriefInfoParams {
    magicFaceId: number;
    businessId?: number | undefined;
    timeout: number;
}

export interface FetchMagicFaceBriefInfoResponseData {
    data: {
        result: boolean;
        name?: string;
        coverPath: string;
    };
}

export interface FetchMagicFacePanelBriefInfoParams {
    businessId?: number | undefined;
    groupType?: number | undefined;
    index?: number | undefined;
}

export interface FetchMagicFacePanelBriefInfoResponseData {
    data: {
        result: boolean;
        name: string;
        coverPath: string;
    };
}

export interface StartOneStepPayParams {
    source?: string | undefined;
    merchant_id: string;
    out_trade_no: string;
    pay_result: string;
    extra?: string | undefined;
}

export interface StartOneStepPayResponseData extends Record<string, never> {}

export interface FetchSchemeParams extends Record<string, never> {}

export interface FetchSchemeResponseData {
    data: {
        scheme: string;
    };
}

export interface GetSubTabHeightParams extends Record<string, never> {}

export interface GetSubTabHeightResponseData {
    jsonObject: number;
}

export interface OpenVideoFeedListPageParams {
    feedList: string;
}

export interface OpenVideoFeedListPageResponseData extends Record<string, never> {}

export interface GetSystemLocationPermissionParams extends Record<string, never> {}

export interface GetSystemLocationPermissionResponseData {
    hasPermission: boolean;
}

export interface GetUserLocationPermissionParams {
    biz: string;
}

export interface GetUserLocationPermissionResponseData {
    hasPermission: boolean;
}

export interface IsUserLocationInCoolDownTimeParams {
    biz: string;
}

export interface IsUserLocationInCoolDownTimeResponseData {
    inCoolDownTime: boolean;
}

export interface SystemUpdateLivePrepareEarnMHouseStatusParams {
    action: string;
}

export interface SystemUpdateLivePrepareEarnMHouseStatusResponseData extends Record<string, never> {}

export interface HouseUpdateLivePrepareEarnMHouseStatusParams {
    action: string;
}

export interface HouseUpdateLivePrepareEarnMHouseStatusResponseData extends Record<string, never> {}

export interface InstallAppParams {
    path: string;
}

export interface InstallAppResponseData extends Record<string, never> {}

export interface GetPageLogContextParams {
    pageId: string;
}

export interface GetPageLogContextResponseData {
    pageLogContext: string;
}

export interface LocalHouseConsultSuccessBridgeParams {
    userId: string;
    agentId: string;
    consultType: number;
}

export interface LocalHouseConsultSuccessBridgeResponseData extends Record<string, never> {}

export interface NotifyNativePlayerAppStateDidChangeParams extends Record<string, never> {}

export interface NotifyNativePlayerAppStateDidChangeResponseData {
    rootTag: string;
    appState: string;
}

export interface GetGroupMemberIdsParams {
    groupId: string;
}

export interface GetGroupMemberIdsResponseData {
    data: string[];
}

export interface SetInterestEditListParams {
    submitList: {
        interestId: string;
        weight: number;
    }[];
}

export interface SetInterestEditListResponseData extends Record<string, never> {}

export interface StartAtEditorParams {
    params: string;
}

export interface StartAtEditorResponseData extends Record<string, never> {}

export interface HidePoiCommentElementParams {
    poiId: string;
    needToHide: boolean;
}

export interface HidePoiCommentElementResponseData extends Record<string, never> {}

export interface NotifyNativeFindSecondFloorCloseParams extends Record<string, never> {}

export interface NotifyNativeFindSecondFloorCloseResponseData extends Record<string, never> {}

export interface LaunchYearAlbum2022Params {
    taskId: string;
    enterType: number;
    activity: string;
}

export interface LaunchYearAlbum2022ResponseData extends Record<string, never> {}

export interface PrefetchImageToDiskParams {
    urls: string[];
}

export interface PrefetchImageToDiskResponseData {
    urls?: {
        url: string;
        error: string;
    }[];
}

export interface IsAddIntimateWidgetParams extends Record<string, never> {}

export interface IsAddIntimateWidgetResponseData {
    widgetStatus: number;
}

export interface GetAdInfoParams {
    uniqueId: string;
}

export interface GetAdInfoResponseData {
    adCallbackParam: string;
}

export interface PreloadYearAlbumResourceParams extends Record<string, never> {}

export interface PreloadYearAlbumResourceResponseData extends Record<string, never> {}

export interface ClearYearAlbumResourceParams extends Record<string, never> {}

export interface ClearYearAlbumResourceResponseData extends Record<string, never> {}

export interface PullTietieChatPanelParams {
    tietieInfo: {
        user: {
            intimateType: number;
            intimateLevel: number;
            descColor: string;
            user_id: string;
            user_name: string;
            user_sex: string;
            headurls: Record<string, unknown>[];
            headurl: string;
            remarkName: string;
        };
        tietieId: string;
        foregroundImage: Record<string, unknown>[];
        backgroundImage: Record<string, unknown>[];
        publishTime?: number | undefined;
        type?: number | undefined;
    };
    lastText: string;
    type: number;
}

export interface PullTietieChatPanelResponseData {
    code: number;
    text: string;
}

export interface GeneralIAPPurchaseParams {
    fen: number;
    iapItemName: string;
    source: string;
    verifyData: string;
}

export interface GeneralIAPPurchaseResponseData {
    code: string;
    error_desc: string;
    transactionId: string;
}

export interface GoToPostParams {
    subBiz: string;
    shouldAnimated?: boolean | undefined;
    taskId?: string | undefined;
    extraParam?: {
        key: string;
        value: string;
    }[];
}

export interface GoToPostResponseData extends Record<string, never> {}

export interface PublishToMiddlePlatformParams {
    bizCustomParam?: string | undefined;
    mediaType: string;
    filePathList: string[];
    caption?: string | undefined;
    content?: string | undefined;
    subBiz: string;
}

export interface PublishToMiddlePlatformResponseData {
    data: {
        progress: number;
        status: string;
        ztPhotoId: string;
    };
}

export interface FetchExtActivityInfoParams {
    toString: string;
}

export interface FetchExtActivityInfoResponseData {
    data: string;
}

export interface IsSavedOrPublishedPhotoParams {
    activityId: string;
}

export interface IsSavedOrPublishedPhotoResponseData extends Record<string, never> {}

export interface RegisterTroubleShootingParams {
    pageId: string;
}

export interface RegisterTroubleShootingResponseData extends Record<string, never> {}

export interface UnRegisterTroubleShootingParams {
    pageId: string;
}

export interface UnRegisterTroubleShootingResponseData extends Record<string, never> {}

export interface AddComponentNodeParams {
    pageId: string;
    parentNodeId: string;
    componentNode: {
        componentId: string;
        componentCode: string;
    };
}

export interface AddComponentNodeResponseData {
    AddNodeResult: {
        nodeId: string;
        isSuccess: boolean;
    };
}

export interface AddKeyNodeParams {
    pageId: string;
    parentNodeId: string;
    keyNode: {
        name: string;
        belong: string;
    };
}

export interface AddKeyNodeResponseData {
    AddNodeResult: {
        nodeId: string;
        isSuccess: boolean;
    };
}

export interface AddEnvKeyNodeParams {
    pageId: string;
    envNode: {
        name: string;
        belong: string;
    };
    parentNodeId: string;
}

export interface AddEnvKeyNodeResponseData {
    AddNodeResult: {
        nodeId: string;
        isSuccess: boolean;
    };
}

export interface AddOriginDataParams {
    pageId: string;
    name: string;
    type: string;
    keyMsg: string;
    content: string;
}

export interface AddOriginDataResponseData extends Record<string, never> {}

export interface AddDetailLogParams {
    pageId: string;
    nodeId: string;
    belong: string;
    tag: string;
    msg: string;
    params?: Record<string, unknown>;
    timeStamp?: number | undefined;
    isMarkNodeSuccess?: boolean | undefined;
    rubasParams?: {
        event?: string | undefined;
        token?: string | undefined;
        containerType?: string | undefined;
        dimensions?: string | undefined;
    };
    logLevel?: number | undefined;
    isAddedToErrorLog?: boolean | undefined;
}

export interface AddDetailLogResponseData extends Record<string, never> {}

export interface AddErrorLogParams {
    pageId: string;
    nodeId: string;
    belong: string;
    tag: string;
    msg: string;
    error: string;
    params?: Record<string, unknown>;
    timeStamp?: number | undefined;
    isMarkNodeFailed?: boolean | undefined;
    rubasParams?: {
        event?: string | undefined;
        token?: string | undefined;
        containerType?: string | undefined;
        dimensions?: string | undefined;
    };
}

export interface AddErrorLogResponseData extends Record<string, never> {}

export interface OpenTroubleShootingFloatingParams {
    routerSessionId: string;
    liveStreamId?: string | undefined;
    pageId?: string | undefined;
}

export interface OpenTroubleShootingFloatingResponseData extends Record<string, never> {}

export interface OpenTroubleShootingPageParams {
    routerSessionId: string;
    pageId: string;
}

export interface OpenTroubleShootingPageResponseData extends Record<string, never> {}

export interface ClearPageLogContextParams {
    pageId: string;
}

export interface ClearPageLogContextResponseData extends Record<string, never> {}

export interface ClearEnvParams {
    pageId: string;
}

export interface ClearEnvResponseData extends Record<string, never> {}

export interface ClearOriginDataParams {
    pageId: string;
}

export interface ClearOriginDataResponseData extends Record<string, never> {}

export interface ClearNodeListParams {
    pageId: string;
}

export interface ClearNodeListResponseData extends Record<string, never> {}

export interface ToAddWidgetParams {
    method: string;
}

export interface ToAddWidgetResponseData extends Record<string, never> {}

export interface GetQuickLoginInfoParams extends Record<string, never> {}

export interface GetQuickLoginInfoResponseData {
    userType: 'default' | 'kwai_user' | 'history' | 'phone';
    kpn?: 'kwai' | 'nebula';
    userName?: string;
    avatar?: string;
    phoneNumber?: string;
}

export interface QuickLoginParams {
    checkFromServer?: boolean | undefined;
    userType: 'kwai_user' | 'default' | 'history' | 'phone';
    isOtherLogin: boolean;
}

export interface QuickLoginResponseData extends Record<string, never> {}

export interface LocalHouseConsultUpdateBridgeParams {
    consultType: number;
}

export interface LocalHouseConsultUpdateBridgeResponseData extends Record<string, never> {}

export interface PauseResumeAllPlayerForReasonParams {
    pause: boolean;
    reason: string;
    photoSaveId: string;
}

export interface PauseResumeAllPlayerForReasonResponseData extends Record<string, never> {}

export interface KrnBizRequestFinalParams {
    isSuccess: boolean;
    rootTag: number;
}

export interface KrnBizRequestFinalResponseData extends Record<string, never> {}

export interface GetRoamCityInfoParams extends Record<string, never> {}

export interface GetRoamCityInfoResponseData extends Record<string, never> {}

export interface HouseBuildingConsultStateChangedParams {
    consultType: number;
    buildingId: string;
}

export interface HouseBuildingConsultStateChangedResponseData extends Record<string, never> {}

export interface CreateOrderAndPayParams {
    biz: string;
    createOrderApiPath: string;
    prepayApiPath: string;
    queryPayResultApiPath: string;
    createOrderParams: Record<string, unknown>;
    enableJson?: boolean | undefined;
}

export interface CreateOrderAndPayResponseData extends Record<string, never> {}

export interface LlhcRNViewReadyParams {
    rootTag: string;
}

export interface LlhcRNViewReadyResponseData extends Record<string, never> {}

export interface OpenSettingNotificationParams extends Record<string, never> {}

export interface OpenSettingNotificationResponseData extends Record<string, never> {}

export interface MoveSourceToAppGroupParams {
    url: string;
}

export interface MoveSourceToAppGroupResponseData {
    targetURL: string;
}

export interface GetRecruitInfoParams {
    type: number;
}

export interface GetRecruitInfoResponseData {
    params: Record<string, any>;
}

export interface GetSocialDynamicStringLangsParams extends Record<string, never> {}

export interface GetSocialDynamicStringLangsResponseData {
    data: Record<string, any>;
}

export interface OpenRelationSlidePlayParams {
    userIds: string[];
    source: number;
    rootTag: string;
    feedIds: string[];
}

export interface OpenRelationSlidePlayResponseData extends Record<string, never> {}

export interface GetCurrentDraftFileSizeParams extends Record<string, never> {}

export interface GetCurrentDraftFileSizeResponseData {
    size: number;
}

export interface ProcessCurrentDraftFileParams extends Record<string, never> {}

export interface ProcessCurrentDraftFileResponseData {
    uploadKey: string;
}

export interface CancelCurrentDraftFileProcessParams extends Record<string, never> {}

export interface CancelCurrentDraftFileProcessResponseData extends Record<string, never> {}

export interface UploadCurrentDraftFileParams {
    description: string;
    uploadKey: string;
}

export interface UploadCurrentDraftFileResponseData extends Record<string, never> {}

export interface GetR4oRainStatusParams extends Record<string, never> {}

export interface GetR4oRainStatusResponseData {
    status: boolean;
}

export interface AddTroubleShootingLogParams {
    troubleShootingPageId: string;
    componentId?: string | undefined;
    timeStamp: number;
    logType: 2 | 3 | 4 | 5;
    tag: string;
    msg: string;
    params?: Record<string, unknown>;
    biz?: string | undefined;
    error?: string | undefined;
    isMarkNodeSuccess?: boolean | undefined;
}

export interface AddTroubleShootingLogResponseData extends Record<string, never> {}

export interface AddWarnLogParams {
    pageId: string;
    nodeId: string;
    belong: string;
    tag: string;
    msg: string;
    params: Record<string, unknown>;
    timeStamp: number;
    rubasParams: Record<string, unknown>;
}

export interface AddWarnLogResponseData extends Record<string, never> {}

export interface RecommendedPoisWithinCurrentCityOrCountryParams extends Record<string, never> {}

export interface RecommendedPoisWithinCurrentCityOrCountryResponseData extends Record<string, never> {}

export interface KeywordsPoisWithinCurrentCityOrCountryParams extends Record<string, never> {}

export interface KeywordsPoisWithinCurrentCityOrCountryResponseData extends Record<string, never> {}

export interface CommercialLogParams {
    eventId: string;
    msg: string;
    realTime: boolean;
    tag: string;
    type?: string | undefined;
    biz?: string | undefined;
    subBiz?: string | undefined;
    ratioKey?: string | undefined;
}

export interface CommercialLogResponseData extends Record<string, never> {}

export interface OpenTuanyouWebViewParams {
    url: string;
}

export interface OpenTuanyouWebViewResponseData extends Record<string, never> {}

export interface GetPymkRecoTextSyncParams {
    recoTextInfos: Record<string, unknown>[];
}

export interface GetPymkRecoTextSyncResponseData {
    recoResponse: Record<string, any>[];
}

export interface MinigameNotifyDeleteZapisItemParams {
    appId: string;
}

export interface MinigameNotifyDeleteZapisItemResponseData extends Record<string, never> {}

export interface KsmgNotifyDeleteZapisItemParams {
    appId: string;
}

export interface KsmgNotifyDeleteZapisItemResponseData extends Record<string, never> {}

export interface SystemMallDarkModeParams extends Record<string, never> {}

export interface SystemMallDarkModeResponseData {
    darkMode: number;
}

export interface MerchantMallDarkModeParams extends Record<string, never> {}

export interface MerchantMallDarkModeResponseData {
    darkMode: number;
}

export interface PauseResumeTheFeedParams {
    photoSaveId: string;
    pause: boolean;
}

export interface PauseResumeTheFeedResponseData extends Record<string, never> {}

export interface FetchContainerContextParams {
    keys: string[];
}

export interface FetchContainerContextResponseData {
    data: Record<string, any>;
}

export interface ImConnectStateParams extends Record<string, never> {}

export interface ImConnectStateResponseData {
    connectState: number;
}

export interface MuteGroupMemberParams {
    isMute: boolean;
    userId: string;
    groupId: string;
    muteTime?: number | undefined;
}

export interface MuteGroupMemberResponseData {
    resultCode: number;
    errorInfo?: {
        errorCode: number;
        errorMsg?: string;
        domain: string;
        userInfo: Record<string, any>;
    };
}

export interface DeleteConversationParams {
    subBiz?: string | undefined;
    retainMessages: boolean;
    conversation: {
        conversationId: string;
        conversationType: number;
        categoryId?: string | undefined;
        subBiz: string;
    };
}

export interface DeleteConversationResponseData {
    resultCode: number;
    errorInfo?: {
        errorCode: number;
        errorMsg: string;
        domain: string;
        userInfo?: Record<string, any>;
    };
}

export interface GetUserOnlineStatusParams {
    subBiz: string;
    userIds: string[];
    onlyFromServer?: boolean | undefined;
}

export interface GetUserOnlineStatusResponseData {
    resultCode: string;
    errorInfo?: {
        errorCode: number;
        errorMsg: string;
        domain?: string;
        userInfo?: Record<string, any>;
    };
    data: {
        xxxx: {
            userId: string;
            status: number;
            lastOfflineTime: number;
        };
    };
}

export interface GetGroupOnlineStatusParams {
    subBiz?: string | undefined;
    groupIds: string[];
    cacheExpireDuration?: boolean | undefined;
}

export interface GetGroupOnlineStatusResponseData {
    resultCode: number;
    errorInfo?: {
        errorCode: string;
        errorMsg: string;
        domain: string;
        userInfo: string;
    };
    data: {
        xxx: {
            groupId: string;
            onlineMemberCount: number;
        };
    };
}

export interface InstallPluginParams {
    plugin: string;
    progressKey?: string | undefined;
}

export interface InstallPluginResponseData extends Record<string, never> {}

export interface GetGroupInfoListParams {
    groupIds: string[];
    fromServer?: string | undefined;
}

export interface GetGroupInfoListResponseData {
    resultCode: number;
    groupInfos: {
        xxxx: {
            groupId: string;
            role: number;
            groupJoinMode: number;
            maxManagerCount: number;
            isMuteAll: number;
            invitePermissionType: number;
            groupName: string;
            description: string;
            nickName: string;
            groupType: number;
            tag: string;
            masterId: string;
            memberCount: number;
            groupBackName: string;
            groupNumber: number;
            maxMemberCount: number;
            groupHeadUrl: string;
            forbiddenState: string;
            groupOriginHeadUrl: string;
            topMemberIds: string[];
            joinPermission: number;
            groupMemberStatus: number;
            multiForbiddenStates: number;
        };
    };
    errorInfo?: {
        errorCode: number;
        errorMsg: string;
        domain: string;
        userInfo: string;
    };
}

export interface GetGroupMemberInfoParams {
    groupId: string;
    userId: string;
}

export interface GetGroupMemberInfoResponseData {
    resultCode: number;
    memberInfo: {
        groupId: string;
        userId: string;
        nickName: string;
        invitedUserId: string;
        joinTime: string;
        createTime: string;
        updateTime: string;
        role: string;
        status: string;
        keepSilenceDeadline: string;
    };
    errorInfo: {
        errorCode: string;
        errorMsg: string;
        domain: string;
        userInfo: string;
    };
}

export interface FetchEmotionReactionDetailsParams {
    message: {
        seq: string;
        conversationId: string;
        conversationType: number;
        sentTime?: number | undefined;
        from?: string | undefined;
        realFrom?: string | undefined;
        subBiz?: string | undefined;
        categoryId?: string | undefined;
        msgType?: number | undefined;
    };
    offset?: string | undefined;
    count: number;
    stickMasterOnTop: boolean;
}

export interface FetchEmotionReactionDetailsResponseData {
    resultCode: number;
    reactionDetails: {
        emotion: string;
        emotionURL?: string;
        type?: number;
        userId: string;
        timestamp: number;
    };
    hasMore: boolean;
    offset: string;
    errorInfo?: {
        errorCode: number;
        errorMsg: string;
        domain?: string;
        userInfo?: string;
    };
}

export interface RemoveEmotionReactionParams {
    message: {
        seq: string;
        conversationId: string;
        conversationType: number;
        sentTime?: number | undefined;
        from?: string | undefined;
        realFrom?: string | undefined;
        subBiz?: string | undefined;
        categoryId?: string | undefined;
        msgType?: number | undefined;
    };
    emotionId: string;
}

export interface RemoveEmotionReactionResponseData {
    resultCode: number;
    errorInfo?: {
        errorCode: string;
        errorMsg: string;
        domain?: string;
        userInfo?: string;
    };
}

export interface SystemSetEditVisibleDialogSubtitleParams {
    public: string;
}

export interface SystemSetEditVisibleDialogSubtitleResponseData extends Record<string, never> {}

export interface PostSetEditVisibleDialogSubtitleParams {
    public: string;
}

export interface PostSetEditVisibleDialogSubtitleResponseData extends Record<string, never> {}

export interface GetLocalStorageParams {
    namespace: string;
    key: string;
}

export interface GetLocalStorageResponseData {
    value: string;
}

export interface SetLocalStorageParams {
    namespace: string;
    key: string;
}

export interface SetLocalStorageResponseData extends Record<string, never> {}

export interface ClearLocalStorageParams {
    namespace: string;
    key: string;
}

export interface ClearLocalStorageResponseData extends Record<string, never> {}

export interface RemoveLocalStorageParams {
    namespace: string;
    key: string;
}

export interface RemoveLocalStorageResponseData extends Record<string, never> {}

export interface PrintLocalLifeLogParams extends Record<string, never> {}

export interface PrintLocalLifeLogResponseData extends Record<string, never> {}

export interface UpdateScrollGestureStatusParams {
    disabled: boolean;
    nativeId: string;
}

export interface UpdateScrollGestureStatusResponseData extends Record<string, never> {}

export interface KeepPlayingWhenContainerPauseParams {
    keepPlaying: boolean;
}

export interface KeepPlayingWhenContainerPauseResponseData extends Record<string, never> {}

export interface TkPlayerReportVseParams extends Record<string, never> {}

export interface TkPlayerReportVseResponseData extends Record<string, never> {}

export interface GetStartUpDataParams {
    keys: {
        key: string;
    }[];
}

export interface GetStartUpDataResponseData {
    data: {
        key: string;
        value: unknown;
    }[];
}

export interface GetCurrentTaskIdParams extends Record<string, never> {}

export interface GetCurrentTaskIdResponseData {
    taskId: string;
}

export interface GetCurrentStidSnapInfoParams {
    page2: string;
    logExtraName?: string | undefined;
}

export interface GetCurrentStidSnapInfoResponseData {
    stidInfo: string;
}

export interface SaveImageWithUrlParams {
    url: string;
}

export interface SaveImageWithUrlResponseData extends Record<string, never> {}

export interface PreviewImageParams {
    enableActionBarMoreAction: boolean;
    enableDownload: boolean;
    imageInfo: {
        id: string;
        bigUrl: string;
        smallUrl: string;
        width: number;
        height: number;
    };
    imageOriginSize: {
        width: number;
        height: number;
    };
}

export interface PreviewImageResponseData extends Record<string, never> {}

export interface BatchGetRemarkNamesParams {
    userIds: string[];
}

export interface BatchGetRemarkNamesResponseData extends Record<string, never> {}

export interface ReportLog2JinJingParams extends Record<string, never> {}

export interface ReportLog2JinJingResponseData extends Record<string, never> {}

export interface GetNoticeRecoTextSyncParams {
    noticeItem: Record<string, unknown>;
}

export interface GetNoticeRecoTextSyncResponseData {
    recoText: string;
}

export interface GetRemarkNameSyncParams {
    userId: string;
    userName?: string | undefined;
}

export interface GetRemarkNameSyncResponseData {
    remarkName: string;
}

export interface UpdateCurrentUserParams {
    user_name: string;
    kwaiId: string;
    user_sex: string;
    user_text: string;
}

export interface UpdateCurrentUserResponseData extends Record<string, never> {}

export interface LaunchLiveAvatarPageParams {
    launchParams: {
        serverParams: string;
        imgPath: string;
        moodId: string;
    };
}

export interface LaunchLiveAvatarPageResponseData {
    ' launchResult': boolean;
}

export interface EnterSlidePageParams {
    paramsString: string;
    index: number;
}

export interface EnterSlidePageResponseData extends Record<string, never> {}

export interface JumpToPostStateEditPageParams {
    headurl: string;
    headurls: string;
    moodId: string;
    serverParams: string;
}

export interface JumpToPostStateEditPageResponseData extends Record<string, never> {}

export interface PostChallengeRelayParams {
    data: string;
}

export interface PostChallengeRelayResponseData extends Record<string, never> {}

export interface ExitPageWithInfoParams {
    animate: number;
}

export interface ExitPageWithInfoResponseData extends Record<string, never> {}

export interface LoadSimSplitsParams {
    split: string;
}

export interface LoadSimSplitsResponseData extends Record<string, never> {}

export interface SimAccountParams {
    account: string;
    pwd: string;
}

export interface SimAccountResponseData extends Record<string, never> {}

export interface ClickSearchParams extends Record<string, never> {}

export interface ClickSearchResponseData extends Record<string, never> {}

export interface SimUserInfoParams {
    result: string;
}

export interface SimUserInfoResponseData extends Record<string, never> {}

export interface SimOriginIdParams extends Record<string, never> {}

export interface SimOriginIdResponseData {
    did: string;
}

export interface SimIdParams extends Record<string, never> {}

export interface SimIdResponseData {
    did: string;
}

export interface SimRestartParams extends Record<string, never> {}

export interface SimRestartResponseData extends Record<string, never> {}

export interface CloseLiveBottomBubbleParams {
    params: Record<string, unknown>;
}

export interface CloseLiveBottomBubbleResponseData extends Record<string, never> {}

export interface GetMyProfileDataParams extends Record<string, never> {}

export interface GetMyProfileDataResponseData {
    data: string;
}

export interface GetUserProfileSnapshotParams {
    userProfile: string;
    snapshotDelayTime?: number | undefined;
}

export interface GetUserProfileSnapshotResponseData {
    imageBase64: string;
    width: number;
    height: number;
}

export interface SimSetIdParams extends Record<string, never> {}

export interface SimSetIdResponseData {
    did: string;
}

export interface GetKSwitchInfoParams {
    type?: unknown;
    key?: string | undefined;
}

export interface GetKSwitchInfoResponseData {
    value: unknown;
}

export interface ShowBottomSkipToastParams {
    text: string;
    actionUrl: string;
}

export interface ShowBottomSkipToastResponseData {
    dismissType: number;
}

export interface InstrumentationCallbackParams {
    rows: string[];
    endRecordByUser: boolean;
}

export interface InstrumentationCallbackResponseData extends Record<string, never> {}

export interface LaunchUserProfileSnapshotParams {
    userProfile: string;
}

export interface LaunchUserProfileSnapshotResponseData extends Record<string, never> {}

export interface LogWithActionParams {
    params: Record<string, unknown>;
}

export interface LogWithActionResponseData extends Record<string, never> {}

export interface ImShowHalfChatBottomEntryParams {
    targetId: number;
    targetType: number;
    subBiz: string;
    text: string;
    offsetY?: number | undefined;
    showElementPackageInfo?: Record<string, unknown>;
    clickElementPackageInfo?: Record<string, unknown>;
}

export interface ImShowHalfChatBottomEntryResponseData extends Record<string, never> {}

export interface SocialShowHalfChatBottomEntryParams {
    targetId: number;
    targetType: number;
    subBiz: string;
    text: string;
    offsetY?: number | undefined;
    showElementPackageInfo?: string | undefined;
    clickElementPackageInfo?: string | undefined;
}

export interface SocialShowHalfChatBottomEntryResponseData extends Record<string, never> {}

export interface ImSendIMEmotionMessageParams {
    targetId: number;
    targetType: number;
    packageId: string;
    emotionId: string;
}

export interface ImSendIMEmotionMessageResponseData {
    error?: Record<string, any>;
}

export interface SocialSendIMEmotionMessageParams {
    targetId: number;
    targetType: number;
    packageId: string;
    emotionId: string;
    scene?: number | undefined;
}

export interface SocialSendIMEmotionMessageResponseData {
    error?: {
        code: number;
    };
}

export interface LoadWebviewParams {
    isShowTitleBar: boolean;
    isShowTitle: boolean;
    isHalfScreenDisplay?: string | undefined;
    backButtonAutoConfigurable?: boolean | undefined;
    url: string;
    width: number;
    height: number;
    source: string;
    cornerRadius: number;
}

export interface LoadWebviewResponseData extends Record<string, never> {}

export interface SelectKvqItemParams {
    result: string;
}

export interface SelectKvqItemResponseData extends Record<string, never> {}

export interface DispatchGlobalEventLocalLifeParams {
    status: string;
    ksCode: string;
    additionInfo: string;
}

export interface DispatchGlobalEventLocalLifeResponseData extends Record<string, never> {}

export interface ReportKwaiUrlLogParams extends Record<string, never> {}

export interface ReportKwaiUrlLogResponseData extends Record<string, never> {}

export interface NavigateBackParams {
    animated: boolean;
    data?: Record<string, unknown>;
}

export interface NavigateBackResponseData {
    success: boolean;
    statusCode: number;
}

export interface MarkTopPageAsTargetParams extends Record<string, never> {}

export interface MarkTopPageAsTargetResponseData extends Record<string, never> {}

export interface UnMarkTopPageAsTargetParams extends Record<string, never> {}

export interface UnMarkTopPageAsTargetResponseData extends Record<string, never> {}

export interface GetCurrentStidDataInfoParams extends Record<string, never> {}

export interface GetCurrentStidDataInfoResponseData {
    stidDataInfo: string;
}

export interface DecodeFeedLogCtxParams {
    feedLogCtx: Record<string, unknown>;
}

export interface DecodeFeedLogCtxResponseData {
    stidDataInfo: string;
}

export interface FeedLogCtxToJsonStringParams {
    feedLogCtx: Record<string, unknown>;
}

export interface FeedLogCtxToJsonStringResponseData {
    stidDataInfo: string;
}

export interface BlindBoxWebViewRegisterEventListenerSuccessParams {
    eventType: string;
}

export interface BlindBoxWebViewRegisterEventListenerSuccessResponseData extends Record<string, never> {}

export interface GetImageCacheParams {
    uri: string;
    uris: string[];
    options: {
        resultType: string;
    };
}

export interface GetImageCacheResponseData {
    exist: boolean;
}

export interface DoFaceDelectParams {
    imagePath: string;
    serverParams: Record<string, unknown>;
}

export interface DoFaceDelectResponseData {
    detectPassed: boolean;
}

export interface DoFaceDetectParams {
    imagePath: string;
    serverParams: string;
}

export interface DoFaceDetectResponseData {
    detectPassed: boolean;
}

export interface GrayVenomBillboardParams extends Record<string, never> {}

export interface GrayVenomBillboardResponseData extends Record<string, never> {}

export interface SystemUnGrayVenomBillboardParams extends Record<string, never> {}

export interface SystemUnGrayVenomBillboardResponseData extends Record<string, never> {}

export interface FeedUnGrayVenomBillboardParams extends Record<string, never> {}

export interface FeedUnGrayVenomBillboardResponseData extends Record<string, never> {}

export interface PublicDomainComponentRefreshSceneControlParams {
    pageName: string;
    sceneCode: string;
    instanceId: string;
    option: string;
}

export interface PublicDomainComponentRefreshSceneControlResponseData extends Record<string, never> {}

export interface EnterDetailLiveRoomParams extends Record<string, never> {}

export interface EnterDetailLiveRoomResponseData {
    locallife: string;
}

export interface NeedSupplementMessagesParams {
    subBiz: string;
    targetType: number;
    targetId: string;
}

export interface NeedSupplementMessagesResponseData {
    resultCode: number;
    needful: boolean;
    errorInfo: Record<string, any>;
}

export interface SupplementMessagesParams {
    subBiz: string;
    targetType: number;
    targetId: string;
}

export interface SupplementMessagesResponseData {
    resultCode: number;
    errorInfo: Record<string, any>;
}

export interface SearchMessageParams {
    keyword: string;
    offset: string;
    count: number;
}

export interface SearchMessageResponseData {
    resultCode: number;
    errorInfo: Record<string, any>;
    data: {
        offset: string;
        hasMore: boolean;
        dataList: {
            conversationId: string;
            conversationType: number;
            subBiz: string;
            showName: string;
            imageUrl: string;
            imageUrls: string[];
            memberCount: number;
            msgCount: number;
            msgSummary?: string;
            msgTime?: number;
            msgSeq?: number;
            msgClientSeq?: number;
            msgType: number;
            msgContent: {
                photoId: string;
            };
            msgSender: string;
        }[];
    };
}

export interface SearchMessageInChatParams {
    subBiz: string;
    targetType: number;
    targetId: string;
    keyword: string;
    offset: number;
    count: number;
}

export interface SearchMessageInChatResponseData {
    resultCode: number;
    errorInfo: Record<string, any>;
    data: {
        offset: number;
        isLoadToEnd: boolean;
        dataList: {
            msgSeq: string;
            msgSummary: string;
            userName: string;
            aliasName: string;
            imageUrl: string;
            imageUrls: string[];
            msgSendTime: string;
        }[];
    };
}

export interface LivePreviewBottomCardEventParams {
    type: Record<string, unknown>;
    action: string;
    logInfo: Record<string, unknown>;
    rootTag: number;
}

export interface LivePreviewBottomCardEventResponseData extends Record<string, never> {}

export interface UseMusicParams {
    music: Record<string, unknown>;
}

export interface UseMusicResponseData extends Record<string, never> {}

export interface GoToCutMusicPageParams {
    music: Record<string, unknown>;
    source?: number | undefined;
    fromSearch?: boolean | undefined;
    channelName?: string | undefined;
    channelId?: string | undefined;
    index?: number | undefined;
}

export interface GoToCutMusicPageResponseData extends Record<string, never> {}

export interface GetMusicListParams {
    channelId: string;
    refresh: boolean;
}

export interface GetMusicListResponseData {
    musicList: Record<string, any>[];
    noMore: boolean;
}

export interface ExtractLocalMusicParams extends Record<string, never> {}

export interface ExtractLocalMusicResponseData {
    music: Record<string, any>;
}

export interface RemoveMusicParams {
    channelId: string;
    music: Record<string, unknown>;
}

export interface RemoveMusicResponseData extends Record<string, never> {}

export interface RemoveCurrentUsingMusicParams {
    music: Record<string, unknown>;
}

export interface RemoveCurrentUsingMusicResponseData extends Record<string, never> {}

export interface OpenMusicLibParams extends Record<string, never> {}

export interface OpenMusicLibResponseData extends Record<string, never> {}

export interface GetCurrentUsingMusicParams extends Record<string, never> {}

export interface GetCurrentUsingMusicResponseData {
    music: Record<string, any>;
    enableClip: boolean;
}

export interface ExitToRootPageParams {
    pageTag: number;
    bizId: string;
}

export interface ExitToRootPageResponseData {
    resultCode: number;
    errorInfo: Record<string, any>;
}

export interface AdFlashArriveParams extends Record<string, never> {}

export interface AdFlashArriveResponseData {
    mockId: string;
    mockUrl: string;
    mockData: string;
    session: string;
    hostType: string;
    url: string;
}

export interface GreetToFriendParams {
    targetId: number;
    targetType?: number | undefined;
    greetType: number;
    greetScene: number;
}

export interface GreetToFriendResponseData {
    resultCode: number;
    errorInfo: {
        errorCode: string;
        errorMsg: string;
        domain: string;
        userInfo: string;
    };
    greetInfo: {
        useEmoji: boolean;
        emojiText: string;
        packageId: string;
        emotionId: string;
    };
}

export interface ShowKeyboardParams {
    text?: string | undefined;
    showKeyboard?: string | undefined;
}

export interface ShowKeyboardResponseData {
    text: string;
}

export interface ShowIMAddBlackListDialogParams extends Record<string, never> {}

export interface ShowIMAddBlackListDialogResponseData {
    resultCode: number;
    dismissType: number;
    errorInfo: string;
}

export interface PlayPipAndToHomeParams {
    gotoHome?: boolean | undefined;
    url: string;
}

export interface PlayPipAndToHomeResponseData extends Record<string, never> {}

export interface OpenDeepLink2Params {
    url: string;
}

export interface OpenDeepLink2ResponseData extends Record<string, never> {}

export interface ReloadWidgetParams {
    widgetType: string;
}

export interface ReloadWidgetResponseData extends Record<string, never> {}

export interface GetUserBanInfoParams {
    userIds: string[];
}

export interface GetUserBanInfoResponseData {
    resultCode: number;
    errorInfo: Record<string, any>;
    data: {
        userId: string;
        riskState: number;
    }[];
}

export interface GetIMUserBanInfoParams {
    userIds: string[];
}

export interface GetIMUserBanInfoResponseData {
    resultCode: number;
    errorInfo: Record<string, any>;
    banItems: {
        userId: {
            riskState: number;
        };
    };
}

export interface GetIMPhotoVisibilityParams {
    photoIds: string[];
}

export interface GetIMPhotoVisibilityResponseData {
    resultCode: number;
    errorInfo: string;
    visibilityItems: {
        photoId: string;
        xxx: {
            status: string;
            punishState: string;
        };
    };
}

export interface FetchMusicSearchHistoryParams extends Record<string, never> {}

export interface FetchMusicSearchHistoryResponseData {
    historyList: string[];
}

export interface GuessLikeCardClickParams extends Record<string, never> {}

export interface GuessLikeCardClickResponseData extends Record<string, never> {}

export interface GetInterStidInfoParams {
    feedLogCtx: Record<string, unknown>;
    path: string;
}

export interface GetInterStidInfoResponseData {
    interStid: string;
}

export interface GetSimplifiedInterStidInfoParams {
    feedLogCtx: Record<string, unknown>;
    path: string;
}

export interface GetSimplifiedInterStidInfoResponseData {
    simplifiedInterStid: string;
}

export interface GetSimplifiedCommonStidInfoParams {
    path: string;
}

export interface GetSimplifiedCommonStidInfoResponseData {
    simplifiedCommonStid: string;
}

export interface MomentLocalCacheWithRemoteMomentsBridgeParams {
    moments: string[];
    rootTag?: number | undefined;
}

export interface MomentLocalCacheWithRemoteMomentsBridgeResponseData {
    moments: string[];
}

export interface GetSocialMultiStringLangsSyncParams extends Record<string, never> {}

export interface GetSocialMultiStringLangsSyncResponseData {
    edit_profile_improvement_integrity_tip: string;
}

export interface ShareMyProfileParams extends Record<string, never> {}

export interface ShareMyProfileResponseData extends Record<string, never> {}

export interface RequestContactPermissionParams extends Record<string, never> {}

export interface RequestContactPermissionResponseData {
    status: number;
}

export interface GetContactFriendsDataParams extends Record<string, never> {}

export interface GetContactFriendsDataResponseData {
    users: string[];
    errorCode: string;
    errorMsg: string;
}

export interface GetContactAccessStatusParams extends Record<string, never> {}

export interface GetContactAccessStatusResponseData {
    status: string;
}

export interface GetSimplifiedStidInfoParams {
    feedLogCtx: Record<string, unknown>;
    path: string;
}

export interface GetSimplifiedStidInfoResponseData {
    simplifiedStid: string;
}

export interface GetClippedStidInfoParams {
    feedLogCtx: Record<string, unknown>;
    path: string;
}

export interface GetClippedStidInfoResponseData {
    clippedStid: string;
}

export interface ShowRelationPrivacySettingDialogParams {
    settingKey: string;
}

export interface ShowRelationPrivacySettingDialogResponseData extends Record<string, never> {}

export interface SyncRelationPrivacySettingsParams extends Record<string, never> {}

export interface SyncRelationPrivacySettingsResponseData {
    response: string;
}

export interface GetSimOperatorInfoParams extends Record<string, never> {}

export interface GetSimOperatorInfoResponseData {
    networkOperatorType: 'CMCC' | 'CUCC' | 'CTCC' | 'UN_KNOW';
    simOperatorType: 'CMCC' | 'CUCC' | 'CTCC' | 'UN_KNOW';
}

export interface PublishGuideMomentBridgeParams {
    moment: Record<string, unknown>;
}

export interface PublishGuideMomentBridgeResponseData {
    moment: Record<string, any>;
}

export interface GetRealDeviceHeightParams extends Record<string, never> {}

export interface GetRealDeviceHeightResponseData {
    height?: number;
}

export interface ShowUserProfilePreviewPageParams extends Record<string, never> {}

export interface ShowUserProfilePreviewPageResponseData extends Record<string, never> {}

export interface ShowPrivacyUserAutoFollowBackCardParams {
    defaultEnabled?: boolean | undefined;
}

export interface ShowPrivacyUserAutoFollowBackCardResponseData extends Record<string, never> {}

export interface ShowPrivacyUserAutoFollowBackDialogParams {
    defaultEnabled?: number | undefined;
}

export interface ShowPrivacyUserAutoFollowBackDialogResponseData extends Record<string, never> {}

export interface AuditedNativeBridges {
    'advertise.startNeoAdVideo': {
        params: StartNeoAdVideoParams;
        responseData: StartNeoAdVideoResponseData;
    };
    'game.getGamePackageVersion': {
        params: GetGamePackageVersionParams;
        responseData: GetGamePackageVersionResponseData;
    };
    'social.enterGroupChat': {
        params: EnterGroupChatParams;
        responseData: EnterGroupChatResponseData;
    };
    'pay.hasImportSdk': {
        params: HasImportSdkParams;
        responseData: HasImportSdkResponseData;
    };
    'kwai.injectCookie': {
        params: InjectCookieParams;
        responseData: InjectCookieResponseData;
    };
    'tool.openBrowser': {
        params: OpenBrowserParams;
        responseData: OpenBrowserResponseData;
    };
    'merchant.reqSessionStickyOnTopWithThread': {
        params: ReqSessionStickyOnTopWithThreadParams;
        responseData: ReqSessionStickyOnTopWithThreadResponseData;
    };
    'post.selectMixMediasAndUpload': {
        params: SelectMixMediasAndUploadParams;
        responseData: SelectMixMediasAndUploadResponseData;
    };
    'pay.startDeposit': {
        params: StartDepositParams;
        responseData: StartDepositResponseData;
    };
    'live.closeLiveFloatingWindow': {
        params: CloseLiveFloatingWindowParams;
        responseData: CloseLiveFloatingWindowResponseData;
    };
    'media.video': {
        params: VideoParams;
        responseData: VideoResponseData;
    };
    'merchant.audioRecord': {
        params: AudioRecordParams;
        responseData: AudioRecordResponseData;
    };
    'merchant.getSidToken': {
        params: GetSidTokenParams;
        responseData: GetSidTokenResponseData;
    };
    'merchant.getWebConfig': {
        params: GetWebConfigParams;
        responseData: GetWebConfigResponseData;
    };
    'merchant.openMediaBrowserPage': {
        params: OpenMediaBrowserPageParams;
        responseData: OpenMediaBrowserPageResponseData;
    };
    'merchant.querySessionIsStickyOnTop': {
        params: QuerySessionIsStickyOnTopParams;
        responseData: QuerySessionIsStickyOnTopResponseData;
    };
    'merchant.setWebConfig': {
        params: SetWebConfigParams;
        responseData: SetWebConfigResponseData;
    };
    'platform.isLowPerformanceDevice': {
        params: IsLowPerformanceDeviceParams;
        responseData: IsLowPerformanceDeviceResponseData;
    };
    'platform.loadUri': {
        params: LoadUriParams;
        responseData: LoadUriResponseData;
    };
    'post.karaoke': {
        params: KaraokeParams;
        responseData: KaraokeResponseData;
    };
    'post.selectVideoAndUpload': {
        params: SelectVideoAndUploadParams;
        responseData: SelectVideoAndUploadResponseData;
    };
    'social.bindRiskPreCheck': {
        params: BindRiskPreCheckParams;
        responseData: BindRiskPreCheckResponseData;
    };
    'social.needUpdateProfile': {
        params: NeedUpdateProfileParams;
        responseData: NeedUpdateProfileResponseData;
    };
    'platform.openWechatMiniProgram': {
        params: OpenWechatMiniProgramParams;
        responseData: OpenWechatMiniProgramResponseData;
    };
    'game.appointGame': {
        params: AppointGameParams;
        responseData: AppointGameResponseData;
    };
    'social.addTokenBlockShareId': {
        params: AddTokenBlockShareIdParams;
        responseData: AddTokenBlockShareIdResponseData;
    };
    'social.bindPhone': {
        params: BindPhoneParams;
        responseData: BindPhoneResponseData;
    };
    'feed.authorizationStatusForCalendar': {
        params: AuthorizationStatusForCalendarParams;
        responseData: AuthorizationStatusForCalendarResponseData;
    };
    'feed.changeEventForCalendar': {
        params: ChangeEventForCalendarParams;
        responseData: ChangeEventForCalendarResponseData;
    };
    'feed.closeChildLock': {
        params: CloseChildLockParams;
        responseData: CloseChildLockResponseData;
    };
    'system.collapseKeyboard': {
        params: CollapseKeyboardParams;
        responseData: CollapseKeyboardResponseData;
    };
    'merchant.closeLiveMerchantFloatingWindow': {
        params: CloseLiveMerchantFloatingWindowParams;
        responseData: CloseLiveMerchantFloatingWindowResponseData;
    };
    'game.gameTaskSelectImage': {
        params: GameTaskSelectImageParams;
        responseData: GameTaskSelectImageResponseData;
    };
    'game.gameSendLog': {
        params: GameSendLogParams;
        responseData: GameSendLogResponseData;
    };
    'feed.getAddressBookAccessStatus': {
        params: GetAddressBookAccessStatusParams;
        responseData: GetAddressBookAccessStatusResponseData;
    };
    'tool.getClipBoard': {
        params: ToolGetClipBoardParams;
        responseData: ToolGetClipBoardResponseData;
    };
    'platform.getClipBoard': {
        params: PlatformGetClipBoardParams;
        responseData: PlatformGetClipBoardResponseData;
    };
    'platform.getDarkMode': {
        params: GetDarkModeParams;
        responseData: GetDarkModeResponseData;
    };
    'growth.getDeviceSecretInfo': {
        params: GetDeviceSecretInfoParams;
        responseData: GetDeviceSecretInfoResponseData;
    };
    'system.getDeviceInfo': {
        params: GetDeviceInfoParams;
        responseData: GetDeviceInfoResponseData;
    };
    'tool.getExpTagTransList': {
        params: GetExpTagTransListParams;
        responseData: GetExpTagTransListResponseData;
    };
    'system.getPushPermission': {
        params: GetPushPermissionParams;
        responseData: GetPushPermissionResponseData;
    };
    'system.getServerTime': {
        params: GetServerTimeParams;
        responseData: GetServerTimeResponseData;
    };
    'post.getVideoUploadStatus': {
        params: GetVideoUploadStatusParams;
        responseData: GetVideoUploadStatusResponseData;
    };
    'system.gete2': {
        params: Gete2Params;
        responseData: Gete2ResponseData;
    };
    'post.intownShare': {
        params: IntownShareParams;
        responseData: IntownShareResponseData;
    };
    'tool.launchApp': {
        params: LaunchAppParams;
        responseData: LaunchAppResponseData;
    };
    'merchant.loadUrlOnNewMerchantPage': {
        params: LoadUrlOnNewMerchantPageParams;
        responseData: LoadUrlOnNewMerchantPageResponseData;
    };
    'social.login': {
        params: LoginParams;
        responseData: LoginResponseData;
    };
    'social.logout': {
        params: LogoutParams;
        responseData: LogoutResponseData;
    };
    'merchant.merchantSetPhotoPlayStatus': {
        params: MerchantSetPhotoPlayStatusParams;
        responseData: MerchantSetPhotoPlayStatusResponseData;
    };
    'merchant.onItemSelected': {
        params: OnItemSelectedParams;
        responseData: OnItemSelectedResponseData;
    };
    'feed.openDetailPage': {
        params: OpenDetailPageParams;
        responseData: OpenDetailPageResponseData;
    };
    'pay.openKspayWebView': {
        params: OpenKspayWebViewParams;
        responseData: OpenKspayWebViewResponseData;
    };
    'game.openNativeGamecenter': {
        params: OpenNativeGamecenterParams;
        responseData: OpenNativeGamecenterResponseData;
    };
    'system.openPushPermission': {
        params: OpenPushPermissionParams;
        responseData: OpenPushPermissionResponseData;
    };
    'game.openRelationView': {
        params: OpenRelationViewParams;
        responseData: OpenRelationViewResponseData;
    };
    'merchant.popupToFollow': {
        params: PopupToFollowParams;
        responseData: PopupToFollowResponseData;
    };
    'social.requestFollowUserV2': {
        params: RequestFollowUserV2Params;
        responseData: RequestFollowUserV2ResponseData;
    };
    'post.resumeVideoUpload': {
        params: ResumeVideoUploadParams;
        responseData: ResumeVideoUploadResponseData;
    };
    'tool.scanCode': {
        params: ToolScanCodeParams;
        responseData: ToolScanCodeResponseData;
    };
    'social.scanCode': {
        params: SocialScanCodeParams;
        responseData: SocialScanCodeResponseData;
    };
    'post.selectAndUploadMedia': {
        params: SelectAndUploadMediaParams;
        responseData: SelectAndUploadMediaResponseData;
    };
    'ui.selectCity': {
        params: SelectCityParams;
        responseData: SelectCityResponseData;
    };
    'social.selectCountryPhoneCode': {
        params: SelectCountryPhoneCodeParams;
        responseData: SelectCountryPhoneCodeResponseData;
    };
    'social.sendImFriendMessage': {
        params: SendImFriendMessageParams;
        responseData: SendImFriendMessageResponseData;
    };
    'platform.sendSMS': {
        params: SendSMSParams;
        responseData: SendSMSResponseData;
    };
    'social.setPageFollowRefer': {
        params: SetPageFollowReferParams;
        responseData: SetPageFollowReferResponseData;
    };
    'feed.setSettingEntryForCourse': {
        params: SetSettingEntryForCourseParams;
        responseData: SetSettingEntryForCourseResponseData;
    };
    'social.setShareTokenToClipBoard': {
        params: SetShareTokenToClipBoardParams;
        responseData: SetShareTokenToClipBoardResponseData;
    };
    'ui.setStatusBarStyle': {
        params: SetStatusBarStyleParams;
        responseData: SetStatusBarStyleResponseData;
    };
    'social.share': {
        params: ShareParams;
        responseData: ShareResponseData;
    };
    'ui.showBottomSheet': {
        params: UiShowBottomSheetParams;
        responseData: UiShowBottomSheetResponseData;
    };
    'platform.showBottomSheet': {
        params: PlatformShowBottomSheetParams;
        responseData: PlatformShowBottomSheetResponseData;
    };
    'kwai.showMerchantPayResult': {
        params: ShowMerchantPayResultParams;
        responseData: ShowMerchantPayResultResponseData;
    };
    'platform.showDialog': {
        params: ShowDialogParams;
        responseData: ShowDialogResponseData;
    };
    'ui.showPicker': {
        params: ShowPickerParams;
        responseData: ShowPickerResponseData;
    };
    'kwai.showSafeDialog': {
        params: ShowSafeDialogParams;
        responseData: ShowSafeDialogResponseData;
    };
    'social.startAuthActivity': {
        params: StartAuthActivityParams;
        responseData: StartAuthActivityResponseData;
    };
    'advertise.startFansTopLivePlay': {
        params: StartFansTopLivePlayParams;
        responseData: StartFansTopLivePlayResponseData;
    };
    'platform.startFaceRecognition': {
        params: StartFaceRecognitionParams;
        responseData: StartFaceRecognitionResponseData;
    };
    'pay.startGatewayWithdraw': {
        params: StartGatewayWithdrawParams;
        responseData: StartGatewayWithdrawResponseData;
    };
    'pay.startKspayOrderPrepay': {
        params: StartKspayOrderPrepayParams;
        responseData: StartKspayOrderPrepayResponseData;
    };
    'feed.updateWeatherInfo': {
        params: UpdateWeatherInfoParams;
        responseData: UpdateWeatherInfoResponseData;
    };
    'game.updateSoGameInfoList': {
        params: UpdateSoGameInfoListParams;
        responseData: UpdateSoGameInfoListResponseData;
    };
    'feed.userIncentivesUpdateTasks': {
        params: UserIncentivesUpdateTasksParams;
        responseData: UserIncentivesUpdateTasksResponseData;
    };
    'post.uploadVideoFromAlbum': {
        params: UploadVideoFromAlbumParams;
        responseData: UploadVideoFromAlbumResponseData;
    };
    'social.verifyAccount': {
        params: VerifyAccountParams;
        responseData: VerifyAccountResponseData;
    };
    'social.verifySMSCode': {
        params: VerifySMSCodeParams;
        responseData: VerifySMSCodeResponseData;
    };
    'social.wechatLogin': {
        params: WechatLoginParams;
        responseData: WechatLoginResponseData;
    };
    'kwaiAd.callCardHandler': {
        params: CallCardHandlerParams;
        responseData: CallCardHandlerResponseData;
    };
    'social.verifyThirdPartyLogin': {
        params: VerifyThirdPartyLoginParams;
        responseData: VerifyThirdPartyLoginResponseData;
    };
    'kwaiAd.callAdBridge': {
        params: CallAdBridgeParams;
        responseData: CallAdBridgeResponseData;
    };
    'event.dispatchGlobalEvent': {
        params: DispatchGlobalEventParams;
        responseData: DispatchGlobalEventResponseData;
    };
    'system.getNetworkType': {
        params: GetNetworkTypeParams;
        responseData: GetNetworkTypeResponseData;
    };
    'system.getAppInfo': {
        params: GetAppInfoParams;
        responseData: GetAppInfoResponseData;
    };
    'system.shakeDetection': {
        params: ShakeDetectionParams;
        responseData: ShakeDetectionResponseData;
    };
    'system.vibrateShort': {
        params: VibrateShortParams;
        responseData: VibrateShortResponseData;
    };
    'system.isNetworkConnected': {
        params: IsNetworkConnectedParams;
        responseData: IsNetworkConnectedResponseData;
    };
    'system.getLocationPermission': {
        params: GetLocationPermissionParams;
        responseData: GetLocationPermissionResponseData;
    };
    'system.getLocationCityInfo': {
        params: GetLocationCityInfoParams;
        responseData: GetLocationCityInfoResponseData;
    };
    'system.requestLocation': {
        params: RequestLocationParams;
        responseData: RequestLocationResponseData;
    };
    'system.isBottomNavigationBarShown': {
        params: IsBottomNavigationBarShownParams;
        responseData: IsBottomNavigationBarShownResponseData;
    };
    'tool.getABTestInfo': {
        params: GetABTestInfoParams;
        responseData: GetABTestInfoResponseData;
    };
    'tool.getKswitchData': {
        params: GetKswitchDataParams;
        responseData: GetKswitchDataResponseData;
    };
    'tool.handleEntryTag': {
        params: HandleEntryTagParams;
        responseData: HandleEntryTagResponseData;
    };
    'tool.encrypt': {
        params: EncryptParams;
        responseData: EncryptResponseData;
    };
    'tool.decrypt': {
        params: DecryptParams;
        responseData: DecryptResponseData;
    };
    'tool.getParamWithKey': {
        params: GetParamWithKeyParams;
        responseData: GetParamWithKeyResponseData;
    };
    'tool.getAllCommonParams': {
        params: GetAllCommonParamsParams;
        responseData: GetAllCommonParamsResponseData;
    };
    'tool.isChildLockEnable': {
        params: IsChildLockEnableParams;
        responseData: IsChildLockEnableResponseData;
    };
    'tool.getFileCRC32': {
        params: GetFileCRC32Params;
        responseData: GetFileCRC32ResponseData;
    };
    'tool.getCityInfoByCode': {
        params: GetCityInfoByCodeParams;
        responseData: GetCityInfoByCodeResponseData;
    };
    'ui.updateBottomNavigationBarColor': {
        params: UpdateBottomNavigationBarColorParams;
        responseData: UpdateBottomNavigationBarColorResponseData;
    };
    'feed.startNewTask': {
        params: StartNewTaskParams;
        responseData: StartNewTaskResponseData;
    };
    'feed.openFansGroup': {
        params: OpenFansGroupParams;
        responseData: OpenFansGroupResponseData;
    };
    'feed.getHistory': {
        params: GetHistoryParams;
        responseData: GetHistoryResponseData;
    };
    'feed.clearHistory': {
        params: ClearHistoryParams;
        responseData: ClearHistoryResponseData;
    };
    'feed.likePhoto': {
        params: LikePhotoParams;
        responseData: LikePhotoResponseData;
    };
    'feed.isWarmUpSuccess': {
        params: IsWarmUpSuccessParams;
        responseData: IsWarmUpSuccessResponseData;
    };
    'game.couponUsed': {
        params: CouponUsedParams;
        responseData: CouponUsedResponseData;
    };
    'live.stopLivePlay': {
        params: StopLivePlayParams;
        responseData: StopLivePlayResponseData;
    };
    'merchant.openUrl': {
        params: OpenUrlParams;
        responseData: OpenUrlResponseData;
    };
    'merchant.dismissBottomSheetRNDialog': {
        params: DismissBottomSheetRNDialogParams;
        responseData: DismissBottomSheetRNDialogResponseData;
    };
    'merchant.dismissYellowCarList': {
        params: DismissYellowCarListParams;
        responseData: DismissYellowCarListResponseData;
    };
    'merchant.showBottomSheetRNDialog': {
        params: ShowBottomSheetRNDialogParams;
        responseData: ShowBottomSheetRNDialogResponseData;
    };
    'merchant.merchantReservation': {
        params: MerchantReservationParams;
        responseData: MerchantReservationResponseData;
    };
    'merchant.showVFCInviteDialog': {
        params: ShowVFCInviteDialogParams;
        responseData: ShowVFCInviteDialogResponseData;
    };
    'merchant.selectIdCard': {
        params: SelectIdCardParams;
        responseData: SelectIdCardResponseData;
    };
    'merchant.startRouter': {
        params: StartRouterParams;
        responseData: StartRouterResponseData;
    };
    'merchant.debugLogger': {
        params: DebugLoggerParams;
        responseData: DebugLoggerResponseData;
    };
    'merchant.requestMerchantLocationInfo': {
        params: RequestMerchantLocationInfoParams;
        responseData: RequestMerchantLocationInfoResponseData;
    };
    'merchant.orderConfirmBackToLive': {
        params: OrderConfirmBackToLiveParams;
        responseData: OrderConfirmBackToLiveResponseData;
    };
    'merchant.dismissBottomSheetRNDialogWithCloseType': {
        params: DismissBottomSheetRNDialogWithCloseTypeParams;
        responseData: DismissBottomSheetRNDialogWithCloseTypeResponseData;
    };
    'pay.startHalfScreenRecharge': {
        params: StartHalfScreenRechargeParams;
        responseData: StartHalfScreenRechargeResponseData;
    };
    'pay.contract': {
        params: ContractParams;
        responseData: ContractResponseData;
    };
    'tool.clearClipBoard': {
        params: ToolClearClipBoardParams;
        responseData: ToolClearClipBoardResponseData;
    };
    'platform.clearClipBoard': {
        params: PlatformClearClipBoardParams;
        responseData: PlatformClearClipBoardResponseData;
    };
    'platform.showDatePicker': {
        params: ShowDatePickerParams;
        responseData: ShowDatePickerResponseData;
    };
    'platform.postJsEvent': {
        params: PostJsEventParams;
        responseData: PostJsEventResponseData;
    };
    'post.editAtlas': {
        params: EditAtlasParams;
        responseData: EditAtlasResponseData;
    };
    'post.deleteCacheVideoByPhotoId': {
        params: DeleteCacheVideoByPhotoIdParams;
        responseData: DeleteCacheVideoByPhotoIdResponseData;
    };
    'post.selectLocation': {
        params: SelectLocationParams;
        responseData: SelectLocationResponseData;
    };
    'social.multiChooseMessage': {
        params: MultiChooseMessageParams;
        responseData: MultiChooseMessageResponseData;
    };
    'social.setFollowActivityId': {
        params: SetFollowActivityIdParams;
        responseData: SetFollowActivityIdResponseData;
    };
    'social.followUser': {
        params: FollowUserParams;
        responseData: FollowUserResponseData;
    };
    'social.sendIMMessage': {
        params: SendIMMessageParams;
        responseData: SendIMMessageResponseData;
    };
    'social.recommendStat': {
        params: RecommendStatParams;
        responseData: RecommendStatResponseData;
    };
    'social.exitPageFromStack': {
        params: ExitPageFromStackParams;
        responseData: ExitPageFromStackResponseData;
    };
    'social.currentUserInfo': {
        params: CurrentUserInfoParams;
        responseData: CurrentUserInfoResponseData;
    };
    'KSTachikomaPopup.showInFragment': {
        params: ShowInFragmentParams;
        responseData: ShowInFragmentResponseData;
    };
    'KSTachikomaPopup.showInActivity': {
        params: ShowInActivityParams;
        responseData: ShowInActivityResponseData;
    };
    'growth.rewardVideoTask': {
        params: RewardVideoTaskParams;
        responseData: RewardVideoTaskResponseData;
    };
    'growth.showPendantBubble': {
        params: ShowPendantBubbleParams;
        responseData: ShowPendantBubbleResponseData;
    };
    'mini.startMini': {
        params: StartMiniParams;
        responseData: StartMiniResponseData;
    };
    'mini.prepareMini': {
        params: PrepareMiniParams;
        responseData: PrepareMiniResponseData;
    };
    'mini.handleMiniEvent': {
        params: HandleMiniEventParams;
        responseData: HandleMiniEventResponseData;
    };
    'im.getOriginUrl': {
        params: GetOriginUrlParams;
        responseData: GetOriginUrlResponseData;
    };
    'im.getUserInfo': {
        params: GetUserInfoParams;
        responseData: GetUserInfoResponseData;
    };
    'im.uploadGroupAvatar': {
        params: UploadGroupAvatarParams;
        responseData: UploadGroupAvatarResponseData;
    };
    'im.batchUpdateGroupInfo': {
        params: BatchUpdateGroupInfoParams;
        responseData: BatchUpdateGroupInfoResponseData;
    };
    'im.fetchMemberListInfo': {
        params: FetchMemberListInfoParams;
        responseData: FetchMemberListInfoResponseData;
    };
    'im.kickMember': {
        params: KickMemberParams;
        responseData: KickMemberResponseData;
    };
    'im.setMemberNickName': {
        params: SetMemberNickNameParams;
        responseData: SetMemberNickNameResponseData;
    };
    'im.setPrivateGroupName': {
        params: SetPrivateGroupNameParams;
        responseData: SetPrivateGroupNameResponseData;
    };
    'poi.openSerialOpPhotoDetail': {
        params: OpenSerialOpPhotoDetailParams;
        responseData: OpenSerialOpPhotoDetailResponseData;
    };
    'poi.openPhotoDetail': {
        params: OpenPhotoDetailParams;
        responseData: OpenPhotoDetailResponseData;
    };
    'TunaPLC.UpdateServiceLink': {
        params: UpdateServiceLinkParams;
        responseData: UpdateServiceLinkResponseData;
    };
    'feed.getCoronaTvChasingData': {
        params: GetCoronaTvChasingDataParams;
        responseData: GetCoronaTvChasingDataResponseData;
    };
    'feed.updateUserRecoBit': {
        params: UpdateUserRecoBitParams;
        responseData: UpdateUserRecoBitResponseData;
    };
    'feed.updateDeviceBit': {
        params: UpdateDeviceBitParams;
        responseData: UpdateDeviceBitResponseData;
    };
    'social.joinGroup': {
        params: SocialJoinGroupParams;
        responseData: SocialJoinGroupResponseData;
    };
    'im.joinGroup': {
        params: ImJoinGroupParams;
        responseData: ImJoinGroupResponseData;
    };
    'merchant.merchantNotify': {
        params: MerchantNotifyParams;
        responseData: MerchantNotifyResponseData;
    };
    'merchant.startSkuPanel': {
        params: StartSkuPanelParams;
        responseData: StartSkuPanelResponseData;
    };
    'tool.loadUrlOnNewPage': {
        params: ToolLoadUrlOnNewPageParams;
        responseData: ToolLoadUrlOnNewPageResponseData;
    };
    'platform.loadUrlOnNewPage': {
        params: PlatformLoadUrlOnNewPageParams;
        responseData: PlatformLoadUrlOnNewPageResponseData;
    };
    'post.saveTempImages': {
        params: SaveTempImagesParams;
        responseData: SaveTempImagesResponseData;
    };
    'mediaInteraction.selectImage': {
        params: MediaInteractionSelectImageParams;
        responseData: MediaInteractionSelectImageResponseData;
    };
    'post.selectImage': {
        params: PostSelectImageParams;
        responseData: PostSelectImageResponseData;
    };
    'system.vibrateLong': {
        params: VibrateLongParams;
        responseData: VibrateLongResponseData;
    };
    'social.getAddressBookInfo': {
        params: GetAddressBookInfoParams;
        responseData: GetAddressBookInfoResponseData;
    };
    'social.tapAddressBookCell': {
        params: TapAddressBookCellParams;
        responseData: TapAddressBookCellResponseData;
    };
    'social.tapNoticeHead': {
        params: TapNoticeHeadParams;
        responseData: TapNoticeHeadResponseData;
    };
    'social.tapNoticeBoxCell': {
        params: TapNoticeBoxCellParams;
        responseData: TapNoticeBoxCellResponseData;
    };
    'social.longPressNoticeBox': {
        params: LongPressNoticeBoxParams;
        responseData: LongPressNoticeBoxResponseData;
    };
    'social.tapNoticeUrl': {
        params: TapNoticeUrlParams;
        responseData: TapNoticeUrlResponseData;
    };
    'social.longPressNotice': {
        params: LongPressNoticeParams;
        responseData: LongPressNoticeResponseData;
    };
    'klink.state': {
        params: StateParams;
        responseData: StateResponseData;
    };
    'klink.registerPushEventNotifier': {
        params: RegisterPushEventNotifierParams;
        responseData: RegisterPushEventNotifierResponseData;
    };
    'klink.subscribePushMessage': {
        params: SubscribePushMessageParams;
        responseData: SubscribePushMessageResponseData;
    };
    'social.getFormatRawRecoTextInfo': {
        params: GetFormatRawRecoTextInfoParams;
        responseData: GetFormatRawRecoTextInfoResponseData;
    };
    'social.getSlideEntranceSubTitle': {
        params: GetSlideEntranceSubTitleParams;
        responseData: GetSlideEntranceSubTitleResponseData;
    };
    'social.didTapSlideEntrance': {
        params: DidTapSlideEntranceParams;
        responseData: DidTapSlideEntranceResponseData;
    };
    'social.clickFollowEachOtherButton': {
        params: ClickFollowEachOtherButtonParams;
        responseData: ClickFollowEachOtherButtonResponseData;
    };
    'social.dispatchKoiEmitData': {
        params: DispatchKoiEmitDataParams;
        responseData: DispatchKoiEmitDataResponseData;
    };
    'ui.showToast': {
        params: UiShowToastParams;
        responseData: UiShowToastResponseData;
    };
    'platform.showToast': {
        params: PlatformShowToastParams;
        responseData: PlatformShowToastResponseData;
    };
    'social.momentCurrentDraft': {
        params: MomentCurrentDraftParams;
        responseData: MomentCurrentDraftResponseData;
    };
    'social.getEmojiImageByCode': {
        params: GetEmojiImageByCodeParams;
        responseData: GetEmojiImageByCodeResponseData;
    };
    'klink.unsubscribePushMessage': {
        params: UnsubscribePushMessageParams;
        responseData: UnsubscribePushMessageResponseData;
    };
    'merchant.getProductClientInfo': {
        params: GetProductClientInfoParams;
        responseData: GetProductClientInfoResponseData;
    };
    'advertise.isLivePluginAvailable': {
        params: IsLivePluginAvailableParams;
        responseData: IsLivePluginAvailableResponseData;
    };
    'gameInteractive.getLiveInfo': {
        params: GetLiveInfoParams;
        responseData: GetLiveInfoResponseData;
    };
    'gameInteractive.playCommand': {
        params: PlayCommandParams;
        responseData: PlayCommandResponseData;
    };
    'gameInteractive.entranceUpdate': {
        params: EntranceUpdateParams;
        responseData: EntranceUpdateResponseData;
    };
    'gameInteractive.setRequestOrientation': {
        params: SetRequestOrientationParams;
        responseData: SetRequestOrientationResponseData;
    };
    'gameInteractive.queryBalance': {
        params: QueryBalanceParams;
        responseData: QueryBalanceResponseData;
    };
    'gameInteractive.queryMicStatus': {
        params: QueryMicStatusParams;
        responseData: QueryMicStatusResponseData;
    };
    'gameInteractive.observePush': {
        params: ObservePushParams;
        responseData: ObservePushResponseData;
    };
    'gameInteractive.showGzoneEntrance': {
        params: ShowGzoneEntranceParams;
        responseData: ShowGzoneEntranceResponseData;
    };
    'social.mobileQuickLoginInfo': {
        params: MobileQuickLoginInfoParams;
        responseData: MobileQuickLoginInfoResponseData;
    };
    'merchant.openMerchantAddressPage': {
        params: OpenMerchantAddressPageParams;
        responseData: OpenMerchantAddressPageResponseData;
    };
    'social.mobileQuickAuthInfo': {
        params: MobileQuickAuthInfoParams;
        responseData: MobileQuickAuthInfoResponseData;
    };
    'klink.getAppId': {
        params: GetAppIdParams;
        responseData: GetAppIdResponseData;
    };
    'post.uploadShopVideo': {
        params: UploadShopVideoParams;
        responseData: UploadShopVideoResponseData;
    };
    'mediaInteraction.saveImage': {
        params: MediaInteractionSaveImageParams;
        responseData: MediaInteractionSaveImageResponseData;
    };
    'post.saveImage': {
        params: PostSaveImageParams;
        responseData: PostSaveImageResponseData;
    };
    'post.postVideo': {
        params: PostVideoParams;
        responseData: PostVideoResponseData;
    };
    'post.previewVideo': {
        params: PreviewVideoParams;
        responseData: PreviewVideoResponseData;
    };
    'post.reUploadShopVideo': {
        params: ReUploadShopVideoParams;
        responseData: ReUploadShopVideoResponseData;
    };
    'merchant.requestLocationAuthorization': {
        params: RequestLocationAuthorizationParams;
        responseData: RequestLocationAuthorizationResponseData;
    };
    'post.launchMediaScene': {
        params: LaunchMediaSceneParams;
        responseData: LaunchMediaSceneResponseData;
    };
    'klink.subscribeTags': {
        params: SubscribeTagsParams;
        responseData: SubscribeTagsResponseData;
    };
    'klink.unsubscribeAllTags': {
        params: UnsubscribeAllTagsParams;
        responseData: UnsubscribeAllTagsResponseData;
    };
    'merchant.getLatestImage': {
        params: GetLatestImageParams;
        responseData: GetLatestImageResponseData;
    };
    'sf2022.getContactInfo': {
        params: Sf2022GetContactInfoParams;
        responseData: Sf2022GetContactInfoResponseData;
    };
    'social.getContactInfo': {
        params: SocialGetContactInfoParams;
        responseData: SocialGetContactInfoResponseData;
    };
    'advertise.reportAdLogAction': {
        params: ReportAdLogActionParams;
        responseData: ReportAdLogActionResponseData;
    };
    'tool.canIUse': {
        params: CanIUseParams;
        responseData: CanIUseResponseData;
    };
    'minigame.publishSogameVideo': {
        params: PublishSogameVideoParams;
        responseData: PublishSogameVideoResponseData;
    };
    'im.handleJoinRequest': {
        params: HandleJoinRequestParams;
        responseData: HandleJoinRequestResponseData;
    };
    'im.modifyGroupJoinMode': {
        params: ModifyGroupJoinModeParams;
        responseData: ModifyGroupJoinModeResponseData;
    };
    'hybrid.getAndUpdateHybridDetail': {
        params: GetAndUpdateHybridDetailParams;
        responseData: GetAndUpdateHybridDetailResponseData;
    };
    'system.requestPermission': {
        params: RequestPermissionParams;
        responseData: RequestPermissionResponseData;
    };
    'system.hasPermission': {
        params: HasPermissionParams;
        responseData: HasPermissionResponseData;
    };
    'tool.getApiList': {
        params: GetApiListParams;
        responseData: GetApiListResponseData;
    };
    'game.openCompetitionPlayBack': {
        params: OpenCompetitionPlayBackParams;
        responseData: OpenCompetitionPlayBackResponseData;
    };
    'feed.getCoronaPhotoPlayDuration': {
        params: GetCoronaPhotoPlayDurationParams;
        responseData: GetCoronaPhotoPlayDurationResponseData;
    };
    'game.openLiveSlideContainer': {
        params: OpenLiveSlideContainerParams;
        responseData: OpenLiveSlideContainerResponseData;
    };
    'system.getIsGPSOpen': {
        params: GetIsGPSOpenParams;
        responseData: GetIsGPSOpenResponseData;
    };
    'system.getNavigationBarHeight': {
        params: GetNavigationBarHeightParams;
        responseData: GetNavigationBarHeightResponseData;
    };
    'post.draftRecommendPhotos': {
        params: DraftRecommendPhotosParams;
        responseData: DraftRecommendPhotosResponseData;
    };
    'post.draftRecommendPublishPhotos': {
        params: DraftRecommendPublishPhotosParams;
        responseData: DraftRecommendPublishPhotosResponseData;
    };
    'post.getDraftCoverPath': {
        params: GetDraftCoverPathParams;
        responseData: GetDraftCoverPathResponseData;
    };
    'post.addDraftRecommendBlackList': {
        params: AddDraftRecommendBlackListParams;
        responseData: AddDraftRecommendBlackListResponseData;
    };
    'post.draftRecommendResult': {
        params: DraftRecommendResultParams;
        responseData: DraftRecommendResultResponseData;
    };
    'tool.getHost': {
        params: GetHostParams;
        responseData: GetHostResponseData;
    };
    'roamPanel.jumpToMapPage': {
        params: JumpToMapPageParams;
        responseData: JumpToMapPageResponseData;
    };
    'roamPanel.showHometownPanel': {
        params: ShowHometownPanelParams;
        responseData: ShowHometownPanelResponseData;
    };
    'roamPanel.getRoamCityData': {
        params: GetRoamCityDataParams;
        responseData: GetRoamCityDataResponseData;
    };
    'roamPanel.onCitySelected': {
        params: OnCitySelectedParams;
        responseData: OnCitySelectedResponseData;
    };
    'roamPanel.checkAndUpdateRoamCityData': {
        params: CheckAndUpdateRoamCityDataParams;
        responseData: CheckAndUpdateRoamCityDataResponseData;
    };
    'Tuna.UpdateBusinessInfo': {
        params: UpdateBusinessInfoParams;
        responseData: UpdateBusinessInfoResponseData;
    };
    'Tuna.LaunchDatePicker': {
        params: LaunchDatePickerParams;
        responseData: LaunchDatePickerResponseData;
    };
    'Tuna.LaunchPhonePage': {
        params: LaunchPhonePageParams;
        responseData: LaunchPhonePageResponseData;
    };
    'Tuna.LaunchNativePage': {
        params: LaunchNativePageParams;
        responseData: LaunchNativePageResponseData;
    };
    'Tuna.ResetWebViewHeight': {
        params: ResetWebViewHeightParams;
        responseData: ResetWebViewHeightResponseData;
    };
    'Tuna.SetDiskDataForKey': {
        params: SetDiskDataForKeyParams;
        responseData: SetDiskDataForKeyResponseData;
    };
    'Tuna.DiskDataForKey': {
        params: DiskDataForKeyParams;
        responseData: DiskDataForKeyResponseData;
    };
    'Tuna.LaunchBindAccountDialog': {
        params: LaunchBindAccountDialogParams;
        responseData: LaunchBindAccountDialogResponseData;
    };
    'Tuna.StartTunaDownload': {
        params: StartTunaDownloadParams;
        responseData: StartTunaDownloadResponseData;
    };
    'Tuna.LaunchTunaWebDialog': {
        params: LaunchTunaWebDialogParams;
        responseData: LaunchTunaWebDialogResponseData;
    };
    'Tuna.EmbedWebContentDidUpdate': {
        params: EmbedWebContentDidUpdateParams;
        responseData: EmbedWebContentDidUpdateResponseData;
    };
    'Tuna.ReportVideoPlayEvent': {
        params: ReportVideoPlayEventParams;
        responseData: ReportVideoPlayEventResponseData;
    };
    'Tuna.ReceiveModuleUpdateMsg': {
        params: ReceiveModuleUpdateMsgParams;
        responseData: ReceiveModuleUpdateMsgResponseData;
    };
    'Tuna.UpdateLivePrepareEarnMoneyStatus': {
        params: UpdateLivePrepareEarnMoneyStatusParams;
        responseData: UpdateLivePrepareEarnMoneyStatusResponseData;
    };
    'Tuna.ActionLogger': {
        params: ActionLoggerParams;
        responseData: ActionLoggerResponseData;
    };
    'Tuna.UpdateProfileUserType': {
        params: UpdateProfileUserTypeParams;
        responseData: UpdateProfileUserTypeResponseData;
    };
    'ui.showBottomAlert': {
        params: ShowBottomAlertParams;
        responseData: ShowBottomAlertResponseData;
    };
    'im.getGroupInfo': {
        params: GetGroupInfoParams;
        responseData: GetGroupInfoResponseData;
    };
    'game.openLiveSlideContainerWithParams': {
        params: OpenLiveSlideContainerWithParamsParams;
        responseData: OpenLiveSlideContainerWithParamsResponseData;
    };
    'tool.getCdnHost': {
        params: GetCdnHostParams;
        responseData: GetCdnHostResponseData;
    };
    'game.showTreasureBoxPriseDialog': {
        params: ShowTreasureBoxPriseDialogParams;
        responseData: ShowTreasureBoxPriseDialogResponseData;
    };
    'TunaPLC.UpdatePLC': {
        params: UpdatePLCParams;
        responseData: UpdatePLCResponseData;
    };
    'plcCodContainer.updateNavigationBar': {
        params: UpdateNavigationBarParams;
        responseData: UpdateNavigationBarResponseData;
    };
    'pay.nebulaStartGatewayWithdraw': {
        params: NebulaStartGatewayWithdrawParams;
        responseData: NebulaStartGatewayWithdrawResponseData;
    };
    'social.uploadContacts': {
        params: UploadContactsParams;
        responseData: UploadContactsResponseData;
    };
    'plcCodContainer.addNavigationBar': {
        params: AddNavigationBarParams;
        responseData: AddNavigationBarResponseData;
    };
    'post.getSmartAlbumData': {
        params: GetSmartAlbumDataParams;
        responseData: GetSmartAlbumDataResponseData;
    };
    'post.editDraft': {
        params: EditDraftParams;
        responseData: EditDraftResponseData;
    };
    'post.getEditDraftData': {
        params: GetEditDraftDataParams;
        responseData: GetEditDraftDataResponseData;
    };
    'post.editSmartAlbum': {
        params: EditSmartAlbumParams;
        responseData: EditSmartAlbumResponseData;
    };
    'platform.hasInstalledApp': {
        params: HasInstalledAppParams;
        responseData: HasInstalledAppResponseData;
    };
    'sf2022.getWifiInfo': {
        params: Sf2022GetWifiInfoParams;
        responseData: Sf2022GetWifiInfoResponseData;
    };
    'system.getWifiInfo': {
        params: SystemGetWifiInfoParams;
        responseData: SystemGetWifiInfoResponseData;
    };
    'tool.setClipBoard': {
        params: SetClipBoardParams;
        responseData: SetClipBoardResponseData;
    };
    'gameInteractive.updateAnchorFollowStatus': {
        params: UpdateAnchorFollowStatusParams;
        responseData: UpdateAnchorFollowStatusResponseData;
    };
    'gameInteractive.queryAnchorFollowStatus': {
        params: QueryAnchorFollowStatusParams;
        responseData: QueryAnchorFollowStatusResponseData;
    };
    'gameInteractive.queryOpenId': {
        params: QueryOpenIdParams;
        responseData: QueryOpenIdResponseData;
    };
    'post.getRandomMusicSimpleInfoFromKSwitchKey': {
        params: GetRandomMusicSimpleInfoFromKSwitchKeyParams;
        responseData: GetRandomMusicSimpleInfoFromKSwitchKeyResponseData;
    };
    'post.merchantJumpToPreview': {
        params: MerchantJumpToPreviewParams;
        responseData: MerchantJumpToPreviewResponseData;
    };
    'post.publishFromDraftId': {
        params: PublishFromDraftIdParams;
        responseData: PublishFromDraftIdResponseData;
    };
    'post.publishFromMerchantParams': {
        params: PublishFromMerchantParamsParams;
        responseData: PublishFromMerchantParamsResponseData;
    };
    'roamPanel.cacheRoamCityData': {
        params: CacheRoamCityDataParams;
        responseData: CacheRoamCityDataResponseData;
    };
    'im.fetchUsersOnlineStatus': {
        params: FetchUsersOnlineStatusParams;
        responseData: FetchUsersOnlineStatusResponseData;
    };
    'feed.getUseTime': {
        params: GetUseTimeParams;
        responseData: GetUseTimeResponseData;
    };
    'feed.getRestInterval': {
        params: GetRestIntervalParams;
        responseData: GetRestIntervalResponseData;
    };
    'feed.setRestInterval': {
        params: SetRestIntervalParams;
        responseData: SetRestIntervalResponseData;
    };
    'feed.getSleepIntervals': {
        params: GetSleepIntervalsParams;
        responseData: GetSleepIntervalsResponseData;
    };
    'feed.setSleepIntervals': {
        params: SetSleepIntervalsParams;
        responseData: SetSleepIntervalsResponseData;
    };
    'Tuna.OpenFeedSlide': {
        params: OpenFeedSlideParams;
        responseData: OpenFeedSlideResponseData;
    };
    'tool.publishRubas': {
        params: PublishRubasParams;
        responseData: PublishRubasResponseData;
    };
    'tool.setRubasDimension': {
        params: SetRubasDimensionParams;
        responseData: SetRubasDimensionResponseData;
    };
    'tool.setRubasDimensionBatch': {
        params: SetRubasDimensionBatchParams;
        responseData: SetRubasDimensionBatchResponseData;
    };
    'poi.nearbyPois': {
        params: NearbyPoisParams;
        responseData: NearbyPoisResponseData;
    };
    'poi.searchKeywordPois': {
        params: SearchKeywordPoisParams;
        responseData: SearchKeywordPoisResponseData;
    };
    'system.isPad': {
        params: IsPadParams;
        responseData: IsPadResponseData;
    };
    'system.deviceIsLandscape': {
        params: DeviceIsLandscapeParams;
        responseData: DeviceIsLandscapeResponseData;
    };
    'poi.recommendPois': {
        params: RecommendPoisParams;
        responseData: RecommendPoisResponseData;
    };
    'tool.addShortcut': {
        params: AddShortcutParams;
        responseData: AddShortcutResponseData;
    };
    'social.removeFans': {
        params: RemoveFansParams;
        responseData: RemoveFansResponseData;
    };
    'platform.request': {
        params: RequestParams;
        responseData: RequestResponseData;
    };
    'advertise.getEapiRequestParams': {
        params: GetEapiRequestParamsParams;
        responseData: GetEapiRequestParamsResponseData;
    };
    'merchant.openMidGroundUrl': {
        params: OpenMidGroundUrlParams;
        responseData: OpenMidGroundUrlResponseData;
    };
    'social.searchFollowUsers': {
        params: SearchFollowUsersParams;
        responseData: SearchFollowUsersResponseData;
    };
    'social.syncFollowUsers': {
        params: SyncFollowUsersParams;
        responseData: SyncFollowUsersResponseData;
    };
    'social.updateFollowUsers': {
        params: UpdateFollowUsersParams;
        responseData: UpdateFollowUsersResponseData;
    };
    'social.editRemarkName': {
        params: EditRemarkNameParams;
        responseData: EditRemarkNameResponseData;
    };
    'social.searchFriendUsers': {
        params: SearchFriendUsersParams;
        responseData: SearchFriendUsersResponseData;
    };
    'growth.kwaiPopCustomFunc': {
        params: KwaiPopCustomFuncParams;
        responseData: KwaiPopCustomFuncResponseData;
    };
    'post.recordVideoAndUpload': {
        params: RecordVideoAndUploadParams;
        responseData: RecordVideoAndUploadResponseData;
    };
    'im.searchChat': {
        params: SearchChatParams;
        responseData: SearchChatResponseData;
    };
    'im.jumpToSessionWhiteList': {
        params: JumpToSessionWhiteListParams;
        responseData: JumpToSessionWhiteListResponseData;
    };
    'post.openGrowthYoda': {
        params: OpenGrowthYodaParams;
        responseData: OpenGrowthYodaResponseData;
    };
    'post.postFlyWheelLogicEvent': {
        params: PostFlyWheelLogicEventParams;
        responseData: PostFlyWheelLogicEventResponseData;
    };
    'post.readFlyWheelLogicEventCache': {
        params: ReadFlyWheelLogicEventCacheParams;
        responseData: ReadFlyWheelLogicEventCacheResponseData;
    };
    'im.getAllGroupList': {
        params: GetAllGroupListParams;
        responseData: GetAllGroupListResponseData;
    };
    'social.deleteRedDot': {
        params: DeleteRedDotParams;
        responseData: DeleteRedDotResponseData;
    };
    'social.getAliasByUserIds': {
        params: GetAliasByUserIdsParams;
        responseData: GetAliasByUserIdsResponseData;
    };
    'Tuna.RequestAndCallVirtualPhone': {
        params: RequestAndCallVirtualPhoneParams;
        responseData: RequestAndCallVirtualPhoneResponseData;
    };
    'social.updateCacheRemarkName': {
        params: UpdateCacheRemarkNameParams;
        responseData: UpdateCacheRemarkNameResponseData;
    };
    'growth.earlyClosePiggyBankTask': {
        params: EarlyClosePiggyBankTaskParams;
        responseData: EarlyClosePiggyBankTaskResponseData;
    };
    'pay.startKwaiCoinRecharge': {
        params: StartKwaiCoinRechargeParams;
        responseData: StartKwaiCoinRechargeResponseData;
    };
    'feed.healthySlideAction': {
        params: HealthySlideActionParams;
        responseData: HealthySlideActionResponseData;
    };
    'merchant.isLiveFloatingWindowShowing': {
        params: IsLiveFloatingWindowShowingParams;
        responseData: IsLiveFloatingWindowShowingResponseData;
    };
    'growth.getRPRInfo': {
        params: GetRPRInfoParams;
        responseData: GetRPRInfoResponseData;
    };
    'growth.retryRPR': {
        params: RetryRPRParams;
        responseData: RetryRPRResponseData;
    };
    'component.download': {
        params: DownloadParams;
        responseData: DownloadResponseData;
    };
    'social.followFansListSettings': {
        params: FollowFansListSettingsParams;
        responseData: FollowFansListSettingsResponseData;
    };
    'social.hideNewJoinFriendsPoint': {
        params: HideNewJoinFriendsPointParams;
        responseData: HideNewJoinFriendsPointResponseData;
    };
    'plcCodContainer.getContainerStatus': {
        params: GetContainerStatusParams;
        responseData: GetContainerStatusResponseData;
    };
    'plcCodContainer.setContainerStatus': {
        params: SetContainerStatusParams;
        responseData: SetContainerStatusResponseData;
    };
    'gameInteractive.pay': {
        params: PayParams;
        responseData: PayResponseData;
    };
    'gameInteractive.queryEnergy': {
        params: QueryEnergyParams;
        responseData: QueryEnergyResponseData;
    };
    'gameInteractive.getToken': {
        params: GetTokenParams;
        responseData: GetTokenResponseData;
    };
    'poi.switchAggregationVideo': {
        params: SwitchAggregationVideoParams;
        responseData: SwitchAggregationVideoResponseData;
    };
    'tool.getSlideBack': {
        params: GetSlideBackParams;
        responseData: GetSlideBackResponseData;
    };
    'tool.setSlideBack': {
        params: SetSlideBackParams;
        responseData: SetSlideBackResponseData;
    };
    'poi.updateLivePrepareEarnMLocalLifeStatus': {
        params: UpdateLivePrepareEarnMLocalLifeStatusParams;
        responseData: UpdateLivePrepareEarnMLocalLifeStatusResponseData;
    };
    'merchant.getStorage': {
        params: GetStorageParams;
        responseData: GetStorageResponseData;
    };
    'feed.pauseOffline': {
        params: PauseOfflineParams;
        responseData: PauseOfflineResponseData;
    };
    'feed.resumeOffline': {
        params: ResumeOfflineParams;
        responseData: ResumeOfflineResponseData;
    };
    'merchant.setStorage': {
        params: SetStorageParams;
        responseData: SetStorageResponseData;
    };
    'feed.getOfflineCacheList': {
        params: GetOfflineCacheListParams;
        responseData: GetOfflineCacheListResponseData;
    };
    'feed.deleteOfflineCache': {
        params: DeleteOfflineCacheParams;
        responseData: DeleteOfflineCacheResponseData;
    };
    'feed.toOfflineCacheListPage': {
        params: ToOfflineCacheListPageParams;
        responseData: ToOfflineCacheListPageResponseData;
    };
    'post.sendActions': {
        params: SendActionsParams;
        responseData: SendActionsResponseData;
    };
    'feed.getOfflineCachingList': {
        params: GetOfflineCachingListParams;
        responseData: GetOfflineCachingListResponseData;
    };
    'feed.startOffline': {
        params: StartOfflineParams;
        responseData: StartOfflineResponseData;
    };
    'feed.startAllOffline': {
        params: StartAllOfflineParams;
        responseData: StartAllOfflineResponseData;
    };
    'feed.pauseAllOffline': {
        params: PauseAllOfflineParams;
        responseData: PauseAllOfflineResponseData;
    };
    'im.enableRedDotRestrain': {
        params: EnableRedDotRestrainParams;
        responseData: EnableRedDotRestrainResponseData;
    };
    'merchant.setSandeagoMaxNum': {
        params: SetSandeagoMaxNumParams;
        responseData: SetSandeagoMaxNumResponseData;
    };
    'system.openToolSwitch': {
        params: SystemOpenToolSwitchParams;
        responseData: SystemOpenToolSwitchResponseData;
    };
    'merchant.openToolSwitch': {
        params: MerchantOpenToolSwitchParams;
        responseData: MerchantOpenToolSwitchResponseData;
    };
    'merchant.closeToolSwitch': {
        params: CloseToolSwitchParams;
        responseData: CloseToolSwitchResponseData;
    };
    'im.getConversationInfo': {
        params: GetConversationInfoParams;
        responseData: GetConversationInfoResponseData;
    };
    'im.setConversationMute': {
        params: SetConversationMuteParams;
        responseData: SetConversationMuteResponseData;
    };
    'im.loadConversationList': {
        params: LoadConversationListParams;
        responseData: LoadConversationListResponseData;
    };
    'im.setConversationStickyOnTop': {
        params: SetConversationStickyOnTopParams;
        responseData: SetConversationStickyOnTopResponseData;
    };
    'im.deleteConversationMessage': {
        params: DeleteConversationMessageParams;
        responseData: DeleteConversationMessageResponseData;
    };
    'poi.openLiveFeed': {
        params: OpenLiveFeedParams;
        responseData: OpenLiveFeedResponseData;
    };
    'game.showSelectOnGameAlert': {
        params: ShowSelectOnGameAlertParams;
        responseData: ShowSelectOnGameAlertResponseData;
    };
    'game.showSelectOnCalenderAlert': {
        params: ShowSelectOnCalenderAlertParams;
        responseData: ShowSelectOnCalenderAlertResponseData;
    };
    'growth.getUAGConfig': {
        params: GetUAGConfigParams;
        responseData: GetUAGConfigResponseData;
    };
    'growth.getUAGSubConfig': {
        params: GetUAGSubConfigParams;
        responseData: GetUAGSubConfigResponseData;
    };
    'im.noticeConversationBlackList': {
        params: NoticeConversationBlackListParams;
        responseData: NoticeConversationBlackListResponseData;
    };
    'im.loadRejectConversationList': {
        params: LoadRejectConversationListParams;
        responseData: LoadRejectConversationListResponseData;
    };
    'im.setConversationReceiveMessage': {
        params: SetConversationReceiveMessageParams;
        responseData: SetConversationReceiveMessageResponseData;
    };
    'im.batchGetUserInfo': {
        params: BatchGetUserInfoParams;
        responseData: BatchGetUserInfoResponseData;
    };
    'social.jumpToEditGroupNamePage': {
        params: SocialJumpToEditGroupNamePageParams;
        responseData: SocialJumpToEditGroupNamePageResponseData;
    };
    'im.jumpToEditGroupNamePage': {
        params: ImJumpToEditGroupNamePageParams;
        responseData: ImJumpToEditGroupNamePageResponseData;
    };
    'im.refreshGroupInfo': {
        params: RefreshGroupInfoParams;
        responseData: RefreshGroupInfoResponseData;
    };
    'social.syncFollowsFansPrivacy': {
        params: SyncFollowsFansPrivacyParams;
        responseData: SyncFollowsFansPrivacyResponseData;
    };
    'im.getGroupMembers': {
        params: GetGroupMembersParams;
        responseData: GetGroupMembersResponseData;
    };
    'im.getFriendUsers': {
        params: GetFriendUsersParams;
        responseData: GetFriendUsersResponseData;
    };
    'im.getFollowUsers': {
        params: GetFollowUsersParams;
        responseData: GetFollowUsersResponseData;
    };
    'im.inviteGroupUsers': {
        params: InviteGroupUsersParams;
        responseData: InviteGroupUsersResponseData;
    };
    'system.openGroupMemberManageActivity': {
        params: OpenGroupMemberManageActivityParams;
        responseData: OpenGroupMemberManageActivityResponseData;
    };
    'game.hideWanfaPanel': {
        params: HideWanfaPanelParams;
        responseData: HideWanfaPanelResponseData;
    };
    'system.gotoGroupMemberList': {
        params: SystemGotoGroupMemberListParams;
        responseData: SystemGotoGroupMemberListResponseData;
    };
    'im.gotoGroupMemberList': {
        params: ImGotoGroupMemberListParams;
        responseData: ImGotoGroupMemberListResponseData;
    };
    'im.setGroupStickyTop': {
        params: SetGroupStickyTopParams;
        responseData: SetGroupStickyTopResponseData;
    };
    'im.gotoGroupQrCodePage': {
        params: GotoGroupQrCodePageParams;
        responseData: GotoGroupQrCodePageResponseData;
    };
    'im.reportGroup': {
        params: ReportGroupParams;
        responseData: ReportGroupResponseData;
    };
    'im.im': {
        params: ImParams;
        responseData: ImResponseData;
    };
    'im.delAllMessage': {
        params: DelAllMessageParams;
        responseData: DelAllMessageResponseData;
    };
    'im.exitGroup': {
        params: ExitGroupParams;
        responseData: ExitGroupResponseData;
    };
    'im.getStartupConfig': {
        params: GetStartupConfigParams;
        responseData: GetStartupConfigResponseData;
    };
    'post.launchMediaSceneV2': {
        params: LaunchMediaSceneV2Params;
        responseData: LaunchMediaSceneV2ResponseData;
    };
    'post.executeRPN': {
        params: ExecuteRPNParams;
        responseData: ExecuteRPNResponseData;
    };
    'post.lockFlyWheelTaskType': {
        params: LockFlyWheelTaskTypeParams;
        responseData: LockFlyWheelTaskTypeResponseData;
    };
    'system.getDisplaySetting': {
        params: GetDisplaySettingParams;
        responseData: GetDisplaySettingResponseData;
    };
    'social.sameFollowPageShouldShowTips': {
        params: SameFollowPageShouldShowTipsParams;
        responseData: SameFollowPageShouldShowTipsResponseData;
    };
    'im.createPrivateGroup': {
        params: CreatePrivateGroupParams;
        responseData: CreatePrivateGroupResponseData;
    };
    'nearby.sendPrivateMessage': {
        params: SendPrivateMessageParams;
        responseData: SendPrivateMessageResponseData;
    };
    'im.openGroupMemberManagePage': {
        params: OpenGroupMemberManagePageParams;
        responseData: OpenGroupMemberManagePageResponseData;
    };
    'im.deleteGroupMessage': {
        params: DeleteGroupMessageParams;
        responseData: DeleteGroupMessageResponseData;
    };
    'post.registerFeedBackMenu': {
        params: RegisterFeedBackMenuParams;
        responseData: RegisterFeedBackMenuResponseData;
    };
    'advertise.reportAdLog': {
        params: ReportAdLogParams;
        responseData: ReportAdLogResponseData;
    };
    'feed.checkTvVipStatus': {
        params: CheckTvVipStatusParams;
        responseData: CheckTvVipStatusResponseData;
    };
    'klink.send': {
        params: SendParams;
        responseData: SendResponseData;
    };
    'klink.getInstanceId': {
        params: GetInstanceIdParams;
        responseData: GetInstanceIdResponseData;
    };
    'klink.mayReconnectImmediately': {
        params: MayReconnectImmediatelyParams;
        responseData: MayReconnectImmediatelyResponseData;
    };
    'post.showStatusToast': {
        params: ShowStatusToastParams;
        responseData: ShowStatusToastResponseData;
    };
    'system.requestLocationWithoutCustomDialog': {
        params: RequestLocationWithoutCustomDialogParams;
        responseData: RequestLocationWithoutCustomDialogResponseData;
    };
    'post.hasNavigationBar': {
        params: HasNavigationBarParams;
        responseData: HasNavigationBarResponseData;
    };
    'feed.initMusicListPlayer': {
        params: InitMusicListPlayerParams;
        responseData: InitMusicListPlayerResponseData;
    };
    'pay.openYodaWebView': {
        params: OpenYodaWebViewParams;
        responseData: OpenYodaWebViewResponseData;
    };
    'post.fetchSceneAlbum': {
        params: FetchSceneAlbumParams;
        responseData: FetchSceneAlbumResponseData;
    };
    'system.getScreenBrightness': {
        params: GetScreenBrightnessParams;
        responseData: GetScreenBrightnessResponseData;
    };
    'system.setScreenBrightness': {
        params: SetScreenBrightnessParams;
        responseData: SetScreenBrightnessResponseData;
    };
    'feed.updateNativeMusicPlayer': {
        params: UpdateNativeMusicPlayerParams;
        responseData: UpdateNativeMusicPlayerResponseData;
    };
    'im.shareGroupQR': {
        params: ShareGroupQRParams;
        responseData: ShareGroupQRResponseData;
    };
    'post.fetchMagicFaceBriefInfo': {
        params: FetchMagicFaceBriefInfoParams;
        responseData: FetchMagicFaceBriefInfoResponseData;
    };
    'post.fetchMagicFacePanelBriefInfo': {
        params: FetchMagicFacePanelBriefInfoParams;
        responseData: FetchMagicFacePanelBriefInfoResponseData;
    };
    'pay.startOneStepPay': {
        params: StartOneStepPayParams;
        responseData: StartOneStepPayResponseData;
    };
    'post.fetchScheme': {
        params: FetchSchemeParams;
        responseData: FetchSchemeResponseData;
    };
    'merchant.getSubTabHeight': {
        params: GetSubTabHeightParams;
        responseData: GetSubTabHeightResponseData;
    };
    'advertise.openVideoFeedListPage': {
        params: OpenVideoFeedListPageParams;
        responseData: OpenVideoFeedListPageResponseData;
    };
    'system.getSystemLocationPermission': {
        params: GetSystemLocationPermissionParams;
        responseData: GetSystemLocationPermissionResponseData;
    };
    'system.getUserLocationPermission': {
        params: GetUserLocationPermissionParams;
        responseData: GetUserLocationPermissionResponseData;
    };
    'system.isUserLocationInCoolDownTime': {
        params: IsUserLocationInCoolDownTimeParams;
        responseData: IsUserLocationInCoolDownTimeResponseData;
    };
    'system.updateLivePrepareEarnMHouseStatus': {
        params: SystemUpdateLivePrepareEarnMHouseStatusParams;
        responseData: SystemUpdateLivePrepareEarnMHouseStatusResponseData;
    };
    'house.updateLivePrepareEarnMHouseStatus': {
        params: HouseUpdateLivePrepareEarnMHouseStatusParams;
        responseData: HouseUpdateLivePrepareEarnMHouseStatusResponseData;
    };
    'feed.installApp': {
        params: InstallAppParams;
        responseData: InstallAppResponseData;
    };
    'merchant.getPageLogContext': {
        params: GetPageLogContextParams;
        responseData: GetPageLogContextResponseData;
    };
    'house.localHouseConsultSuccessBridge': {
        params: LocalHouseConsultSuccessBridgeParams;
        responseData: LocalHouseConsultSuccessBridgeResponseData;
    };
    'feed.notifyNativePlayerAppStateDidChange': {
        params: NotifyNativePlayerAppStateDidChangeParams;
        responseData: NotifyNativePlayerAppStateDidChangeResponseData;
    };
    'im.getGroupMemberIds': {
        params: GetGroupMemberIdsParams;
        responseData: GetGroupMemberIdsResponseData;
    };
    'feed.setInterestEditList': {
        params: SetInterestEditListParams;
        responseData: SetInterestEditListResponseData;
    };
    'feed.startAtEditor': {
        params: StartAtEditorParams;
        responseData: StartAtEditorResponseData;
    };
    'poi.hidePoiCommentElement': {
        params: HidePoiCommentElementParams;
        responseData: HidePoiCommentElementResponseData;
    };
    'feed.notifyNativeFindSecondFloorClose': {
        params: NotifyNativeFindSecondFloorCloseParams;
        responseData: NotifyNativeFindSecondFloorCloseResponseData;
    };
    'post.launchYearAlbum2022': {
        params: LaunchYearAlbum2022Params;
        responseData: LaunchYearAlbum2022ResponseData;
    };
    'social.prefetchImageToDisk': {
        params: PrefetchImageToDiskParams;
        responseData: PrefetchImageToDiskResponseData;
    };
    'social.isAddIntimateWidget': {
        params: IsAddIntimateWidgetParams;
        responseData: IsAddIntimateWidgetResponseData;
    };
    'advertise.getAdInfo': {
        params: GetAdInfoParams;
        responseData: GetAdInfoResponseData;
    };
    'post.preloadYearAlbumResource': {
        params: PreloadYearAlbumResourceParams;
        responseData: PreloadYearAlbumResourceResponseData;
    };
    'post.clearYearAlbumResource': {
        params: ClearYearAlbumResourceParams;
        responseData: ClearYearAlbumResourceResponseData;
    };
    'social.pullTietieChatPanel': {
        params: PullTietieChatPanelParams;
        responseData: PullTietieChatPanelResponseData;
    };
    'pay.generalIAPPurchase': {
        params: GeneralIAPPurchaseParams;
        responseData: GeneralIAPPurchaseResponseData;
    };
    'post.goToPost': {
        params: GoToPostParams;
        responseData: GoToPostResponseData;
    };
    'post.publishToMiddlePlatform': {
        params: PublishToMiddlePlatformParams;
        responseData: PublishToMiddlePlatformResponseData;
    };
    'post.fetchExtActivityInfo': {
        params: FetchExtActivityInfoParams;
        responseData: FetchExtActivityInfoResponseData;
    };
    'post.isSavedOrPublishedPhoto': {
        params: IsSavedOrPublishedPhotoParams;
        responseData: IsSavedOrPublishedPhotoResponseData;
    };
    'merchant.registerTroubleShooting': {
        params: RegisterTroubleShootingParams;
        responseData: RegisterTroubleShootingResponseData;
    };
    'merchant.unRegisterTroubleShooting': {
        params: UnRegisterTroubleShootingParams;
        responseData: UnRegisterTroubleShootingResponseData;
    };
    'merchant.addComponentNode': {
        params: AddComponentNodeParams;
        responseData: AddComponentNodeResponseData;
    };
    'merchant.addKeyNode': {
        params: AddKeyNodeParams;
        responseData: AddKeyNodeResponseData;
    };
    'merchant.addEnvKeyNode': {
        params: AddEnvKeyNodeParams;
        responseData: AddEnvKeyNodeResponseData;
    };
    'merchant.addOriginData': {
        params: AddOriginDataParams;
        responseData: AddOriginDataResponseData;
    };
    'merchant.addDetailLog': {
        params: AddDetailLogParams;
        responseData: AddDetailLogResponseData;
    };
    'merchant.addErrorLog': {
        params: AddErrorLogParams;
        responseData: AddErrorLogResponseData;
    };
    'merchant.openTroubleShootingFloating': {
        params: OpenTroubleShootingFloatingParams;
        responseData: OpenTroubleShootingFloatingResponseData;
    };
    'merchant.openTroubleShootingPage': {
        params: OpenTroubleShootingPageParams;
        responseData: OpenTroubleShootingPageResponseData;
    };
    'merchant.clearPageLogContext': {
        params: ClearPageLogContextParams;
        responseData: ClearPageLogContextResponseData;
    };
    'merchant.clearEnv': {
        params: ClearEnvParams;
        responseData: ClearEnvResponseData;
    };
    'merchant.clearOriginData': {
        params: ClearOriginDataParams;
        responseData: ClearOriginDataResponseData;
    };
    'merchant.clearNodeList': {
        params: ClearNodeListParams;
        responseData: ClearNodeListResponseData;
    };
    'social.toAddWidget': {
        params: ToAddWidgetParams;
        responseData: ToAddWidgetResponseData;
    };
    'growth.getQuickLoginInfo': {
        params: GetQuickLoginInfoParams;
        responseData: GetQuickLoginInfoResponseData;
    };
    'growth.quickLogin': {
        params: QuickLoginParams;
        responseData: QuickLoginResponseData;
    };
    'house.localHouseConsultUpdateBridge': {
        params: LocalHouseConsultUpdateBridgeParams;
        responseData: LocalHouseConsultUpdateBridgeResponseData;
    };
    'poi.pauseResumeAllPlayerForReason': {
        params: PauseResumeAllPlayerForReasonParams;
        responseData: PauseResumeAllPlayerForReasonResponseData;
    };
    'poi.krnBizRequestFinal': {
        params: KrnBizRequestFinalParams;
        responseData: KrnBizRequestFinalResponseData;
    };
    'feed.getRoamCityInfo': {
        params: GetRoamCityInfoParams;
        responseData: GetRoamCityInfoResponseData;
    };
    'house.houseBuildingConsultStateChanged': {
        params: HouseBuildingConsultStateChangedParams;
        responseData: HouseBuildingConsultStateChangedResponseData;
    };
    'merchant.createOrderAndPay': {
        params: CreateOrderAndPayParams;
        responseData: CreateOrderAndPayResponseData;
    };
    'poi.llhcRNViewReady': {
        params: LlhcRNViewReadyParams;
        responseData: LlhcRNViewReadyResponseData;
    };
    'system.openSettingNotification': {
        params: OpenSettingNotificationParams;
        responseData: OpenSettingNotificationResponseData;
    };
    'tool.moveSourceToAppGroup': {
        params: MoveSourceToAppGroupParams;
        responseData: MoveSourceToAppGroupResponseData;
    };
    'recruit.getRecruitInfo': {
        params: GetRecruitInfoParams;
        responseData: GetRecruitInfoResponseData;
    };
    'social.getSocialDynamicStringLangs': {
        params: GetSocialDynamicStringLangsParams;
        responseData: GetSocialDynamicStringLangsResponseData;
    };
    'social.openRelationSlidePlay': {
        params: OpenRelationSlidePlayParams;
        responseData: OpenRelationSlidePlayResponseData;
    };
    'post.getCurrentDraftFileSize': {
        params: GetCurrentDraftFileSizeParams;
        responseData: GetCurrentDraftFileSizeResponseData;
    };
    'post.processCurrentDraftFile': {
        params: ProcessCurrentDraftFileParams;
        responseData: ProcessCurrentDraftFileResponseData;
    };
    'post.cancelCurrentDraftFileProcess': {
        params: CancelCurrentDraftFileProcessParams;
        responseData: CancelCurrentDraftFileProcessResponseData;
    };
    'post.uploadCurrentDraftFile': {
        params: UploadCurrentDraftFileParams;
        responseData: UploadCurrentDraftFileResponseData;
    };
    'live.getR4oRainStatus': {
        params: GetR4oRainStatusParams;
        responseData: GetR4oRainStatusResponseData;
    };
    'merchant.addTroubleShootingLog': {
        params: AddTroubleShootingLogParams;
        responseData: AddTroubleShootingLogResponseData;
    };
    'merchant.addWarnLog': {
        params: AddWarnLogParams;
        responseData: AddWarnLogResponseData;
    };
    'poi.recommendedPoisWithinCurrentCityOrCountry': {
        params: RecommendedPoisWithinCurrentCityOrCountryParams;
        responseData: RecommendedPoisWithinCurrentCityOrCountryResponseData;
    };
    'poi.keywordsPoisWithinCurrentCityOrCountry': {
        params: KeywordsPoisWithinCurrentCityOrCountryParams;
        responseData: KeywordsPoisWithinCurrentCityOrCountryResponseData;
    };
    'advertise.commercialLog': {
        params: CommercialLogParams;
        responseData: CommercialLogResponseData;
    };
    'pay.openTuanyouWebView': {
        params: OpenTuanyouWebViewParams;
        responseData: OpenTuanyouWebViewResponseData;
    };
    'social.getPymkRecoTextSync': {
        params: GetPymkRecoTextSyncParams;
        responseData: GetPymkRecoTextSyncResponseData;
    };
    'minigame.notifyDeleteZapisItem': {
        params: MinigameNotifyDeleteZapisItemParams;
        responseData: MinigameNotifyDeleteZapisItemResponseData;
    };
    'ksmg.notifyDeleteZapisItem': {
        params: KsmgNotifyDeleteZapisItemParams;
        responseData: KsmgNotifyDeleteZapisItemResponseData;
    };
    'system.mallDarkMode': {
        params: SystemMallDarkModeParams;
        responseData: SystemMallDarkModeResponseData;
    };
    'merchant.mallDarkMode': {
        params: MerchantMallDarkModeParams;
        responseData: MerchantMallDarkModeResponseData;
    };
    'poi.pauseResumeTheFeed': {
        params: PauseResumeTheFeedParams;
        responseData: PauseResumeTheFeedResponseData;
    };
    'plcCodContainer.fetchContainerContext': {
        params: FetchContainerContextParams;
        responseData: FetchContainerContextResponseData;
    };
    'social.imConnectState': {
        params: ImConnectStateParams;
        responseData: ImConnectStateResponseData;
    };
    'social.muteGroupMember': {
        params: MuteGroupMemberParams;
        responseData: MuteGroupMemberResponseData;
    };
    'social.deleteConversation': {
        params: DeleteConversationParams;
        responseData: DeleteConversationResponseData;
    };
    'social.getUserOnlineStatus': {
        params: GetUserOnlineStatusParams;
        responseData: GetUserOnlineStatusResponseData;
    };
    'social.getGroupOnlineStatus': {
        params: GetGroupOnlineStatusParams;
        responseData: GetGroupOnlineStatusResponseData;
    };
    'gameInteractive.installPlugin': {
        params: InstallPluginParams;
        responseData: InstallPluginResponseData;
    };
    'social.getGroupInfoList': {
        params: GetGroupInfoListParams;
        responseData: GetGroupInfoListResponseData;
    };
    'social.getGroupMemberInfo': {
        params: GetGroupMemberInfoParams;
        responseData: GetGroupMemberInfoResponseData;
    };
    'social.fetchEmotionReactionDetails': {
        params: FetchEmotionReactionDetailsParams;
        responseData: FetchEmotionReactionDetailsResponseData;
    };
    'social.removeEmotionReaction': {
        params: RemoveEmotionReactionParams;
        responseData: RemoveEmotionReactionResponseData;
    };
    'system.setEditVisibleDialogSubtitle': {
        params: SystemSetEditVisibleDialogSubtitleParams;
        responseData: SystemSetEditVisibleDialogSubtitleResponseData;
    };
    'post.setEditVisibleDialogSubtitle': {
        params: PostSetEditVisibleDialogSubtitleParams;
        responseData: PostSetEditVisibleDialogSubtitleResponseData;
    };
    'tool.getLocalStorage': {
        params: GetLocalStorageParams;
        responseData: GetLocalStorageResponseData;
    };
    'tool.setLocalStorage': {
        params: SetLocalStorageParams;
        responseData: SetLocalStorageResponseData;
    };
    'tool.clearLocalStorage': {
        params: ClearLocalStorageParams;
        responseData: ClearLocalStorageResponseData;
    };
    'tool.removeLocalStorage': {
        params: RemoveLocalStorageParams;
        responseData: RemoveLocalStorageResponseData;
    };
    'poi.printLocalLifeLog': {
        params: PrintLocalLifeLogParams;
        responseData: PrintLocalLifeLogResponseData;
    };
    'plcCodContainer.updateScrollGestureStatus': {
        params: UpdateScrollGestureStatusParams;
        responseData: UpdateScrollGestureStatusResponseData;
    };
    'plcCodContainer.keepPlayingWhenContainerPause': {
        params: KeepPlayingWhenContainerPauseParams;
        responseData: KeepPlayingWhenContainerPauseResponseData;
    };
    'advertise.tkPlayerReportVse': {
        params: TkPlayerReportVseParams;
        responseData: TkPlayerReportVseResponseData;
    };
    'tool.getStartUpData': {
        params: GetStartUpDataParams;
        responseData: GetStartUpDataResponseData;
    };
    'post.getCurrentTaskId': {
        params: GetCurrentTaskIdParams;
        responseData: GetCurrentTaskIdResponseData;
    };
    'tool.getCurrentStidSnapInfo': {
        params: GetCurrentStidSnapInfoParams;
        responseData: GetCurrentStidSnapInfoResponseData;
    };
    'advertise.saveImageWithUrl': {
        params: SaveImageWithUrlParams;
        responseData: SaveImageWithUrlResponseData;
    };
    'feed.previewImage': {
        params: PreviewImageParams;
        responseData: PreviewImageResponseData;
    };
    'social.batchGetRemarkNames': {
        params: BatchGetRemarkNamesParams;
        responseData: BatchGetRemarkNamesResponseData;
    };
    'poi.reportLog2JinJing': {
        params: ReportLog2JinJingParams;
        responseData: ReportLog2JinJingResponseData;
    };
    'social.getNoticeRecoTextSync': {
        params: GetNoticeRecoTextSyncParams;
        responseData: GetNoticeRecoTextSyncResponseData;
    };
    'social.getRemarkNameSync': {
        params: GetRemarkNameSyncParams;
        responseData: GetRemarkNameSyncResponseData;
    };
    'social.updateCurrentUser': {
        params: UpdateCurrentUserParams;
        responseData: UpdateCurrentUserResponseData;
    };
    'social.launchLiveAvatarPage': {
        params: LaunchLiveAvatarPageParams;
        responseData: LaunchLiveAvatarPageResponseData;
    };
    'social.enterSlidePage': {
        params: EnterSlidePageParams;
        responseData: EnterSlidePageResponseData;
    };
    'social.jumpToPostStateEditPage': {
        params: JumpToPostStateEditPageParams;
        responseData: JumpToPostStateEditPageResponseData;
    };
    'post.postChallengeRelay': {
        params: PostChallengeRelayParams;
        responseData: PostChallengeRelayResponseData;
    };
    'ui.exitPageWithInfo': {
        params: ExitPageWithInfoParams;
        responseData: ExitPageWithInfoResponseData;
    };
    'growth.loadSimSplits': {
        params: LoadSimSplitsParams;
        responseData: LoadSimSplitsResponseData;
    };
    'growth.simAccount': {
        params: SimAccountParams;
        responseData: SimAccountResponseData;
    };
    'feed.clickSearch': {
        params: ClickSearchParams;
        responseData: ClickSearchResponseData;
    };
    'growth.simUserInfo': {
        params: SimUserInfoParams;
        responseData: SimUserInfoResponseData;
    };
    'growth.simOriginId': {
        params: SimOriginIdParams;
        responseData: SimOriginIdResponseData;
    };
    'growth.simId': {
        params: SimIdParams;
        responseData: SimIdResponseData;
    };
    'growth.simRestart': {
        params: SimRestartParams;
        responseData: SimRestartResponseData;
    };
    'poi.closeLiveBottomBubble': {
        params: CloseLiveBottomBubbleParams;
        responseData: CloseLiveBottomBubbleResponseData;
    };
    'social.getMyProfileData': {
        params: GetMyProfileDataParams;
        responseData: GetMyProfileDataResponseData;
    };
    'social.getUserProfileSnapshot': {
        params: GetUserProfileSnapshotParams;
        responseData: GetUserProfileSnapshotResponseData;
    };
    'growth.simSetId': {
        params: SimSetIdParams;
        responseData: SimSetIdResponseData;
    };
    'tool.getKSwitchInfo': {
        params: GetKSwitchInfoParams;
        responseData: GetKSwitchInfoResponseData;
    };
    'social.showBottomSkipToast': {
        params: ShowBottomSkipToastParams;
        responseData: ShowBottomSkipToastResponseData;
    };
    'system.instrumentationCallback': {
        params: InstrumentationCallbackParams;
        responseData: InstrumentationCallbackResponseData;
    };
    'social.launchUserProfileSnapshot': {
        params: LaunchUserProfileSnapshotParams;
        responseData: LaunchUserProfileSnapshotResponseData;
    };
    'poi.logWithAction': {
        params: LogWithActionParams;
        responseData: LogWithActionResponseData;
    };
    'im.showHalfChatBottomEntry': {
        params: ImShowHalfChatBottomEntryParams;
        responseData: ImShowHalfChatBottomEntryResponseData;
    };
    'social.showHalfChatBottomEntry': {
        params: SocialShowHalfChatBottomEntryParams;
        responseData: SocialShowHalfChatBottomEntryResponseData;
    };
    'im.sendIMEmotionMessage': {
        params: ImSendIMEmotionMessageParams;
        responseData: ImSendIMEmotionMessageResponseData;
    };
    'social.sendIMEmotionMessage': {
        params: SocialSendIMEmotionMessageParams;
        responseData: SocialSendIMEmotionMessageResponseData;
    };
    'poi.loadWebview': {
        params: LoadWebviewParams;
        responseData: LoadWebviewResponseData;
    };
    'post.selectKvqItem': {
        params: SelectKvqItemParams;
        responseData: SelectKvqItemResponseData;
    };
    'poi.dispatchGlobalEventLocalLife': {
        params: DispatchGlobalEventLocalLifeParams;
        responseData: DispatchGlobalEventLocalLifeResponseData;
    };
    'poi.reportKwaiUrlLog': {
        params: ReportKwaiUrlLogParams;
        responseData: ReportKwaiUrlLogResponseData;
    };
    'tool.navigateBack': {
        params: NavigateBackParams;
        responseData: NavigateBackResponseData;
    };
    'tool.markTopPageAsTarget': {
        params: MarkTopPageAsTargetParams;
        responseData: MarkTopPageAsTargetResponseData;
    };
    'tool.unMarkTopPageAsTarget': {
        params: UnMarkTopPageAsTargetParams;
        responseData: UnMarkTopPageAsTargetResponseData;
    };
    'tool.getCurrentStidDataInfo': {
        params: GetCurrentStidDataInfoParams;
        responseData: GetCurrentStidDataInfoResponseData;
    };
    'tool.decodeFeedLogCtx': {
        params: DecodeFeedLogCtxParams;
        responseData: DecodeFeedLogCtxResponseData;
    };
    'tool.feedLogCtxToJsonString': {
        params: FeedLogCtxToJsonStringParams;
        responseData: FeedLogCtxToJsonStringResponseData;
    };
    'game.blindBoxWebViewRegisterEventListenerSuccess': {
        params: BlindBoxWebViewRegisterEventListenerSuccessParams;
        responseData: BlindBoxWebViewRegisterEventListenerSuccessResponseData;
    };
    'social.getImageCache': {
        params: GetImageCacheParams;
        responseData: GetImageCacheResponseData;
    };
    'social.doFaceDelect': {
        params: DoFaceDelectParams;
        responseData: DoFaceDelectResponseData;
    };
    'social.doFaceDetect': {
        params: DoFaceDetectParams;
        responseData: DoFaceDetectResponseData;
    };
    'feed.grayVenomBillboard': {
        params: GrayVenomBillboardParams;
        responseData: GrayVenomBillboardResponseData;
    };
    'system.unGrayVenomBillboard': {
        params: SystemUnGrayVenomBillboardParams;
        responseData: SystemUnGrayVenomBillboardResponseData;
    };
    'feed.unGrayVenomBillboard': {
        params: FeedUnGrayVenomBillboardParams;
        responseData: FeedUnGrayVenomBillboardResponseData;
    };
    'merchant.publicDomainComponentRefreshSceneControl': {
        params: PublicDomainComponentRefreshSceneControlParams;
        responseData: PublicDomainComponentRefreshSceneControlResponseData;
    };
    'poi.enterDetailLiveRoom': {
        params: EnterDetailLiveRoomParams;
        responseData: EnterDetailLiveRoomResponseData;
    };
    'social.needSupplementMessages': {
        params: NeedSupplementMessagesParams;
        responseData: NeedSupplementMessagesResponseData;
    };
    'social.supplementMessages': {
        params: SupplementMessagesParams;
        responseData: SupplementMessagesResponseData;
    };
    'social.searchMessage': {
        params: SearchMessageParams;
        responseData: SearchMessageResponseData;
    };
    'social.searchMessageInChat': {
        params: SearchMessageInChatParams;
        responseData: SearchMessageInChatResponseData;
    };
    'poi.livePreviewBottomCardEvent': {
        params: LivePreviewBottomCardEventParams;
        responseData: LivePreviewBottomCardEventResponseData;
    };
    'post.useMusic': {
        params: UseMusicParams;
        responseData: UseMusicResponseData;
    };
    'post.goToCutMusicPage': {
        params: GoToCutMusicPageParams;
        responseData: GoToCutMusicPageResponseData;
    };
    'post.getMusicList': {
        params: GetMusicListParams;
        responseData: GetMusicListResponseData;
    };
    'post.extractLocalMusic': {
        params: ExtractLocalMusicParams;
        responseData: ExtractLocalMusicResponseData;
    };
    'post.removeMusic': {
        params: RemoveMusicParams;
        responseData: RemoveMusicResponseData;
    };
    'post.removeCurrentUsingMusic': {
        params: RemoveCurrentUsingMusicParams;
        responseData: RemoveCurrentUsingMusicResponseData;
    };
    'system.openMusicLib': {
        params: OpenMusicLibParams;
        responseData: OpenMusicLibResponseData;
    };
    'post.getCurrentUsingMusic': {
        params: GetCurrentUsingMusicParams;
        responseData: GetCurrentUsingMusicResponseData;
    };
    'social.exitToRootPage': {
        params: ExitToRootPageParams;
        responseData: ExitToRootPageResponseData;
    };
    'system.adFlashArrive': {
        params: AdFlashArriveParams;
        responseData: AdFlashArriveResponseData;
    };
    'social.greetToFriend': {
        params: GreetToFriendParams;
        responseData: GreetToFriendResponseData;
    };
    'game.showKeyboard': {
        params: ShowKeyboardParams;
        responseData: ShowKeyboardResponseData;
    };
    'social.showIMAddBlackListDialog': {
        params: ShowIMAddBlackListDialogParams;
        responseData: ShowIMAddBlackListDialogResponseData;
    };
    'growth.playPipAndToHome': {
        params: PlayPipAndToHomeParams;
        responseData: PlayPipAndToHomeResponseData;
    };
    'advertise.openDeepLink2': {
        params: OpenDeepLink2Params;
        responseData: OpenDeepLink2ResponseData;
    };
    'growth.reloadWidget': {
        params: ReloadWidgetParams;
        responseData: ReloadWidgetResponseData;
    };
    'social.getUserBanInfo': {
        params: GetUserBanInfoParams;
        responseData: GetUserBanInfoResponseData;
    };
    'social.getIMUserBanInfo': {
        params: GetIMUserBanInfoParams;
        responseData: GetIMUserBanInfoResponseData;
    };
    'social.getIMPhotoVisibility': {
        params: GetIMPhotoVisibilityParams;
        responseData: GetIMPhotoVisibilityResponseData;
    };
    'post.fetchMusicSearchHistory': {
        params: FetchMusicSearchHistoryParams;
        responseData: FetchMusicSearchHistoryResponseData;
    };
    'advertise.guessLikeCardClick': {
        params: GuessLikeCardClickParams;
        responseData: GuessLikeCardClickResponseData;
    };
    'tool.getInterStidInfo': {
        params: GetInterStidInfoParams;
        responseData: GetInterStidInfoResponseData;
    };
    'tool.getSimplifiedInterStidInfo': {
        params: GetSimplifiedInterStidInfoParams;
        responseData: GetSimplifiedInterStidInfoResponseData;
    };
    'tool.getSimplifiedCommonStidInfo': {
        params: GetSimplifiedCommonStidInfoParams;
        responseData: GetSimplifiedCommonStidInfoResponseData;
    };
    'social.momentLocalCacheWithRemoteMomentsBridge': {
        params: MomentLocalCacheWithRemoteMomentsBridgeParams;
        responseData: MomentLocalCacheWithRemoteMomentsBridgeResponseData;
    };
    'social.getSocialMultiStringLangsSync': {
        params: GetSocialMultiStringLangsSyncParams;
        responseData: GetSocialMultiStringLangsSyncResponseData;
    };
    'social.shareMyProfile': {
        params: ShareMyProfileParams;
        responseData: ShareMyProfileResponseData;
    };
    'social.requestContactPermission': {
        params: RequestContactPermissionParams;
        responseData: RequestContactPermissionResponseData;
    };
    'social.getContactFriendsData': {
        params: GetContactFriendsDataParams;
        responseData: GetContactFriendsDataResponseData;
    };
    'social.getContactAccessStatus': {
        params: GetContactAccessStatusParams;
        responseData: GetContactAccessStatusResponseData;
    };
    'tool.getSimplifiedStidInfo': {
        params: GetSimplifiedStidInfoParams;
        responseData: GetSimplifiedStidInfoResponseData;
    };
    'tool.getClippedStidInfo': {
        params: GetClippedStidInfoParams;
        responseData: GetClippedStidInfoResponseData;
    };
    'social.showRelationPrivacySettingDialog': {
        params: ShowRelationPrivacySettingDialogParams;
        responseData: ShowRelationPrivacySettingDialogResponseData;
    };
    'social.syncRelationPrivacySettings': {
        params: SyncRelationPrivacySettingsParams;
        responseData: SyncRelationPrivacySettingsResponseData;
    };
    'system.getSimOperatorInfo': {
        params: GetSimOperatorInfoParams;
        responseData: GetSimOperatorInfoResponseData;
    };
    'social.publishGuideMomentBridge': {
        params: PublishGuideMomentBridgeParams;
        responseData: PublishGuideMomentBridgeResponseData;
    };
    'merchant.getRealDeviceHeight': {
        params: GetRealDeviceHeightParams;
        responseData: GetRealDeviceHeightResponseData;
    };
    'social.showUserProfilePreviewPage': {
        params: ShowUserProfilePreviewPageParams;
        responseData: ShowUserProfilePreviewPageResponseData;
    };
    'social.showPrivacyUserAutoFollowBackCard': {
        params: ShowPrivacyUserAutoFollowBackCardParams;
        responseData: ShowPrivacyUserAutoFollowBackCardResponseData;
    };
    'social.showPrivacyUserAutoFollowBackDialog': {
        params: ShowPrivacyUserAutoFollowBackDialogParams;
        responseData: ShowPrivacyUserAutoFollowBackDialogResponseData;
    };
}

export interface NativePageFinishedEvent extends Record<string, never> {}

export interface NativeVisibleEvent {
    visible: boolean;
}

export interface NativeBackgroundEvent extends Record<string, never> {}

export interface NativeForegroundEvent extends Record<string, never> {}

export interface NativeLeaveEvent extends Record<string, never> {}

export interface NativeReentryEvent extends Record<string, never> {}

export interface NativeLoadPageEvent extends Record<string, never> {}

export type NativeNetworkChangedEvent = '0' | '1' | '2';

export interface NativeWebViewDisplayModeChange extends Record<string, never> {}

export interface NativeDarkModeChangeEvent {
    darkMode: boolean;
}

export interface NativeShareDialogEvent {
    eventId:
        | 'panel_show'
        | 'panel_cancel'
        | 'panel_dismiss'
        | 'user_select'
        | 'js_custom_event_response'
        | 'banner_show'
        | 'banner_clicked'
        | 'header_show'
        | 'header_clicked';
    kpn: string;
    actionKey?: string;
    actionUrl?: string;
    extraInfo?: any;
    share?: any;
}

export interface NativeShakeEvent extends Record<string, never> {}

export interface UserCaptureScreenEvent extends Record<string, never> {}

export interface NativeAudioRecorderStartEvent extends Record<string, never> {}

export interface PauseEvent {
    type: 'addPause' | 'pagePause';
}

export interface ResumeEvent {
    type: 'appResume' | 'pageResume';
}

export interface PhysicalBackButtonEvent {
    behavior: string;
}

export interface NativeAudioRecorderStopEvent extends Record<string, never> {}

export interface NativeAudioRecorderErrorEvent extends Record<string, never> {}

export interface AccelerometerChangeEvent {
    x: number;
    y: number;
    z: number;
}

export interface NativeWillLeaveEvent extends Record<string, never> {}

export interface BatteryStatusChangedEvent {
    isLowPowerMode: boolean;
}

export interface TopBarButtonClickEvent extends Record<string, never> {}

export interface AuditedNativeEvents {
    batteryStatusChanged: BatteryStatusChangedEvent;
    native_pageFinished: NativePageFinishedEvent;
    native_visible: NativeVisibleEvent;
    native_background: NativeBackgroundEvent;
    native_foreground: NativeForegroundEvent;
    native_will_leave: NativeWillLeaveEvent;
    native_leave: NativeLeaveEvent;
    native_reentry: NativeReentryEvent;
    native_loadPage: NativeLoadPageEvent;
    native_networkChanged: NativeNetworkChangedEvent;
    native_web_view_display_mode_changed: NativeWebViewDisplayModeChange;
    native_darkModeChange: NativeDarkModeChangeEvent;
    native_share_dialog_event: NativeShareDialogEvent;
    native_shake: NativeShakeEvent;
    user_capture_screen: UserCaptureScreenEvent;
    pause: PauseEvent;
    resume: ResumeEvent;
    'physical-back-button': PhysicalBackButtonEvent;
    native_audio_recorder_start: NativeAudioRecorderStartEvent;
    native_audio_recorder_stop: NativeAudioRecorderStopEvent;
    native_audio_recorder_error: NativeAudioRecorderErrorEvent;
    'accelerometer-change': AccelerometerChangeEvent;
    'top-bar-button-click': TopBarButtonClickEvent;
}

export interface CustomizedNativeBridges {}

export interface CustomizedNativeEvents {}

export interface NativeBridges
    extends Omit<AuditedNativeBridges, keyof CustomizedNativeBridges>,
        CustomizedNativeBridges {}

export interface NativeEvents extends Omit<AuditedNativeEvents, keyof CustomizedNativeEvents>, CustomizedNativeEvents {}
