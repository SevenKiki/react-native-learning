{"version":3,"sources":["parse.tsx"],"names":["astToReact","value","index","Tag","props","children","map","parse","source","middleware","length","currentElement","state","metadata","root","stack","error","message","i","line","column","snippet","Error","validNameCharacters","test","neutral","text","char","push","openingTag","start","slice","comment","end","cdata","closingTag","tag","getName","element","parent","tags","missingTag","getAttributes","style","styles","selfClosing","indexOf","pop","name","whitespace","allowSpaces","getAttributeValue","isNaN","trim","quotemarks","getQuotedAttributeValue","getUnquotedAttributeValue","quotemark","escaped","xml","ast","jsx"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { AST, Middleware, JsxAST, XmlAST, locate, validNameCharacters, Styles, tags, getStyle, missingTag, camelCase, whitespace, quotemarks } from './common';\n\nexport function astToReact(\n  value: AST | string,\n  index: number,\n): JSX.Element | string {\n  if (typeof value === 'object') {\n    const { Tag, props, children } = value;\n    return (\n      <Tag key={index} {...props}>\n        {(children as (AST | string)[]).map(astToReact)}\n      </Tag>\n    );\n  }\n  return value;\n}\n\nexport function parse(source: string, middleware?: Middleware): JsxAST | null {\n  const length = source.length;\n  let currentElement: XmlAST | null = null;\n  let state = metadata;\n  let children = null;\n  let root: XmlAST | undefined;\n  let stack: XmlAST[] = [];\n\n  function error(message: string) {\n    const { line, column, snippet } = locate(source, i);\n    throw new Error(\n      `${message} (${line}:${column}). If this is valid SVG, it's probably a bug. Please raise an issue\\n\\n${snippet}`,\n    );\n  }\n\n  function metadata() {\n    while (\n      i + 1 < length &&\n      (source[i] !== '<' || !validNameCharacters.test(source[i + 1]))\n    ) {\n      i++;\n    }\n\n    return neutral();\n  }\n\n  function neutral() {\n    let text = '';\n    let char;\n    while (i < length && (char = source[i]) !== '<') {\n      text += char;\n      i += 1;\n    }\n\n    if (/\\S/.test(text)) {\n      children.push(text);\n    }\n\n    if (source[i] === '<') {\n      return openingTag;\n    }\n\n    return neutral;\n  }\n\n  function openingTag() {\n    const char = source[i];\n\n    if (char === '?') {\n      return neutral;\n    } // <?xml...\n\n    if (char === '!') {\n      const start = i + 1;\n      if (source.slice(start, i + 3) === '--') {\n        return comment;\n      }\n      const end = i + 8;\n      if (source.slice(start, end) === '[CDATA[') {\n        return cdata;\n      }\n      if (/doctype/i.test(source.slice(start, end))) {\n        return neutral;\n      }\n    }\n\n    if (char === '/') {\n      return closingTag;\n    }\n\n    const tag = getName();\n    const props: { [prop: string]: Styles | string | undefined } = {};\n    const element: XmlAST = {\n      tag,\n      props,\n      children: [],\n      parent: currentElement,\n      Tag: tags[tag] || missingTag,\n    };\n\n    if (currentElement) {\n      children.push(element);\n    } else {\n      root = element;\n    }\n\n    getAttributes(props);\n\n    const { style } = props;\n    if (typeof style === 'string') {\n      element.styles = style;\n      props.style = getStyle(style);\n    }\n\n    let selfClosing = false;\n\n    if (source[i] === '/') {\n      i += 1;\n      selfClosing = true;\n    }\n\n    if (source[i] !== '>') {\n      error('Expected >');\n    }\n\n    if (!selfClosing) {\n      currentElement = element;\n      ({ children } = element);\n      stack.push(element);\n    }\n\n    return neutral;\n  }\n\n  function comment() {\n    const index = source.indexOf('-->', i);\n    if (!~index) {\n      error('expected -->');\n    }\n\n    i = index + 2;\n    return neutral;\n  }\n\n  function cdata() {\n    const index = source.indexOf(']]>', i);\n    if (!~index) {\n      error('expected ]]>');\n    }\n\n    children.push(source.slice(i + 7, index));\n\n    i = index + 2;\n    return neutral;\n  }\n\n  function closingTag() {\n    const tag = getName();\n\n    if (!tag) {\n      error('Expected tag name');\n    }\n\n    if (currentElement && tag !== currentElement.tag) {\n      error(\n        `Expected closing tag </${tag}> to match opening tag <${currentElement.tag}>`,\n      );\n    }\n\n    if (source[i] !== '>') {\n      error('Expected >');\n    }\n\n    stack.pop();\n    currentElement = stack[stack.length - 1];\n    if (currentElement) {\n      ({ children } = currentElement);\n    }\n\n    return neutral;\n  }\n\n  function getName() {\n    let name = '';\n    let char;\n    while (i < length && validNameCharacters.test((char = source[i]))) {\n      name += char;\n      i += 1;\n    }\n\n    return name;\n  }\n\n  function getAttributes(props: {\n    [x: string]: Styles | string | number | boolean | undefined;\n    style?: string | Styles | undefined;\n  }) {\n    while (i < length) {\n      if (!whitespace.test(source[i])) {\n        return;\n      }\n      allowSpaces();\n\n      const name = getName();\n      if (!name) {\n        return;\n      }\n\n      let value: boolean | number | string = true;\n\n      allowSpaces();\n      if (source[i] === '=') {\n        i += 1;\n        allowSpaces();\n\n        value = getAttributeValue();\n        if (!isNaN(+value) && value.trim() !== '') {\n          value = +value;\n        }\n      }\n\n      props[camelCase(name)] = value;\n    }\n  }\n\n  function getAttributeValue(): string {\n    return quotemarks.test(source[i])\n      ? getQuotedAttributeValue()\n      : getUnquotedAttributeValue();\n  }\n\n  function getUnquotedAttributeValue() {\n    let value = '';\n    do {\n      const char = source[i];\n      if (char === ' ' || char === '>' || char === '/') {\n        return value;\n      }\n\n      value += char;\n      i += 1;\n    } while (i < length);\n\n    return value;\n  }\n\n  function getQuotedAttributeValue() {\n    const quotemark = source[i++];\n\n    let value = '';\n    let escaped = false;\n\n    while (i < length) {\n      const char = source[i++];\n      if (char === quotemark && !escaped) {\n        return value;\n      }\n\n      if (char === '\\\\' && !escaped) {\n        escaped = true;\n      }\n\n      value += escaped ? `\\\\${char}` : char;\n      escaped = false;\n    }\n\n    return value;\n  }\n\n  function allowSpaces() {\n    while (i < length && whitespace.test(source[i])) {\n      i += 1;\n    }\n  }\n\n  let i = 0;\n  while (i < length) {\n    if (!state) {\n      error('Unexpected character');\n    }\n    state = state();\n    i += 1;\n  }\n\n  if (state !== neutral) {\n    error('Unexpected end of input');\n  }\n\n  if (root) {\n    const xml: XmlAST = (middleware ? middleware(root) : root) || root;\n    const ast: (JSX.Element | string)[] = xml.children.map(astToReact);\n    const jsx: JsxAST = xml as JsxAST;\n    jsx.children = ast;\n    return jsx;\n  }\n\n  return null;\n}\n\nexport default parse;"]}