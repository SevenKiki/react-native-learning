{"version":3,"sources":["NativeComponents.tsx"],"names":["SVGNameMap","Map","getRNC","name","has","get","set","RNSVGSvg","RNSVGCircle","RNSVGClipPath","RNSVGDefs","RNSVGEllipse","RNSVGForeignObject","RNSVGGroup","RNSVGImage","RNSVGLine","RNSVGLinearGradient","RNSVGMarker","RNSVGMask","RNSVGPath","RNSVGPattern","RNSVGRadialGradient","RNSVGRect","RNSVGSymbol","RNSVGText","RNSVGTextPath","RNSVGTSpan","RNSVGUse"],"mappings":"4eAAA,yCAEA,GAAMA,CAAAA,UAA+C,CAAG,GAAIC,CAAAA,GAAJ,EAAxD,CACA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,IAAD,CAA0C,CACrD,GAAGH,UAAU,CAACI,GAAX,CAAeD,IAAf,CAAH,CAAyB,CACrB,MAAOH,CAAAA,UAAU,CAACK,GAAX,CAAeF,IAAf,CAAP,CACH,CAFD,IAEO,CACHH,UAAU,CAACM,GAAX,CAAeH,IAAf,CAAqB,wCAAIA,IAAJ,CAArB,EACA,MAAOH,CAAAA,UAAU,CAACK,GAAX,CAAeF,IAAf,CAAP,CACH,CACJ,CAPD,CASO,GAAMI,CAAAA,QAAQ,CAAGL,MAAM,CAAC,cAAD,CAAvB,C,0BACA,GAAMM,CAAAA,WAAW,CAAGN,MAAM,CAAC,aAAD,CAA1B,C,gCACA,GAAMO,CAAAA,aAAa,CAAGP,MAAM,CAAC,eAAD,CAA5B,C,oCACA,GAAMQ,CAAAA,SAAS,CAAGR,MAAM,CAAC,WAAD,CAAxB,C,4BACA,GAAMS,CAAAA,YAAY,CAAGT,MAAM,CAAC,cAAD,CAA3B,C,kCACA,GAAMU,CAAAA,kBAAkB,CAAGV,MAAM,CAAC,oBAAD,CAAjC,C,8CACA,GAAMW,CAAAA,UAAU,CAAGX,MAAM,CAAC,YAAD,CAAzB,C,8BACA,GAAMY,CAAAA,UAAU,CAAGZ,MAAM,CAAC,YAAD,CAAzB,C,8BACA,GAAMa,CAAAA,SAAS,CAAGb,MAAM,CAAC,WAAD,CAAxB,C,4BACA,GAAMc,CAAAA,mBAAmB,CAAGd,MAAM,CAAC,qBAAD,CAAlC,C,gDACA,GAAMe,CAAAA,WAAW,CAAGf,MAAM,CAAC,aAAD,CAA1B,C,gCACA,GAAMgB,CAAAA,SAAS,CAAGhB,MAAM,CAAC,WAAD,CAAxB,C,4BACA,GAAMiB,CAAAA,SAAS,CAAGjB,MAAM,CAAC,WAAD,CAAxB,C,4BACA,GAAMkB,CAAAA,YAAY,CAAGlB,MAAM,CAAC,cAAD,CAA3B,C,kCACA,GAAMmB,CAAAA,mBAAmB,CAAGnB,MAAM,CAAC,qBAAD,CAAlC,C,gDACA,GAAMoB,CAAAA,SAAS,CAAGpB,MAAM,CAAC,WAAD,CAAxB,C,4BACA,GAAMqB,CAAAA,WAAW,CAAGrB,MAAM,CAAC,aAAD,CAA1B,C,gCACA,GAAMsB,CAAAA,SAAS,CAAGtB,MAAM,CAAC,WAAD,CAAxB,C,4BACA,GAAMuB,CAAAA,aAAa,CAAGvB,MAAM,CAAC,eAAD,CAA5B,C,oCACA,GAAMwB,CAAAA,UAAU,CAAGxB,MAAM,CAAC,YAAD,CAAzB,C,8BACA,GAAMyB,CAAAA,QAAQ,CAAGzB,MAAM,CAAC,UAAD,CAAvB,C","sourcesContent":["import { requireNativeComponent as rnc, HostComponent } from 'react-native';\n\nconst SVGNameMap: Map<string, HostComponent<unknown>> = new Map<string, HostComponent<unknown>>();\nconst getRNC = (name: string): HostComponent<unknown> => {\n    if(SVGNameMap.has(name)) {\n        return SVGNameMap.get(name)!;\n    } else {\n        SVGNameMap.set(name, rnc(name));\n        return SVGNameMap.get(name)!;\n    }\n}\n\nexport const RNSVGSvg = getRNC('RNSVGSvgView');\nexport const RNSVGCircle = getRNC('RNSVGCircle');\nexport const RNSVGClipPath = getRNC('RNSVGClipPath');\nexport const RNSVGDefs = getRNC('RNSVGDefs');\nexport const RNSVGEllipse = getRNC('RNSVGEllipse');\nexport const RNSVGForeignObject = getRNC('RNSVGForeignObject');\nexport const RNSVGGroup = getRNC('RNSVGGroup');\nexport const RNSVGImage = getRNC('RNSVGImage');\nexport const RNSVGLine = getRNC('RNSVGLine');\nexport const RNSVGLinearGradient = getRNC('RNSVGLinearGradient');\nexport const RNSVGMarker = getRNC('RNSVGMarker');\nexport const RNSVGMask = getRNC('RNSVGMask');\nexport const RNSVGPath = getRNC('RNSVGPath');\nexport const RNSVGPattern = getRNC('RNSVGPattern');\nexport const RNSVGRadialGradient = getRNC('RNSVGRadialGradient');\nexport const RNSVGRect = getRNC('RNSVGRect');\nexport const RNSVGSymbol = getRNC('RNSVGSymbol');\nexport const RNSVGText = getRNC('RNSVGText');\nexport const RNSVGTextPath = getRNC('RNSVGTextPath');\nexport const RNSVGTSpan = getRNC('RNSVGTSpan');\nexport const RNSVGUse = getRNC('RNSVGUse');\n"]}