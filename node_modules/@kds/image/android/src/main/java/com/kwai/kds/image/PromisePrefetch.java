package com.kwai.kds.image;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;

import com.facebook.react.bridge.Promise;
import com.facebook.react.bridge.WritableMap;

import org.jetbrains.annotations.NotNull;

public class PromisePrefetch implements Promise {
  private int noOfSuccessUri = 0;
  private int noOfFailedUri = 0;
  private int noOfTotalUri;
  private Promise mPromise;

  public PromisePrefetch(final int noOfUri, final Promise promise) {
    noOfTotalUri = noOfUri;
    mPromise = promise;
  }

  private void handlePromise() {
    if (noOfFailedUri == 0) {
      mPromise.resolve("true");
    } else {
      mPromise.reject("image prefetch failed, please check the image uri");
    }
  }

  @Override
  public void resolve(@Nullable @org.jetbrains.annotations.Nullable Object value) {
    synchronized(this) {
      noOfSuccessUri++;
      if (noOfSuccessUri + noOfFailedUri == noOfTotalUri) {
        handlePromise();
      }
    }
  }

  @Override
  public void reject(String code, String message) {
    reject(code, message);
  }

  @Override
  public void reject(String code, Throwable throwable) {
    synchronized(this) {
      noOfFailedUri++;
      if (noOfSuccessUri + noOfFailedUri == noOfTotalUri) {
        handlePromise();
      }
    }
  }

  @Override
  public void reject(String code, String message, Throwable throwable) {
    reject(code, message, throwable);
  }

  @Override
  public void reject(Throwable throwable) {
    reject(throwable);
  }

  @Override
  public void reject(Throwable throwable, WritableMap userInfo) {
    reject(throwable, userInfo);
  }

  @Override
  public void reject(String code, @NonNull @NotNull WritableMap userInfo) {
    reject(code, userInfo);
  }

  @Override
  public void reject(String code, Throwable throwable, WritableMap userInfo) {
    reject(code, throwable, userInfo);
  }

  @Override
  public void reject(String code, String message, @NonNull @NotNull WritableMap userInfo) {
    reject(code, message, userInfo);
  }

  @Override
  public void reject(String code, String message, Throwable throwable, WritableMap userInfo) {
    reject(code, message, throwable, userInfo);
  }

  @Override
  public void reject(String message) {
    reject(message);
  }
}
