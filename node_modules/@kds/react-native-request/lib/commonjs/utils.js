"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VersionIs = void 0;
exports.getAppVersion = getAppVersion;
exports.versionCompare = versionCompare;

var _reactNative = require("react-native");

let VersionIs;
/**
 * Compare two versions quickly.
 * @param current Is this version greater, equal to, or less than the other?
 * @param other The version to compare against the current version
 * @return 1 if current is greater than other, 0 if they are equal or equivalent, and -1 if current is less than other
 */

exports.VersionIs = VersionIs;

(function (VersionIs) {
  VersionIs[VersionIs["LessThan"] = -1] = "LessThan";
  VersionIs[VersionIs["EqualTo"] = 0] = "EqualTo";
  VersionIs[VersionIs["GreaterThan"] = 1] = "GreaterThan";
})(VersionIs || (exports.VersionIs = VersionIs = {}));

function versionCompare(current, other) {
  const cp = String(current).split('.');
  const op = String(other).split('.');

  for (let depth = 0; depth < Math.min(cp.length, op.length); depth++) {
    const cn = Number(cp[depth]);
    const on = Number(op[depth]);
    if (cn > on) return VersionIs.GreaterThan;
    if (on > cn) return VersionIs.LessThan;
    if (!isNaN(cn) && isNaN(on)) return VersionIs.GreaterThan;
    if (isNaN(cn) && !isNaN(on)) return VersionIs.LessThan;
  }

  return VersionIs.EqualTo;
}

let appVersion = '';

function getAppVersion() {
  var _NativeModules$KRNBas, _NativeModules$KRNBas2, _match;

  if (appVersion) {
    return appVersion;
  }

  const {
    data: {
      appVersion: version
    }
  } = ((_NativeModules$KRNBas = _reactNative.NativeModules.KRNBasic) === null || _NativeModules$KRNBas === void 0 ? void 0 : (_NativeModules$KRNBas2 = _NativeModules$KRNBas.getDeviceInfoSync) === null || _NativeModules$KRNBas2 === void 0 ? void 0 : _NativeModules$KRNBas2.call(_NativeModules$KRNBas)) || {
    data: {
      appVersion: ''
    }
  };
  appVersion = (version === null || version === void 0 ? void 0 : (_match = version.match(/\d+\.\d+\.\d+/)) === null || _match === void 0 ? void 0 : _match[0]) || '';
  return appVersion;
}
//# sourceMappingURL=utils.js.map