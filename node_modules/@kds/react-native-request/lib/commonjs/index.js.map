{"version":3,"sources":["index.ts"],"names":["KSURCTNetworkInterface","requestV2","nativeRequestV2","request","nativeRequest","undefined","NativeModules","originOptions","success","fail","complete","returnPromise","requestInterceptors","responseInterceptors","otherOptions","options","reduce","ret","reqInterceptor","resolve","reject","timeout","Platform","OS","timer","hasResult","successCallback","res","clearTimeout","result","resInterceptor","failCallback","err","businessName","test","url","appVersion","VersionIs","LessThan","replace","headers","contentType","contentType2","mergedContentType","indexOf","isIosLessThan10_5_10","isAndroidAndReponseTypeStringAndLessThan11_0_30","responseType","useRequestV2","parsedRes","JSON","parse","parsedErr","then","data","compatibleRes","statusCode","cookies","catch","code","message","apiErrorInfo","setTimeout","Promise","rej"],"mappings":"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","sourcesContent":["import type {\n  ExportRequestOptions,\n  FailParams,\n  RequestOptions,\n  SuccessParams,\n} from './types';\nexport * from './types';\nimport { NativeModules, Platform } from 'react-native';\nimport { getAppVersion, versionCompare, VersionIs } from './utils';\n\nconst {\n  KSURCTNetworkInterface: {\n    requestV2: nativeRequestV2,\n    request: nativeRequest,\n  } = { requestV2: undefined, request: undefined },\n} = NativeModules;\nasync function request<R = Record<string, any>, P = Record<string, any>>(\n  originOptions: ExportRequestOptions<R, P>\n): Promise<SuccessParams<R>> {\n  const {\n    success,\n    fail,\n    complete,\n    returnPromise = true,\n    requestInterceptors = [],\n    responseInterceptors = [],\n    ...otherOptions\n  } = originOptions;\n  const options = requestInterceptors.reduce((ret, reqInterceptor) => {\n    return reqInterceptor(ret) || ret;\n  }, otherOptions);\n  let resolve: any;\n  let reject: any;\n  const timeout = options.timeout || (Platform.OS === 'android' ? 10 : 15);\n  let timer: any;\n  let hasResult = false;\n  const successCallback = (res: SuccessParams<R>) => {\n    clearTimeout(timer);\n    if (hasResult) {\n      return;\n    }\n    hasResult = true;\n    const result = responseInterceptors.reduce((ret, resInterceptor) => {\n      return resInterceptor(ret) || ret;\n    }, res);\n    success?.(result);\n    resolve?.(result);\n    complete?.(result);\n  };\n  const failCallback = (err: FailParams) => {\n    clearTimeout(timer);\n    if (hasResult) {\n      return;\n    }\n    hasResult = true;\n    fail?.(err);\n    reject?.(err);\n    complete?.(err);\n  };\n  // 如果是版本号小于 9.10.40，且 businessName 为 web_merchant，对于 url 中没有带 host 的补上 https://app.kwaixiaodian.com\n  if (\n    options.businessName === 'web_merchant' &&\n    !/^https?:\\/\\//.test(options.url || '')\n  ) {\n    const appVersion = getAppVersion();\n    if (versionCompare(appVersion, '9.10.40') === VersionIs.LessThan) {\n      options.url = `https://app.kwaixiaodian.com/${(options.url || '').replace(\n        /^\\//,\n        ''\n      )}`;\n    }\n  }\n\n  // 兼容安卓 9.8.50 之前的 Content-Type\n  if (\n    options.headers &&\n    (options.headers['content-type'] || options.headers['Content-Type']) &&\n    Platform.OS === 'android'\n  ) {\n    const {\n      headers: { 'content-type': contentType, 'Content-Type': contentType2 },\n    } = options;\n    const mergedContentType = contentType || contentType2;\n    const appVersion = getAppVersion();\n    if (\n      versionCompare(appVersion, '9.8.50') === VersionIs.LessThan &&\n      mergedContentType.indexOf('application/json') !== -1\n    ) {\n      if (contentType) {\n        options.headers['content-type'] = 'application/json';\n      }\n      if (contentType2) {\n        options.headers['Content-Type'] = 'application/json';\n      }\n    }\n  }\n  // 兼容IOS 10.1.30 之前的 Content-Type\n  if (\n    options.headers &&\n    options.headers['content-type'] &&\n    Platform.OS === 'ios'\n  ) {\n    const {\n      headers: { 'content-type': contentType },\n    } = options;\n    const appVersion = getAppVersion();\n    if (versionCompare(appVersion, '10.1.30') === VersionIs.LessThan) {\n      delete options.headers['content-type'];\n      options.headers['Content-Type'] = contentType;\n    }\n  }\n  // IOS 10.5.10 以下不应该使用 V2 接口\n  const isIosLessThan10_5_10 =\n    Platform.OS === 'ios' &&\n    versionCompare(getAppVersion(), '10.5.10') === VersionIs.LessThan;\n\n  // Android 11.0.30 以下且 responseType 等于 string 时不应该使用 V2 接口\n  const isAndroidAndReponseTypeStringAndLessThan11_0_30 =\n    options.responseType === 'string' &&\n    Platform.OS === 'android' &&\n    versionCompare(getAppVersion(), '11.0.30') === VersionIs.LessThan;\n  const useRequestV2 =\n    !!nativeRequestV2 &&\n    !isIosLessThan10_5_10 &&\n    !isAndroidAndReponseTypeStringAndLessThan11_0_30;\n\n  if (useRequestV2) {\n    nativeRequestV2(\n      {\n        ...options,\n      } as RequestOptions<P>,\n      (res: string) => {\n        const parsedRes: SuccessParams<R> = JSON.parse(res);\n        successCallback(parsedRes);\n      },\n      (err: string) => {\n        const parsedErr: FailParams = JSON.parse(err);\n        failCallback(parsedErr);\n      }\n    );\n  } else if (nativeRequest) {\n    nativeRequest(options)\n      .then((data: R) => {\n        const compatibleRes: SuccessParams<R> = {\n          data,\n          headers: {},\n          statusCode: 200,\n          cookies: [],\n        };\n        successCallback(compatibleRes);\n      })\n      .catch(\n        ({\n          code,\n          message,\n        }: {\n          code: number;\n          message: string;\n          [key: string]: any;\n        }) => {\n          failCallback({\n            code,\n            message,\n          });\n        }\n      );\n  } else {\n    // 没有原生请求模块暂时直接返回失败\n    failCallback({\n      code: -1,\n      message: '',\n      apiErrorInfo: {},\n    });\n  }\n  // 如果规定时间没响应自动超时\n  timer = setTimeout(() => {\n    failCallback({\n      code: -2,\n      message: '请求接口超时',\n      apiErrorInfo: {},\n    });\n  }, timeout * 1000);\n  return returnPromise\n    ? new Promise((res, rej) => {\n        resolve = res;\n        reject = rej;\n      })\n    : (undefined as any);\n}\n\nexport default request;\n"]}