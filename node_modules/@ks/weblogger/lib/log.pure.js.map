{"version":3,"file":"log.pure.js","sources":["../node_modules/tslib/tslib.es6.js","../src/config/global.ts","../src/core/url-package.ts","../src/util/index.ts","../src/config/types.ts","../src/util/events.ts","../src/core/index.ts","../src/config/index.ts","../src/util/console.ts","../src/core/common.ts","../src/proto/base.ts","../src/proto/v3/client_event.ts","../src/proto/v2/client_event.ts","../src/config/apis.ts","../src/core/logger.ts","../src/util/test.ts","../src/platform/pure/logger.ts","../src/core/show-event.ts","../src/core/log.ts","../src/core/task-event.ts","../src/core/custom-stat-event.ts","../src/core/video-stat-event.ts","../src/util/increment-id.ts","../src/platform/pure/index.ts","../src/util/uuid.ts","../src/plugins/base.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","\n/**\n * 全局配置，可用于所有模块中\n */\ninterface Config {\n    sessionId: string;\n    [key: string]: any;\n};\n\nconst GlobalConfig:Config = {\n    sessionId: '',\n    // 小程序专用\n    appDevicePackageReady: false, // 公参app_package device_package是否设置完成，在getNetwork 成功后会被设为true\n    identityPackageReady: false, // identity数据是否设置完成，调用setPublicParam后 设置完成。\n};\n\nexport const updateConfig = (key: string, value: any) => {\n    GlobalConfig[key] = value;\n};\n\nexport const updateConfigs = (configs: {[key: string]: any}) => {\n    Object.assign(GlobalConfig, configs);\n}\n\nexport default GlobalConfig;","import type { UrlObj, PageTypeKey } from '@/config/types';;\nexport default class UrlPackage {\n    // 一级页面。参考埋点需求填写即可\n    page: string = '';\n    // 参数列表参考埋点需求填写，并转成 json 字符串格式\n    params?: {[key: string]: any};\n    // 实例的全局唯一标识，使用UUID即可\n    identity: string = '';\n    // 应用页面类型\n    page_type: 1 | 2 | 3 | 0;\n    // 是否是半屏页\n    coPage?: boolean;\n    // 桥接新添加字段\n    category?: string;\n    constructor(url: UrlObj, pageType?: PageTypeKey) {\n        switch (pageType) {\n            case 'web':\n                this.page_type = 2;\n                break;\n            case 'native':\n                this.page_type = 1;\n                break;\n            case 'mina':\n                this.page_type = 3;\n                break;\n            default:\n                this.page_type = 0; // unknown\n        }\n        this.update(url.page, url.params);\n    }\n\n    // 更新urlPackage\n    update(page: string = '', params?: any) {\n        if (page && page !== this.page) {\n            this.page = page;\n            this.identity = this.generatePageId(page);\n        }\n        if (params) {\n            this.params = Object.assign(this.params || {}, params);\n        }\n    }\n    toJSON() {\n        return {\n            page: this.page,\n            identity: this.identity,\n            page_type: this.page_type,\n            params: JSON.stringify(this.params),\n            category: this.category,\n        };\n    }\n    /**\n     * 生成页面唯一id\n     * 未自定义页面唯一ID生成方法，请自行添加后重新尝试\n     * @param page\n     */\n    generatePageId(page: string) {\n        return page + new Date().getTime();\n    }\n}\n","import { ksAppList } from './const';\nimport { getCookie } from '@/util/cookie';\nimport type { UrlMapFn, UrlMap, UrlMapFnParam } from '../config/types';\nimport { error } from './console';\n\n/**\n * 获取 localStorage 缓存\n */\nexport function getLocalStorageItem(key: string) {\n    try {\n        if (window && window.localStorage) {\n            const value = window.localStorage.getItem(key);\n            if (value) {\n                try {\n                    return JSON.parse(value);\n                } catch (err) {\n                    return value;\n                }\n            }\n        }\n    } catch (err) {\n        return null;\n    }\n    return null;\n\n}\n/**\n * 设置 localStorage 缓存\n */\nexport function setLocalStorageItem(key: string, value: any) {\n    try {\n        if (window && window.localStorage) {\n            window.localStorage.setItem(key, JSON.stringify(value));\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n    return false;\n}\n\n/**\n * 判断item是否在目标数组arr中\n * @param {*} arr   目标数组\n * @param {*} item  item\n */\nexport function inArray(arr: any[], item: any) {\n    return arr.indexOf(item) > -1;\n}\n/**\n * 从目标arr中删除item\n * @param {*} arr  目标数组\n * @param {*} item  item\n */\nexport function deleteArray(arr: any[], item: any) {\n    const index = arr.indexOf(item);\n\n    if (index > -1) {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * 事件监听兼容处理\n * @param {*} evtTarget  事件监听目标\n * @param {*} evtName   事件名\n * @param {*} callback  回调函数\n * @param {*} options  相关参数设置\n */\nexport function addMonitor(\n    evtTarget: Element | Window | Document,\n    evtName: string,\n    callback: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions,\n) {\n    if ('attachEvent' in evtTarget) {\n        return evtTarget.attachEvent('on' + evtName, callback);\n    }\n    return evtTarget.addEventListener(evtName, callback, options);\n}\n\n/**\n * 事件监听解绑兼容处理\n * @param {*} evtTarget  事件监听目标\n * @param {*} evtName   事件名\n * @param {*} callback  事件回调\n */\nexport function removeMonitor(\n    evtTarget: Element | Window | Document,\n    evtName: string,\n    callback: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions,\n) {\n    if ('attachEvent' in evtTarget) {\n        return evtTarget.detachEvent('on' + evtName, callback);\n    }\n    return evtTarget.removeEventListener(evtName, callback, options);\n}\n\nexport function leftPad(str: string, len: number, ch = ' ') {\n    len = len - str.length;\n    if (len <= 0) {\n        return str;\n    }\n    let pad = '';\n    while (len) {\n        if (len & 1) {\n            pad += ch;\n        }\n        len >>= 1;\n        ch += ch;\n    }\n    return pad + str;\n}\n\n/**\n * 是否是快手系APP\n */\nexport const isInApp = (ua = window.navigator.userAgent.toLowerCase()) => {\n    try {\n        for (let i = 0; i < ksAppList.length; i++) {\n            if (ua.indexOf(ksAppList[i]!.toLowerCase()) > -1) {\n                return true;\n            }\n        }\n    } catch (err) {\n        return false;\n    }\n};\n\nexport function parseQueryString(queryString: string) {\n    const result: any = {};\n    const queries = queryString.split('&');\n    for (const query of queries) {\n        const [key, value] = query.split('=');\n        if (!(key! in result)) {\n            result[key!] = value;\n            continue;\n        }\n        if (result[key!] instanceof Array) {\n            result[key!].push(value);\n            continue;\n        }\n        result[key!] = [result[key!], value];\n    }\n    return result;\n}\n\nexport function stringifyQuery(paramsString: any) {\n    const params = typeof paramsString === 'string' ? JSON.parse(paramsString) : paramsString;\n    const queries: string[] = [];\n    Object.keys(params).forEach(key => {\n        if (params[key] instanceof Array) {\n            for (const val of params[key]) {\n                queries.push(`${key}=${val}`);\n            }\n        } else if (typeof params[key] === 'object' && params[key] !== null) {\n            queries.push(`${key}=${JSON.stringify(params[key])}`);\n        } else {\n            queries.push(`${key}=${params[key]}`);\n        }\n    });\n    return queries.join('&');\n}\n\n// 参考：https://codereview.stackexchange.com/questions/37512/count-byte-length-of-string\nexport function getStringBytes(data: any) {\n    let dataStr = '';\n\n    // Force string type\n    if (typeof data === 'string') {\n        dataStr = data;\n    } else {\n        try {\n            dataStr = JSON.stringify(data);\n        } catch (e) {\n            dataStr = String(data);\n        }\n    }\n\n    let byteLen = 0;\n    for (let i = 0; i < dataStr.length; i++) {\n        const c = dataStr.charCodeAt(i);\n        byteLen += c < (1 << 7) ? 1 :\n            c < (1 << 11) ? 2 :\n                c < (1 << 16) ? 3 :\n                    c < (1 << 21) ? 4 :\n                        c < (1 << 26) ? 5 :\n                            c < (1 << 31) ? 6 : Number.NaN;\n    }\n    return byteLen;\n}\n\n/**\n * lodash 的 pick 方法\n */\nexport function pick(data: any, paths: string[]) {\n    let index = -1;\n    const length = paths.length;\n    const result: any = {};\n\n    while (++index < length) {\n        const path = paths[index];\n        const value = data[path!];\n        result[path!] = value;\n    }\n\n    return result;\n}\n\n/**\n * lodash的omit方法\n * @param data\n * @param paths\n */\nexport function omit(data: any, paths: string[]) {\n    const result: any = {};\n\n    for (const i in data) {\n        if (data.hasOwnProperty(i)) {\n            if (Array.isArray(paths) && paths.indexOf(i) === -1) {\n                result[i] = data[i];\n            }\n        }\n    }\n\n    return result;\n}\n\n/**\n * 检查依赖版本号是否不小于推荐版本\n */\nexport function checkVersion(recommendVersion: string, version: string) {\n    if (!version) return false;\n    if (version.indexOf('alpha') !== -1) return false;\n    if (version.indexOf('beta') !== -1) return false;\n    try {\n        let matches = recommendVersion.match(/\\d+\\.\\d+\\.\\d+/);\n        recommendVersion = matches?.[0] || '';\n        if (!recommendVersion) return true;\n\n        matches = version.match(/\\d+\\.\\d+\\.\\d+/);\n        version = matches?.[0] || '';\n        if (!version) return false;\n\n        const [rMajor, rMinor, rPatch] = recommendVersion.split('.').map((i: string) => Number(i));\n        const [major, minor, patch] = version.split('.').map((i: string) => Number(i));\n\n        if (major! < rMajor!) return false;\n        if (major! > rMajor!) return true;\n\n        if (minor! < rMinor!) return false;\n        if (minor! > rMinor!) return true;\n\n        if (patch! < rPatch!) return false;\n\n        return true;\n    } catch (err) {\n        return false;\n    }\n}\n\nexport function checkSupportCloseCoPage() {\n    const version = getCookie('appver', undefined, true);\n    return version && checkVersion('10.8.30', version);\n}\n/**\n * 获取元素xpath\n * @param element 元素\n */\nexport function getXpathFromNode(element: HTMLElement): string {\n    // if (element && element.id !== '')\n    //     return 'id(\"' + element.id + '\")';\n    if (element === document.body)\n        return 'HTML/' + element.tagName;\n\n    let ix = 0;\n    if (element && element.parentNode) {\n        const siblings = element.parentNode.childNodes;\n        for (let i = 0; i < siblings.length; i++) {\n            const sibling = siblings[i] as HTMLElement;\n            if (sibling === element)\n                return getXpathFromNode(element.parentNode as HTMLElement) + '/' + element.tagName + '[' + (ix + 1) + ']';\n            if (sibling.nodeType === 1 && sibling.tagName === element.tagName)\n                ix++;\n        }\n    }\n    return '';\n}\n\n/**\n * url中获取path和query\n */\nexport function getPathAndQueryFromUrl() {\n    const { protocol, host, pathname, search, href } = window.location;\n    const pageUrl = href;\n    const pagePath = protocol + host + pathname;\n    const pageParams = parseQueryString(search.slice(1));\n    return { pageUrl, pagePath, pageParams };\n}\n\nexport function getUrlAndQueryFromUrl(url = location.href) {\n    const queryIndex = url.lastIndexOf('?');\n    if (queryIndex === -1) {\n        return {\n            page: url\n        };\n    }\n    const page = url.slice(0, queryIndex);\n    const queryString = url.slice(queryIndex + 1);\n    return {\n        page,\n        params: parseQueryString(queryString),\n    };\n};\n\nexport const getMappingPage = (urlPackage: UrlMapFnParam, urlMap?: UrlMap | UrlMapFn) => {\n    let { url, page, params, pageId } = urlPackage;\n    if (!page && typeof url === 'string') {\n        const parsed = getUrlAndQueryFromUrl(url);\n        page = parsed.page;\n        params = parsed.params;\n    }\n    if (typeof urlMap === 'function') {\n        try {\n            const res = urlMap({ url, page, params });\n            if (typeof res === 'string') {\n                page = res;\n            } else if (typeof res === 'object') {\n                if (res.page) {\n                    page = res.page;\n                }\n                if (res.params) {\n                    params = res.params;\n                }\n                if (res.pageId) {\n                    pageId = res.pageId;\n                }\n            }\n        } catch (err) { }\n    } else if (typeof urlMap === 'object') {\n        let mappingPage = '';\n        for (const key in urlMap) {\n            if ((url || page || '').indexOf(key) > -1) {\n                mappingPage = urlMap[key]!;\n                break;\n            }\n        }\n        if (mappingPage) {\n            page = mappingPage;\n        }\n    }\n    return {\n        page,\n        params,\n        pageId\n    };\n};\n\nexport function cloneDeep(obj: [] | {}): [] | {} {\n    if (typeof obj !== 'object') return {};\n    const newObj = obj instanceof Array ? [] : {};\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            // @ts-ignore\n            newObj[key] = typeof obj[key] === 'object' ? cloneDeep(obj[key]) : obj[key];\n        }\n    }\n    return newObj;\n}\n\n/**\n * 非空纯对象判定\n * @param obj\n * @returns\n */\n const isObj = (obj: any) => obj && typeof obj === 'object' && !Array.isArray(obj);\n /**\n  * 对象打平赋值\n  * @param target\n  * @param options\n  * @returns\n  */\n export const flattenAssign = (target: any, options: any) => {\n    if (!isObj(target) || !isObj(options)) return;\n    const merge = (obj1: any, obj2: any, key: string) => {\n        if (isObj(obj1[key]) && isObj(obj2[key])) {\n            Object.assign(obj1[key], obj2[key]);\n        } else if (!isObj(obj1[key]) && !isObj(obj2[key])){\n            obj1[key] = obj2[key];\n        }\n    }\n    for (const key in options) {\n        if (target.hasOwnProperty(key)) {\n            merge(target, options, key);\n            continue;\n        }\n        for (const deepKey in target) {\n            if (isObj(target[deepKey]) && target[deepKey].hasOwnProperty(key)) {\n                merge(target[deepKey], options, key);\n            }\n        }\n    }\n}\n\nexport function pageUrlValidate(page: string) {\n    // 对于上报到v2，page为url的埋点，给予警告\n    if (page && /^(https?:)?\\/\\//.test(page)) {\n        error('[error 108]',`请注意当前埋点页面信息为 ${page}，不符合规范，上报失败！`);\n        return false;\n    }\n    return true;\n}\n\nexport const getResolution = (() => {\n    let resolution = '';\n    return () => {\n        if (resolution) {\n            return resolution;\n        }\n        try {\n            const ratio = window.devicePixelRatio || 1;\n            const width = Math.floor(screen.width * ratio); // 有的devicePixelRatio为小数，在此转为整数\n            const height = Math.floor(screen.height * ratio);\n            resolution = `${width}x${height}`;\n            return resolution;\n        } catch (err) {\n            return '';\n        }\n    };\n})();\n\n// 从vue-router里面拿的……\nexport function supportsPushState() {\n    const ua = window.navigator.userAgent;\n    if (\n        (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1)\n        && ua.indexOf('Mobile Safari') !== -1\n        && ua.indexOf('Chrome') === -1\n        && ua.indexOf('Windows Phone') === -1\n    ) {\n        return false;\n    }\n    return window.history && 'pushState' in window.history;\n}\n\nexport function deleteUrlQueryAndReturnFullUrl(url: string, deleteKeyArray: string[]) {\n    const { page, params } = getUrlAndQueryFromUrl(url);\n    if (Array.isArray(deleteKeyArray) && deleteKeyArray.length) {\n        deleteKeyArray.forEach(key => {\n            delete params[key];\n        });\n        let paramsString = '';\n        for (const i in params) {\n            if (params.hasOwnProperty(i)) {\n                paramsString += paramsString ? '&' : '';\n                paramsString += `${i}=${params[i]}`;\n            }\n        }\n        return paramsString ? `${page}?${paramsString}` : page;\n    }\n    return url;\n}\n\ninterface TypeQueryMap {\n    [key: string]: string | number;\n}\n\n/**\n * 设置url中的参数，并返回完整url\n * @param url\n * @param configQueryMap\n */\nexport function setUrlQueryAndReturnFullUrl(url: string, configQueryMap: TypeQueryMap): string {\n    if (typeof configQueryMap !== 'object') {\n        return url;\n    }\n    let paramsString = '';\n    for (const i in configQueryMap) {\n        if (configQueryMap.hasOwnProperty(i)) {\n            const paramString = `${i}=${configQueryMap[i]}`;\n            paramsString += paramsString ? `&${paramString}` : paramString;\n        }\n    }\n    let partUrl;\n    const lastChar = url[url.length - 1];\n    if (url.indexOf('?') === -1) {\n        // 不存在变量\n        partUrl = `?${paramsString}`;\n    } else if (lastChar === '?' || lastChar === '&') {\n        // 处理最后一个字符是 ? 以及 & 的特殊情况\n        partUrl = paramsString;\n    } else {\n        // 正常添加变量\n        partUrl = `&${paramsString}`;\n    }\n    return url + partUrl;\n}\n\nexport function isMobileAndIpad() {\n    const ua = window?.navigator?.userAgent || '';\n    const isMobile = /mobile|tablet|ip(ad|hone|od)|android|(windows phone)/i.test(ua);\n    // 兼容最新版本 ipad 版本 ua 判断\n    const isiPad = window?.navigator.platform === 'MacIntel' && window?.navigator?.maxTouchPoints > 1;\n    return isMobile || isiPad;\n}\n\n/**\n * 是否支持 worker gzip 压缩\n * @returns\n */\nexport const enableAsyncGzip = () => !!(\n    window?.Worker // 可以新建 worker\n    && window?.Uint8Array // 支持二进制存储\n    && window.URL // 可以创建文件路径\n    && window.Promise // 可以使用 promise\n    && !isMobileAndIpad() // 移动端禁止使用压缩\n);\n\n/**\n * 返回正整数数值\n * @param value\n */\nexport const getPositiveInteger = (value: number) => {\n    try {\n        return Math.abs(Math.floor(value));\n    } catch (e) {\n        return value;\n    }\n};\n\nexport function stringifyParams(params: string | any) {\n    return typeof params === 'string' ? params : typeof params === 'object' ? JSON.stringify(params) : '';\n}\n","import type { Base } from '../proto/base';\nimport type { ClientEvent as ClientEventV3 } from '../proto/v3/client_event';\n\nexport interface UrlObj {\n    page?: string;\n    params?: any;\n    pageId?: string;\n    force?: boolean;\n}\n\nexport interface UrlMapFnParam {\n    url?: string;\n    page?: string;\n    params?: any;\n    pageId?: string;\n}\n\n/**\n * 全局附加属性\n */\nexport type GlobalAttr = {\n    entry_tag?: EntryTagType[];\n    [key: string]: any;\n}\n\nexport type UrlMapFn = (param: UrlMapFnParam) => (UrlObj | string);\nexport type BaseOptions = {\n    /**\n     * did\n     */\n    device_id?: string;\n    /**\n     * 预留字段, 端内页面不可缺省，服务端需解密\n     */\n    global_id?: string;\n    /**\n     * 用户唯一标志\n     */\n    user_id?: string;\n    /**\n     * 标识调用方,产品线（新注册时自动增加）,找韩小龙要\n     * 默认是0，表示产品未被注册= =\n     */\n    product?: number;\n    /**\n     * 来源\n     */\n    channel?: string;\n    /**\n     * 版本名\n     */\n    version_name?: string;\n    /**\n     * 应用包名\n     */\n    package_name?: string;\n    /**\n     * 代替app_product参数上报具体接入的app，具体值请联系韩小龙分配\n     */\n    product_name?: string;\n    /**\n     * 各端设备识的备用参数，例如微信小程序端上报微信内部用户的唯一标识\n     */\n    union_id?: string;\n    /**\n     * 网络类型\n     */\n    network_type?: keyof typeof networkType;\n    /**\n     * 区分平台\n     */\n    container?: Container;\n    /**\n     * 中台服务名称，比如积木、im sdk等，如果业务log未使用中台服务，该字段置空\n     */\n    service_name?: string;\n    /**\n     * 子业务场景\n     */\n    sub_biz?: string;\n    /**\n     * 是否需要加密\n     */\n    need_encrypt?: boolean;\n    /**\n     * 防盗链id\n     */\n    safety_id?: string;\n    /**\n     * AB实验\n     */\n    experiment?: Base.Experiment[];\n    /**\n     * H5 附加参数\n     */\n    h5_extra_attr?: H5ExtraAttr;\n    /**\n     * 表示宿主平台环境，默认是 PC 端 web 页面\n     */\n    platform?: number;\n    /**\n     * 表示页面会话 id\n     */\n    session_id?: string;\n    /**\n     * 全局参数，可用来设置染色参数\n     */\n    global_attr?: GlobalAttr;\n}\n\n// 小程序需要的参数\nexport type MinaBaseOption = BaseOptions & {\n    // 公参的app product字段\n    appProduct?: string;\n    // 批量上报的时间间隔\n    batchReportInterval?: number;\n    // 是否上报都等待一次业务中公参的设定\n    isReportUtilBizPublicParamsBeSet?: boolean;\n    [key: string]: string | boolean | number | undefined;\n};\n\n/**\n * 事件\n */\n// 网络类型\nexport const networkType = {\n    unknown: 0,\n    none: 1,\n    wifi: 2,\n    '4g': 3,\n    '3g': 4,\n    '2g': 5,\n    '5g': 7,\n    'slow-2g': 5,\n};\n\n// 任务事件类型\nexport enum TaskOperations {\n    CLICK = 'CLICK',\n    DOUBLE_CLICK = 'DOUBLE_CLICK',\n    TRIPLE_CLICK = 'TRIPLE_CLICK',\n    LONG_PRESS = 'LONG_PRESS',\n    PULL = 'PULL',\n    DRAG = 'DRAG',\n    SCALE = 'SCALE',\n    PULL_DOWN = 'PULL_DOWN',\n    PULL_UP = 'PULL_UP',\n    AUTO = 'AUTO',\n}\n\n// 事件类型\nexport enum EventTypes {\n    PV = 'PV',\n    SHOW = 'SHOW',\n    VIDEO = 'VIDEO',\n    // Costume\n    CUSTOM = 'CUSTOM',\n    CUSTOM_EVENT = 'CUSTOM_EVENT',\n    RADAR = 'RADAR',\n}\n\nexport type StatusTypes = keyof typeof Base.ActionStatus;\n\nexport type OperationDirectionTypes = keyof typeof Base.Direction;\n\nexport type TaskStatusTypes = keyof typeof Base.TaskStatus;\n\nexport interface OtherEventOptions {\n    name: string;\n    params?: any;\n    referUrlPackage?: Base.UrlPackage;\n    currentUrlPackage: Base.UrlPackage;\n    contentPackage?: ContentPackage;\n    status?: TaskStatusTypes;\n    taskType?: TaskEventTypeStrings;\n    eventId?: string;\n    operationDirection?: OperationDirectionTypes;\n}\n\n// H5 附加参数\nexport interface H5ExtraAttr {\n    // 主要用于 bridge 模式下，将当前产品的 product_name 透传\n    product_name?: string;\n    // 描述实际埋点对应的产品名称。比如一个h5的产品A，嵌入到产品B中使用，则product_name = A\n    host_product?: string;\n    // 宿主客户端版本号\n    app_version_name?: string;\n    seq_id?: number;\n    http_seq_id?: number;\n    domain?: string;\n    [key: string]: any;\n}\n\n/**\n * 染色参数\n *  page_name: 页面标识，\n *  element_action: 元素标识，\n *  stid：策略id（格式由小分队提供），\n *  pos：位置信息1，\n *  params:{元素参数1}\n */\nexport interface EntryTagType {\n    page_name?: string;\n    element_action?: string;\n    stid?: string;\n    pos?: number;\n    params?: {[key: string]: any};\n}\n\nexport type PageTypeKey = 'web' | 'native' | 'mina';\n\nexport type Container = 'NATIVE' | 'REACT_NATIVE' | 'H5' | 'MP_WECHAT' | 'MP_ALIPAY' | 'MP_BAIDU' | 'MP_KUAISHOU' | 'WEB';\n\nexport interface UrlMap {\n    [key: string]: string;\n}\n\nexport type ContentPackage = string | {[key: string]: any};\n\nexport interface ShowEventOptions {\n    type?: string;\n    referUrlPackage?: Base.UrlPackage;\n    currentUrlPackage: Base.UrlPackage;\n    action: 'enter' | 'leave' | 'hidden' | 'visible';\n    beginTime?: number;\n    name?: string;\n    timeCost?: number;\n    params?: any;\n    contentPackage?: ContentPackage;\n    status?: StatusTypes;\n    operationDirection?: OperationDirectionTypes;\n    actionType?: keyof typeof Base.ActionType;\n    auto?: boolean;\n    eventId?: string;\n    disablePV?: boolean;\n    /**\n     * 向客户端透传的日志信息，如 stid\n     */\n    feedLogCtx?: {\n        stidContainer?: string;\n        [key: string]: any;\n    };\n}\n\nexport interface ShowEventProps {\n    referUrlPackage?: Base.UrlPackage;\n    currentUrlPackage: Base.UrlPackage;\n    type: 'enter' | 'leave' | 'hidden' | 'visible';\n    beginTime?: number;\n    name: string;\n    params?: any;\n    contentPackage?: ContentPackage;\n    status?: StatusTypes;\n    eventId?: string;\n    operationDirection?: OperationDirectionTypes;\n    actionType?: keyof typeof Base.ActionType;\n    auto?: boolean;\n}\n\nexport type TaskEventTypeStrings = keyof typeof ClientEventV3.TaskEventType;\n\nexport type TaskEventOperationTypes = keyof typeof Base.OperationType;\nexport interface TaskEventOptions {\n    sessionId?: string;\n    referUrlPackage?: Base.UrlPackage;\n    currentUrlPackage: Base.UrlPackage;\n    name: string;\n    params?: any;\n    type: TaskOperations;\n    contentPackage?: ContentPackage;\n    status?: StatusTypes;\n    taskType?: string;\n    operationDirection?: keyof typeof Base.Direction;\n    eventId?: string;\n    disablePV?: boolean;\n}\n\nexport interface CustomStatEventOptions {\n    name: string;\n    params: any;\n    currentUrlPackage: Base.UrlPackage;\n    referUrlPackage?: Base.UrlPackage;\n    [key: string]: any;\n    eventId?: string;\n}\n\nexport interface Weblogger {\n    logConfig: any;\n    collect: (type: string, ...params: any) => void;\n    sendImmediately: (type: string, ...params: any) => void;\n    plug: (params: any, options?: any) => void;\n    addPluginInstance: (plugin: any) => void;\n    unplug: (name: string) => void;\n    updateBase: (options: BaseOptions) => void;\n    updateCommonPackage: (options: BaseOptions) => void;\n    updateReferUrlPackage: (url?: string | UrlObj, type?: 'web' | 'native' | 'mina') => void;\n    updateCurrentUrlPackage: (url: string | UrlObj, type?: 'web' | 'native' | 'mina') => void;\n    flush: () => void;\n    logger: any;\n    currentUrlPackage: Base.UrlPackage & { getRealUrlPackage: Function, update: (page: string, params: any, pageId?: string) => void, toJSON: () => void; };\n    referUrlPackage?: Base.UrlPackage & { getRealUrlPackage: Function };\n    commonPackage: any;\n    baseOption: any;\n    plugins: {[key: string]: any};\n    bridge?: any;\n    yoda?: any;\n    entryTag?: any;\n    sessionId: string;\n    SampledPageMap?: { [key: string]: boolean | { radar: { [key: string]: number; }; }; };\n    Utils: {\n        [key: string]: any;\n    };\n    beforeUnload: (event: Event) => void;\n    initBuildInPlugins?: (option?: any) => any;\n    addPlugins: () => void;\n    unplugAll: () => void;\n    on: (event: 'event', handler: (e: {type: string, action: string; data: any}) => void) => void;\n    off: (event: 'event', handler: (e?: any) => void) => void;\n    generateLog: (\n        type: string | SendConfig,\n        name: string | PVOptions | ShowOptions | TaskOptions | CustomOptions | OtherEventOptions,\n        params?: any,\n        contentPackage?: ContentPackage,\n        factory?: (type: string, data: any) => any,\n    ) => any;\n    getEntryTags?: () => Base.EntryTagType[];\n    setEntryTag?: (entryTag: Base.EntryTagType) => void;\n    consumeEntryTag?: (identity: string) => Base.EntryTagType[];\n    clearEntryTag?: (identity: string, containSelf: boolean) => void;\n    sendByHttp?: (type: string, ...params: any) => void;\n}\n\nexport type WeblogClass = {\n    __instance: Object;\n};\n\nexport type AutoPVFilter = (newUrl: string, oldUrl: string | null, type: 'enter' | 'leave' | 'hidden' | 'visible') => boolean;\n\n/**\n * PV 类型参数\n */\nexport interface PVOptions {\n    page?: string;\n    identity?: string;\n    pageId?: string;\n    pageType?: string;\n    params?: string | any;\n    contentPackage?: ContentPackage;\n    currentUrlPackage?: Base.UrlPackage;\n    status?: StatusTypes;\n    type?: 'enter' | 'leave' | 'hidden' | 'visible';\n    beginTime?: number;\n    eventId?: string;\n    auto?: boolean;\n    name?: string; // 小程序专用\n    timeCost?: number;\n    /**\n     * 是否是半屏页面\n     */\n    coPage?: boolean;\n    callback?: (error?: any) => void;\n    feedLogCtx?: {\n        stidContainer?: string;\n        [key: string]: any;\n    };\n}\n\nexport interface UrlPage {\n    page: string; // url_package.page 当前 page 的 name\n    identity?: string;\n    params?: any;\n    coPage?: boolean;\n}\n\n/**\n * Show 类型参数\n */\nexport interface ShowOptions {\n    action: string;\n    params?: any;\n    contentPackage?: ContentPackage;\n    currentUrlPackage?: Base.UrlPackage;\n    eventId?: string;\n    urlPage?: UrlPage;\n    disablePV?: boolean;\n    /**\n     * 向客户端透传的日志信息，如 stid\n     */\n    feedLogCtx?: {\n        stidContainer?: string;\n        [key: string]: any;\n    };\n    callback?: (error?: any) => void;\n}\n\n/**\n * TASK 类型参数\n */\nexport interface TaskOptions {\n    action: string;\n    params?: any;\n    contentPackage?: ContentPackage;\n    currentUrlPackage?: Base.UrlPackage;\n    type?: TaskEventTypeStrings;\n    status?: TaskStatusTypes;\n    eventId?: string;\n    urlPage?: UrlPage;\n    disablePV?: boolean;\n    /**\n     * 向客户端透传的日志信息，如 stid\n     */\n    feedLogCtx?: {\n        stidContainer?: string;\n        [key: string]: any;\n    };\n    callback?: (error?: any) => void;\n}\n\nexport interface ClickOptions {\n    action: string;\n    params?: any;\n    contentPackage?: ContentPackage;\n    currentUrlPackage?: Base.UrlPackage;\n    type?: TaskEventTypeStrings;\n    status?: TaskStatusTypes;\n    eventId?: string;\n    urlPage?: UrlPage;\n    disablePV?: boolean;\n    /**\n     * 染色参数\n     */\n    entryTag?: EntryTagType;\n    /**\n     * 向客户端透传的日志信息，如 stid\n     */\n    feedLogCtx?: {\n        stidContainer?: string;\n        [key: string]: any;\n    };\n    callback?: (error?: any) => void;\n}\n\n/**\n * CUSTOM 类型参数\n */\nexport interface CustomOptions {\n    key: string;\n    value?: any;\n    biz?: string;\n    eventId?: string;\n    urlPage?: UrlPage;\n    disablePV?: boolean;\n    currentUrlPackage?: Base.UrlPackage;\n    callback?: (error?: any) => void;\n}\n\nexport interface VideoEventOptionsParams {\n    duration?: number;\n    played_duration?: number;\n    downloaded?: boolean;\n    prepare_duration?: number;\n    enter_time?: number;\n    leave_time?: number;\n    video_type?: string;\n    play_video_type?: string;\n    photo_id?: number;\n    leave_action?: string;\n    average_fps?: number;\n    media_type?: string;\n    s_photo_id?: number;\n    video_qos_json?: string;\n    click_to_first_frame_duration?: number;\n    rssi?: number;\n    enter_player_action?: string;\n    summary?: string;\n    board_platform?: string;\n    collect_before_status?: string;\n    collect_after_status?: string;\n    session_uuid?: string;\n    soc_name?: string;\n}\n\nexport interface VideoEventOptions {\n    params: VideoEventOptionsParams;\n    callback?: (error?: any) => void;\n    urlPage?: UrlPage;\n    currentUrlPackage?: Base.UrlPackage;\n}\n\nexport type v3Env = 'production' | 'test' | 'development';\nexport type SendCallback = (error?: any) => void;\nexport type LoggerSender = (data: {url: string, data: any, [key: string]: any}, callback?: (error?: any) => void) => void;\n/**\n * 发送埋点接口参数\n */\nexport type EventOptions = PVOptions | ShowOptions | TaskOptions | CustomOptions | VideoEventOptions | ClickOptions;\n/**\n * 支持的事件类型\n */\nexport type SupportTypes = keyof typeof EventTypes | keyof typeof TaskOperations;\nexport interface SendConfig {\n    type: SupportTypes;\n    async?: boolean;\n}\n","// 为了减少点代码体积，自己搞一个简易的EventEmitter\nimport { deleteArray } from '.';\n\nexport default class EventEmitter {\n    private events: {\n        [key: string]: Array<(...args: any[]) => void>;\n    } = {};\n    on(eventName: string, callback: (...args: any[]) => void) {\n        if (callback && typeof callback === 'function') {\n            this.events[eventName] = this.events[eventName] || [];\n            this.events[eventName]?.push(callback);\n        }\n    }\n    off(eventName: string, callback?: (...args: any[]) => void) {\n        if (!this.events[eventName]) {\n            return;\n        }\n        if (callback && typeof callback === 'function') {\n            const array = this.events[eventName]\n            if (array) {\n                deleteArray(array, callback);\n            }\n        }\n        if (!callback) {\n            this.events[eventName] = [];\n        }\n    }\n    emit(eventName: string, ...args: any[]) {\n        if (!this.events[eventName]) {\n            return;\n        }\n        this.events[eventName]?.forEach(callback => {\n            callback(...args);\n        });\n    }\n}\n","import type { LogPackage, BatchLog as Logger } from './logger';\nimport type { BasePlugin, BasePluginConstructor } from '@/plugins/base';\nimport type { ClientLog as ClientLogV3 } from '../proto/v3/client_log';\nimport type { CommonPackage, CommonPackageOptions } from './common';\nimport type { HttpCommonPackage, CommonConfig, UrlObj, PageTypeKey } from '@/types/configuration';\nimport Global from '../config/global';\nimport UrlPackage from './url-package';\nimport EventEmitter from '../util/events';\nimport initConfig from '@/config';\nimport { error } from '@/util/console';\nimport type {\n    EventType as IEventType,\n    EventOptions as IEventOptions,\n    ImmediatelyEventOptions\n} from '@/types/event';\n\nlet pluginIndex = 0;\n\nexport default class Weblog extends EventEmitter {\n    static __instance: Weblog;\n    version: string = '__VERSION__';\n    currentUrlPackage!: UrlPackage;\n    referUrlPackage?: UrlPackage;\n    baseOption: HttpCommonPackage;\n    logConfig: CommonConfig;\n    // 核心日志发送\n    logger!: Logger;\n    commonPackage!: CommonPackage;\n    // 插件\n    plugins: {\n        [key: string]: BasePlugin | any;\n    } = {};\n    /**\n     * @param {?object} logConfig Logger初始化配置\n     * @param {object=} options 额外配置参数\n     *                    - base 公参的覆盖\n     */\n    constructor(\n        logConfig: CommonConfig,\n        base?: HttpCommonPackage,\n    ) {\n        super();\n        // 初始化初始化参数配置和埋点基础信息配置\n        this.baseOption = { ...base };\n        this.logConfig = initConfig(logConfig);\n        // 初始化页面信息\n        this.initUrlPackage();\n        // 记录首个实例\n        if (!Weblog.__instance) {\n            Weblog.__instance = this;\n        }\n    }\n\n    get sessionId() {\n        return Global.sessionId;\n    }\n\n    initUrlPackage() {\n        this.updateCurrentUrlPackage();\n    }\n\n    /**\n     * 更新当前 url 信息\n     * @param url\n     * @param type\n     */\n    updateCurrentUrlPackage(url: UrlObj | string = {}, type: PageTypeKey = 'web') {\n         // 该接口不改变 refer 信息\n        if (typeof url === 'object' && url.page) {\n            if (this.currentUrlPackage && url.page === this.currentUrlPackage.page) {\n                return this.currentUrlPackage.update(url.page, url.params);\n            }\n        }\n        this.currentUrlPackage = new UrlPackage(url as UrlObj, type);\n    }\n\n    /**\n     * 更新 refer url 信息\n     * @param url\n     * @param type\n     */\n    updateReferUrlPackage(url: UrlObj | UrlPackage | string = this.currentUrlPackage, type: PageTypeKey = 'web') {\n        if (url instanceof UrlPackage) {\n            this.referUrlPackage = url;\n        } else {\n            this.referUrlPackage = new UrlPackage(url as UrlObj, type);\n        }\n    }\n    /**\n     * 重设 common_package 信息\n     * @param base\n     */\n    updateBase(base: HttpCommonPackage) {\n        this.updateCommonPackage(base);\n    }\n    /**\n     * 更新现有 common_package 信息\n     */\n    updateCommonPackage(options: HttpCommonPackage | CommonPackageOptions) {\n        if (typeof options !== 'object') return;\n        this.commonPackage.update(options);\n    }\n\n    /**\n     * 初始化插件\n     * @param plugins\n     */\n    addPlugins() {\n        if (!this.logConfig.plugins || !this.logConfig.plugins.length) return;\n        // 类似 webpack plugins 的实例数组\n        this.logConfig.plugins.forEach((plugin: any) => {\n            if (typeof plugin === 'object' && typeof plugin.apply === 'function') {\n                this.addPluginInstance(plugin);\n            }\n        });\n    }\n    /**\n     * 加载插件实例\n     */\n    addPluginInstance(pluginInstance: any) {\n        if (pluginInstance) {\n            const key = pluginInstance.key || pluginInstance.constructor && pluginInstance.constructor.key || `plugin_auto_key_${pluginIndex++}`;\n            if (typeof pluginInstance.apply === 'function'\n                && (!pluginInstance.weblog || pluginInstance.weblog !== this)\n            ) {\n                pluginInstance.apply(this);\n            }\n            this.plugins[key] = pluginInstance;\n        }\n    }\n    /**\n     * 加载插件构造函数\n     * @param plugin\n     * @param pluginOptions\n     */\n    plug(plugin: BasePluginConstructor, pluginOptions?: any) {\n        if (this.plugins[plugin.key]) {\n            return error('[code 301]', `${plugin.key} 插件重复加载！`)\n        }\n        this.addPluginInstance(new plugin(this, pluginOptions));\n    }\n\n    unplug(name: string) {\n        const plugin = this.plugins[name];\n        if (plugin) {\n            plugin.destroy();\n            delete this.plugins[name];\n        }\n    }\n\n    unplugAll() {\n        for (const key in this.plugins) {\n            if (this.plugins[key]) {\n                this.unplug(key);\n            }\n        }\n    }\n\n    public flush = () => {\n        this.logger.flush();\n    }\n    /**\n     * 扩展类实现\n     * @param eventType \n     * @param eventOptions \n     * @returns \n     */\n    generateLog<T extends IEventType>(\n        eventType: T,\n        eventOptions?: IEventOptions<T>\n    ) {\n        return {};\n    }\n    send<T extends IEventType>(type: T, options: IEventOptions<T>, immediately?: boolean) {\n        const log = this.generateLog(type.toUpperCase() as T, options) as ClientLogV3.ReportEvent;\n        // @ts-ignore\n        if (typeof this.beforeSend === 'function') {\n            // @ts-ignore\n            this.beforeSend(type, options, log);\n        }\n        return this.logger.send(log, !!immediately, (options as ImmediatelyEventOptions<T>).callback);\n    }\n    /**\n     * 收集上报\n     * @param type \n     * @param options \n     * @returns \n     */\n    collect<T extends IEventType>(type: T, options: IEventOptions<T>): void {\n        this.send(type, options);\n    }\n\n    sendImmediately<T extends IEventType>(type: T, options: IEventOptions<T>): void {\n        this.send(type, options, true);\n    }\n\n    sendPackage(data: LogPackage, callback?: (error?: any) => void) {\n        this.logger.sendPackage(data, callback);\n    }\n\n    destroy() {\n        this.unplugAll();\n    }\n}\n","import type { HybridWeblogInitParams } from '@/types/configuration';\n\nexport default (options?: HybridWeblogInitParams[0]): HybridWeblogInitParams[0] => {\n    const logConfig: HybridWeblogInitParams[0] = {\n        env: 'production',\n        proto: 'v3',\n        timeout: 30000,\n        wait: 1000,\n        maxBatchLength: 50,\n        sampleRate: 1,\n        // 尝试从全局中获取 yoda\n        yoda: typeof window !== 'undefined' && (window as any).yoda,\n        forbidV2HttpUrlPage: true,\n        ...(options || {})\n    };\n    return logConfig;\n};\n\nexport type LogConfig =  HybridWeblogInitParams[0];\n\nexport type BridgeLogConfig = {\n    /**\n     * 是否禁止 PV，用于将 H5 作为端内元素上报，不会上报 PV 事件\n     */\n    disablePV?: boolean;\n\n    /**\n     * 自定义事件所属的业务线，如 LIVE、ESHOP 等\n     */\n    biz?: string;\n    /**\n     * 是否在 bridge 模式下同时开启 HTTP 上报\n     */\n    openHttpSender?: boolean;\n}","export function log(...args: any[]) {\n    try {\n        const log = console?.log;\n        return log && log.call(console, ...args);\n    } catch (e) {\n        return;\n    }\n}\n\nexport function warn(...args: any[]) {\n    try {\n        const warn = console?.warn;\n        return warn && warn.call(console, ...args);\n    } catch (e) {\n        return;\n    }\n}\nconst sdkName: string = '__SDK_NAME__';\nexport function error(...args: any[]) {\n    try {\n        const error = sdkName === 'webLogger_krn' ? console?.log : console?.error;\n        return error && error.call(console, ...args);\n    } catch (e) {\n        return;\n    }\n}\n","/**\n * @file 日志公参，基本确定不变的数据\n * @author <zhangshen@kuaishou.com>\n */\nimport type { Base } from '../proto/base';\nimport type { DeepPartial } from 'utility-types';\nimport { H5ExtraAttr, networkType, BaseOptions, GlobalAttr } from '@/config/types';\nimport { flattenAssign } from '@/util';\n\nexport type CommonPackageOptions = DeepPartial<Base.CommonPackage>;\nexport type ICommonPackage = typeof CommonPackage;\n\nexport class CommonPackage implements Base.CommonPackage {\n    // 默认值为 undefined 减小上报时字段\n    // 标识信息\n    identity_package: Base.IdentityPackage = {\n        device_id: undefined,\n        global_id: undefined,\n        user_id: undefined,\n        union_id: undefined,\n        open_id: undefined,\n        iu_id: undefined\n    };\n    // 应用信息\n    app_package: Base.AppPackage = {\n        product: undefined,\n        language: undefined,\n        platform: undefined,\n        container: 'H5',\n        package_name: undefined,\n        product_name: undefined,\n        version_name: undefined,\n        channel: undefined,\n        version_code: undefined,\n    };\n    experiment?: any[] = undefined;\n    service_name?: string = undefined;\n    safety_id?: string = undefined;\n    sub_biz?: string = undefined;\n    // 设备信息\n    device_package: Base.DevicePackage = {\n        os_version: undefined,\n        model: undefined,\n        ua: undefined,\n    };\n    need_encrypt: boolean = false;\n    network_package: Base.NetworkPackage = {\n        type: networkType.unknown,\n    };\n    // H5 附加参数\n    h5_extra_attr: H5ExtraAttr = {\n        // SDK 版本信息\n        sdk_name: '__SDK_NAME__',\n        sdk_version: '__VERSION__',\n        sdk_bundle: '__SDK_BUNDLE__',\n    };\n    global_attr: GlobalAttr = {\n        // 染色参数\n        entry_tag: [],\n    };\n    location_package?: Base.LocationPackage = {\n        country: undefined, // 国家\n        province: undefined, // 省份/自治区/州\n        city: undefined, // 城市\n        county: undefined, // 县/区域\n        street: undefined, // 街道\n        latitude: undefined, // 纬度\n        longitude: undefined, // 经度\n    };\n\n    constructor(options: CommonPackageOptions | BaseOptions) {\n        this.update(options);\n        if (this.app_package.version_name) {\n            const lastDotIndex = this.app_package.version_name.lastIndexOf('.');\n            this.app_package.version_code = +this.app_package.version_name.slice(lastDotIndex + 1) || 0;\n        }\n        if (!this.app_package.version_name) {\n            this.app_package.version_name = undefined;\n        }\n        if (!this.app_package.version_code) {\n            this.app_package.version_code = undefined;\n        }\n    }\n\n    getH5ExtraAttr(extraInfo?: {[key: string]: any}) {\n        return Object.assign({}, this.h5_extra_attr, extraInfo);\n    }\n    /**\n     * 更新 commonPackage 信息\n     * @param options\n     * @returns\n     */\n    update(options: CommonPackageOptions | BaseOptions) {\n        if (typeof options !== 'object') return;\n        flattenAssign(this, options);\n        // network type 特殊处理\n        const network = (options as BaseOptions).network_type;\n        if (network && (networkType as any)[network]) {\n            this.network_package.type = (networkType as any)[network];\n        }\n    }\n    /**\n     * 更新 global_attr 信息\n     * @param options\n     */\n    updateGlobalAttr(options: {[key: string]: any}) {\n        Object.assign(this.global_attr || {}, options);\n    }\n    /**\n     * 将 commonPackage 转换为 json 输出\n     * @returns\n     */\n    toJSON() {\n        // 处理 v2 空字符串接口会报错问题\n        if (!this.identity_package.user_id) {\n            this.identity_package.user_id = undefined;\n        }\n        const json: Base.CommonPackage = {\n            ...this,\n            toJSON() {\n                return {\n                    ...json,\n                    h5_extra_attr: JSON.stringify(json.h5_extra_attr),\n                    global_attr: JSON.stringify(json.global_attr),\n                };\n            }\n        };\n        json.global_attr = {...this.global_attr};\n        if (this.global_attr.entry_tag && this.global_attr.entry_tag.length) {\n            json.global_attr.entry_tag = this.global_attr.entry_tag.slice();\n        } else {\n            // 节省上报字段\n            delete json.global_attr.entry_tag;\n        }\n        if (!Object.keys(this.global_attr).length) {\n            // 节省上报字段\n            delete json.global_attr;\n        }\n        const location = this.location_package;\n        if (location) {\n            Object.keys(location).forEach((key) => {\n                if (typeof location[key as keyof Base.LocationPackage] === 'undefined') {\n                    delete location[key as keyof Base.LocationPackage];\n                }\n            });\n        }\n        return json;\n    }\n}\n","/**\n * v2、v3 PB 相同部分\n */\nexport namespace Base {\n    // 设备和用户Id\n    export interface IdentityPackage {\n        device_id?: string;  // 设备Id, 唯一标识一台设备\n        user_id?: string | number;  // 用户Id, 唯一标识一个用户\n        iu_id?: string;  // 数盟sdk获取到的设备Id, 唯一标识一台设备(仅用于安卓)\n        global_id?: string;  // 内部SDK生成的全局唯一id，识别多个app之间的相同设备\n        union_id?: string;  // 各端设备识的备用参数，例如微信小程序端上报微信内部用户的唯一标识\n        open_id?: string;  // 微信小程序open_id，需加解密\n    }\n\n    // 设备基础信息\n    export interface DevicePackage {\n        os_version?: string; // 操作系统版本\n        model?: string; // 机型\n        ua?: string; // user agent\n    }\n    export interface NetworkPackage {\n        type?: number; // 网络类型\n        isp?: string; // 运营商\n        ip?: string; // 外网IP地址\n        ipv6?: string; // ipv6地址\n    }\n\n    // 地理位置信息\n    export interface LocationPackage {\n        country?: string; // 国家\n        province?: string; // 省份/自治区/州\n        city?: string; // 城市\n        county?: string; // 县/区域\n        street?: string; // 街道\n        latitude?: number; // 纬度\n        longitude?: number; // 经度\n    }\n\n    // A/B测试实验\n    export interface Experiment {\n        name: string;  // 实验名称\n        value: string; // 实验分组\n    }\n    // 客户端日志额外的sequenceId，用来验证不同发送通道、不同类型的日志的丢失率等。\n    export interface AdditionalSeqIdPackage {\n        channel: number; // 数据发送通道类型\n        channel_seq_id: number; // 日志对应的发送通道的自增ID\n        custom_type: string; // 自定义类型\n        custom_seq_id: number; // 自定义类型的自增ID\n    }\n\n    // 应用基础信息\n    export interface AppPackage {\n        product?: number; // 产品名称, 不同产品独立进行统计分析(为了灵活接入新app，废弃该参数，新接入app请上报到参数8)\n        platform?: number; // 平台\n        language?: string; // 语言, 例: zh-cn\n        channel?: string; // 用户来源渠道\n        version_name?: string; // 版本名\n        version_code?: number; // 版本号\n        package_name?: string; // 应用包名\n        product_name?: string; // 产品名称(为了避免不同app参数值冲突，新接入app请到埋点平台注册，具体咨询宋萌)\n        hotfix_patch_version?: string; // 热更新的patch版本号, 用于相同版本号但是不同Patch的分析\n        container?: string; // 和platform组合使用。platfrom标识平台，container标识应用运行载体. 取值如下，NATIVE、H5、小程序（MP_WECHAT、MP_ALIPAY、MP_BAIDU）\n    }\n\n    // 所有 Event 都包含的数据\n    export interface CommonPackage {\n        identity_package: IdentityPackage; // 用户和设置Id\n        app_package: AppPackage; // 应用信息\n        device_package: DevicePackage; // 设备基本信息\n        network_package: NetworkPackage; // 网络信息\n        location_package?: LocationPackage; // 地理位置信息\n        experiment?: Experiment[]; // A/B测试实验\n        sdk_version?: string; // logsdk版本号\n        service_name?: string; // 中台服务名称，比如积木、im sdk等，如果业务log未使用中台服务，该字段置空\n        safety_id?: string; // 防盗链id\n        sub_biz?: string; // 多业务场景，同一中台可能存在多业务场景，比如评论sdk有 说说、作品评论等不同场景\n        style_type?: string; // 客户端UI模式，比如滑滑版/极速版/普通版\n        additional_seq_id_package?: AdditionalSeqIdPackage; // 客户端日志额外的sequenceId，用来验证不同发送通道、不同类型的日志的丢失率等。\n        need_encrypt?: boolean; // 标记此条数据是否需要做加密处理\n        global_attr?: {[key: string]: any}; // App内全局参数，json格式. 比如流量运营导流参数. 避免key冲突，key统一由埋点平台维护,最终上报 string\n        h5_extra_attr: {[key: string]: any}; // H5埋点专用扩展参数,json格式.\n    }\n\n    // 页面信息\n    export interface UrlPackage {\n        page: string; // 一级页面。参考埋点需求填写即可\n        params: string; // 参数列表参考埋点需求填写，并转成 json 字符串格式\n        identity: string; // 页面唯一标识，使用UUID即可\n        page_type?: number; // 应用页面类型\n        coPage?: boolean;\n        category?: string;\n    }\n\n    export enum ElementStatus {\n        UNKNOWN_STATUS = 0, // 未知\n        CHECKED = 1, // 选中\n        UNCHECKED = 2, // 未选中\n    }\n\n    // 页面元素详细信息\n    export interface ElementPackage {\n        action?: string;\n        action2?: string;\n        index?: number; // 废弃 元素位置, 从0开始 (备注：element补充参数统一定义到params中)\n        value?: number; // 废弃 元素的值, 用于求和, 求平均等 (备注：element补充参数统一定义到params中)\n        status?: ElementStatus; // 废弃 元素状态 (备注：element补充参数统一定义到params中)\n        params: string; // 参数列表参考埋点需求填写，并转成 json 字符串格式\n    }\n\n    // 页面曝光动作\n    export enum PageShowAction {\n        UNKNOWN_ACTION = 0, // 未知\n        ENTER = 1, // 进入页面\n        LEAVE = 2, // 离开页面\n        RESUME = 3, // 恢复页面, 也可以认为是热加载, 这种情况下不需要重新渲染\n    }\n\n    export enum ActionStatus {\n        UNKNOWN_STATUS = 0, // 未知\n        SUCCESS = 1, // 成功\n        FAIL = 2, // 失败\n    }\n\n    export enum ActionType {\n        UNKNOWN_ACTION_TYPE = 0, // 未知\n        CLICK = 1, // 点击进入或离开页面\n        LEFT_PULL = 2, // 左滑进入或离开页面\n        RIGHT_PULL = 3, // 右滑进入或离开页面\n        UP_PULL = 4, // 上滑进入或者离开页面\n        DOWN_PULL = 5, // 下滑进入或者离开页面\n    }\n\n    export enum SubAction {\n        UNKNOWN_SUB_ACTION = 0, // 未知\n        PAGE_ENTER = 1, // 进入页面\n        PAGE_LEAVE = 2, // 离开页面 退出页面\n        PAGE_RESUME = 3, // 恢复页面, 也可以认为是热加载, 这种情况下不需要重新渲染\n        PAGE_PAUSE = 4, // 页面暂停，用户进入下一级页面，当前页面被覆盖的情况\n    }\n\n    // 操作方向\n    export enum Direction {\n        UNKNOWN2 = 0,\n        UP = 1,\n        DOWN = 2,\n        LEFT = 3,\n        RIGHT = 4,\n    }\n\n    /**\n     * 染色参数\n     *  page_name: 页面标识，\n     *  element_action: 元素标识，\n     *  stid：策略id（格式由小分队提供），\n     *  pos：位置信息1，\n     *  params:{元素参数1}\n     */\n    export interface EntryTagType  {\n        page_name: string,\n        element_action: string,\n        stid?: string,\n        pos?: number,\n        params?: {[prop: string]: any}\n    }\n\n    export interface Event {\n        url_package?: UrlPackage; // 事件发生页面\n        refer_url_package?: UrlPackage; // 事件发生页面的来源页面\n        element_package?: ElementPackage; // 触发事件发生的行为\n        refer_element_package?: ElementPackage; // 触发事件发生的来源元素信息\n    }\n\n    // 曝光事件\n    export interface ShowEvent extends Event {\n        action?: PageShowAction; // 进入或离开\n        type?: number; // 页面类型\n        status?: ActionStatus; // 展现状态, 成功或者失败\n        action_type?: number; // 记录进入或离开页面的方式\n        show_type?: number; // 记录进入或离开页面的方式\n        time_cost?: number; // 页面加载, 刷新或离开时长, 单位: ms\n        stay_length?: number; // 页面停留时长, 单位: ms\n        url_package: UrlPackage; // 页面, 精确到页面级别, 控件级别的展现, 需填充 element_package\n        sub_page?: boolean; // 是否包含子页面，true为包含，false为不包含，所有页面enter事件均上报，统计加载时长数据时使用。\n        first_load?: boolean; // 记录是否是首个加载，true代表是，false代表不是，仅子页面加载事件中上报（非子页面不上报），统计加载时长数据时使用。\n        sub_action?: SubAction; // 页面进入或离开的类型细分\n    }\n\n    export enum TaskStatus {\n        UNKNOWN_STATUS = 0,\n        START = 1, // 开始\n        RETRY = 2, // 重试\n        PAUSE = 3, // 暂停\n        RESUME = 4, // 恢复\n        PENDING = 5, // 等待\n        PROCESSING = 6, // 进行中\n        SUCCESS = 7, // 成功\n        FAIL = 8, // 失败\n        CANCEL = 9, // 取消\n        FINISH = 10, // 完成，比如直播结束的，长链接关闭\n    }\n\n    export enum OperationType {\n        UNKNOWN_OPERATION = 0,\n        CLICK = 1, // 点击\n        DOUBLE_CLICK = 2, // 双击\n        TRIPLE_CLICK = 3, // 三击\n        LONG_PRESS = 4, // 长按\n        PULL = 5, // 滑动\n        DRAG = 6, // 拖拽\n        SCALE = 7, // 双指缩放\n        PULL_DOWN = 8, // 下拉刷新\n        PULL_UP = 9, // 上拉加载更多\n        RIGHT_CLICK = 10, // 鼠标右键点击\n        AUTO = 11, // 自动\n    }\n\n    // 任务事件\n    export interface TaskEvent extends Event {\n        status: TaskStatus // 任务状态\n        session_id?: string; // 任务的 session Id, 确保是全局唯一, 通常使用UUID即可, 连续 Action 相同的 task 保持一样的 session id\n        operation_type?: OperationType; // 用户操作类型\n        operation_direction?: Direction;\n        url_package: UrlPackage; // Task发生页面\n        element_package: ElementPackage; // 触发Task发生的行为\n    }\n\n    // 自定义弱类型事件\n    export interface CustomEvent {\n        key: string; // 自定义事件的key\n        value: string; // 自定义事件的value\n    }\n}\n","import type { Base } from '../base';\n\nexport namespace ClientEvent {\n    // 页面元素详细信息\n    export interface ElementPackage extends Base.ElementPackage {\n        action?: string; // 元素业务类型。参考埋点需求填写即可\n    }\n\n    // 页面信息\n    export interface UrlPackage extends Base.UrlPackage {\n        page: string; // 一级页面。参考埋点需求填写即可\n    }\n\n    // 曝光类型\n    export enum ShowType {\n        UNKNOWN_TYPE = 0, // 未知\n        PAGE_AUTO = 10, // sdk自动采集页面\n        PAGE_CUSTOM = 11, // 自定义页面\n        ELEMENT = 12, // 自定义元素\n    }\n\n    // 曝光事件\n    export interface ShowEvent extends Base.ShowEvent {\n        type?: ShowType;\n        element_package?: ElementPackage;\n        content_package?: string; // 相关内容。具体项目把具体业务要上报的参数转成 json 字符串格式\n    }\n\n    export enum TaskEventType {\n        UNKNOWN_TYPE = 0,\n        USER_OPERATION = 1, // 用户操作\n        STAY_LENGTH_STAT_EVENT = 2, // 非页面级别的停留时长统计事件，比如不同tab的停留时长\n        BACKGROUND_TASK_EVENT = 3, // 记录客户端发起的后台请求任务\n    }\n    // 任务事件\n    export interface TaskEvent extends Base.TaskEvent {\n        type: TaskEventType;\n        content_package?: string; // 相关内容。具体项目把具体业务要上报的参数转成 json 字符串格式\n    }\n\n    export interface CustomEvent {\n        custom_stat_event: Base.CustomEvent;\n    }\n\n    export interface EventPackage {\n        show_event?: ShowEvent;\n        task_event?: TaskEvent;\n        stat_package?: CustomEvent;\n    }\n}\n","import type { Base } from '../base';\n\nexport namespace ClientEvent {\n    // 页面信息\n    export interface UrlPackage extends Base.UrlPackage {\n        page2: string; // 一级页面。参考埋点需求填写即可\n    }\n\n    // 页面元素详细信息\n    export interface ElementPackage extends Base.ElementPackage {\n        action2: string; // 业务类型字符串版本\n    }\n\n    export interface LaunchEvent {\n        cold: boolean;\n        detail: string;\n        mode: number;\n        source: number;\n        target: string;\n    };\n    export interface AppUsageStatEvent {\n        last_url_package: Base.UrlPackage;\n        app_use_duration: number;\n    };\n    export interface DeviceStatEvent {\n        battery: number;\n        density_dpi: number;\n        model: string;\n        os_version: string;\n        screen_height: number;\n        screen_width: number;\n    };\n    export interface ExceptionEvent {\n        type: number;\n        message: string;\n        url_package: Base.UrlPackage;\n    };\n    export interface CustomStatEvent {\n        key: string;\n        value: string;\n    };\n    export interface StatPackage {\n        launch_event?: LaunchEvent;\n        app_usage_stat_event?: AppUsageStatEvent;\n        device_stat_event?: DeviceStatEvent;\n        custom_stat_event?: CustomStatEvent;\n    };\n\n    export enum ShowType {\n        UNKNOWN2 = 0, // 未知\n        PAGE = 1, // 页面\n    }\n\n    // 页面区域信息   页面+区域+元素\n    export interface AreaPackage {\n        name: string; // 区域名称\n        params: string; // 区域补充参数\n    }\n\n    // 曝光事件\n    export interface ShowEvent extends Base.ShowEvent {\n        type?: ShowType;\n        show_type?: number; // 记录进入或离开页面的方式\n        page_show_seq?: number; // 页面展示的Sequence id，每次展示一次页面就加1(页面展示事件才有意义)\n        content_wrapper?: string; // 上报业务相关信息，客户端将content_wrapper转成json上报\n        extra_message?: string; // 用于存放一些点击时候的额外信息，可以是 json, string 分割等，此字段仅限于客户端内部分析使用！\n        area_package?: AreaPackage; // 页面区域信息\n    }\n\n    // 任务事件\n    export interface TaskEvent extends Base.TaskEvent {\n        action2: string;\n        content_package?: any; // 相关内容，TODO: 比较复杂，暂时没写\n        content_wrapper?: string; // 上报业务相关信息，客户端将content_wrapper转成json上报\n    }\n\n    export interface ClickEvent extends Base.Event {\n        type: number; // 点击类型\n        direction: Base.Direction; // Action={PULL, DRAG}时有意义\n        url_package: Base.UrlPackage; // 页面\n        element_package: Base.ElementPackage; // 所操作的元素信息\n        content_package?: any; // 相关内容，TODO: 比较复杂，暂时没写\n        extra_message?: any; // 用于存放一些点击时候的额外信息，可以是 json, string 分割等，此字段仅限于客户端内部分析使用！\n        content_wrapper?: string; // 上报业务相关信息，客户端将content_wrapper转成json上报\n        area_package?: AreaPackage; // 页面区域信息\n    }\n\n    export interface CustomEvent extends Base.CustomEvent {\n\n    }\n\n    export interface EventPackage {\n        show_event?: ShowEvent;\n        click_event?: ClickEvent;\n        task_event?: TaskEvent;\n        custom_event?: CustomEvent;\n    }\n\n    export interface VideoStatEvent extends Base.Event {\n        video_stat_event: {\n            // 视频总时长\n            duration?: number;\n            // 播放时长\n            played_duration?: number;\n            // 是否已经下载\n            downloaded?: boolean;\n            //  从进入页面到开始播放准备的时长 单位ms\n            prepare_duration?: number;\n            // 进入视频播放详情页页面的时间戳 ms\n            enter_time?: number;\n            // 离开视频播放页面的时间戳\n            leave_time?: number;\n            // 视频的类型\n            video_type?: string;\n            // 播放的时候的类型, 由于有些机型不支持 H265，或者做 A/B test 的时候视频类型和播放类型不一致.\n            play_video_type?: string;\n            // 作品ID 废弃\n            photo_id?: number;\n            // 用户离开播放页面的方式\n            leave_action?: string;\n            // 视频播放的平均fps\n            average_fps?: number;\n            // 媒体类型：短视频、图片、图集等\n            media_type?: string;\n            // 作品ID\n            s_photo_id?: number;\n            // 记录当前页面及extra参数信息\n            url_package?: Base.UrlPackage;\n            // 记录来源页面相关参数，包括来源页面、exptag、llsid等\n            refer_url_package?: Base.UrlPackage;\n            // 播放器基本状态信息，用json串上报\n            video_qos_json?: string;\n            // 从点击feed到渲染第一帧总时长\n            click_to_first_frame_duration?: number;\n            // 信号强度，单位为dbm，wifi/4g/3g/2g下均需上报\n            rssi?: number;\n            // 用户进入播放器页面的方式\n            enter_player_action?: string;\n            // 用于记录该Event的其他附属字段，可以是普通字符串或json字段\n            summary?: string;\n            // 芯片名字\n            board_platform?: string;\n            // 用户观看视频前是否收藏\n            collect_before_status?: string;\n            // 用户观看视频后是否收藏\n            collect_after_status?: string;\n            session_uuid?: string;\n            // android soc的名字，比如Kirin 960\n            soc_name?: string;\n        };\n    }\n}\n","import type { v3Env } from '@/config/types';\nimport env = Tachikoma.env;\n\nexport const dataTrackHost = 'https://data-track.corp.kuaishou.com';\nexport const overseaDataTrackHost = 'https://data-track-sgp.corp.kuaishou.com';\nconst testHost = dataTrackHost + '/';\n\nexport const PROD = 'production';\nconst TEST = 'test';\nconst DEV = 'development';\nconst OVERSEA = 'oversea';\nexport const LOGGER = 'logger';\nexport const LOGGER_SGP = 'logger-oversea';\n\nconst v3Api = 'rest/wd/common/log/collect/';\nexport const Envs = [PROD, TEST, DEV, LOGGER, OVERSEA];\nconst overseaHost = 'https://logsdk.kwai-pro.com/';\nexport const Apis = {\n    // v2 接口一定要带上 _json=1 参数，不然服务端会解析失败\n    v2: `rest/kd/log/collect?_json=1&biz=`,\n    v3: `${v3Api}misc2`,\n    // 雷达都上报到 v3\n    radar: `${v3Api}radar`\n};\n\nexport const Hosts = {\n    v2: {\n        // 正式环境随机域名分流\n        production: ['https://wlog.ksapisrv.com/', 'https://wlog.gifshow.com/'][Math.round(Math.random())],\n        development: testHost,\n        test: testHost,\n        oversea: overseaHost\n    },\n    v3: {\n        production: 'https://log-sdk.ksapisrv.com/',\n        development: testHost,\n        test: testHost,\n        oversea: overseaHost\n    }\n};\n\nexport const NodeHosts = {\n    v2: {\n        // 正式环境随机域名分流\n        production: ['https://wlog.ksapisrv.com/', 'https://wlog.gifshow.com/'][Math.round(Math.random())],\n        development: testHost,\n        test: testHost,\n        oversea: overseaHost\n    },\n    v3: {\n        production: 'https://log-sdk-internal.corp.kuaishou.com/',\n        development: testHost,\n        test: testHost,\n        oversea: overseaHost\n    }\n}\n\nexport const buildUrl = (\n    env: string = PROD,\n    radar = false,\n    proto: 'v2' | 'v3' = 'v3',\n) => {\n    if (Envs.indexOf(env) === -1) {\n        return env + Apis[proto];\n    }\n    if (radar && Hosts.v3[env as v3Env]) {\n        return Hosts.v3[env as v3Env] + Apis.radar;\n    }\n    if (Hosts[proto][env as v3Env] && Apis[proto]) {\n        return Hosts[proto][env as v3Env] + Apis[proto];\n    }\n    return Hosts.v3.production + Apis.v3;\n};\n\nexport const nodeBuildUrl = (\n    env: string = PROD,\n    radar = false,\n    proto: 'v2' | 'v3' = 'v3',\n) => {\n    if (Envs.indexOf(env) === -1) {\n        return env + Apis[proto];\n    }\n    if (radar && NodeHosts.v3[env as v3Env]) {\n        return NodeHosts.v3[env as v3Env] + Apis.radar;\n    }\n    if (NodeHosts[proto][env as v3Env] && Apis[proto]) {\n        return NodeHosts[proto][env as v3Env] + Apis[proto];\n    }\n    return NodeHosts.v3.production + Apis.v3;\n}\n\nexport const formatUrlQuery = (url: string, querys: string) => {\n    if (!querys) return url;\n    let reg = /\\?(.+?)$/;\n    try {\n        return reg.test(url) ? url.replace(/\\?(.+?)$/, `?${querys}&$1`) : url + `?${querys}`;\n    } catch (err) {\n        return url;\n    }\n};\n","import type { ClientLog as ClientLogV3 } from '../proto/v3/client_log';\nimport type { ClientLog as ClientLogV2} from '../proto/v2/client_log';\nimport type { CommonPackage } from './common';\nimport type { CommonConfig } from '@/types/configuration';\nimport type { SendCallback, LoggerSender } from '@/config/types';\nimport { buildUrl, formatUrlQuery, Apis, Hosts } from '@/config/apis';\n\nexport type LogPackage = (ClientLogV3.ReportPackage | ClientLogV2.ReportPackage) & { seqid?: number };\nexport type ReportEvent = ClientLogV3.ReportEvent | ClientLogV2.ReportEvent;\n\nexport class BatchLog {\n    // 立即发送队列\n    asyncQueue: ReportEvent[] = [];\n    // 存储待发送的消息\n    throttleQueue: ReportEvent[] = [];\n    // 存储失败或者超时的数据\n    errorQueue: LogPackage[] = [];\n    sendingQueue: {[key: string]: LogPackage} = {};\n    // 延迟发送定时器\n    protected batchWaitTimer: any;\n    // 延时补报日志定时器\n    private compensateTimer: any;\n    commonPackage: CommonPackage;\n    config!: CommonConfig;\n    url: string = '';\n    isV2 = false;\n    isDebug = false;\n    radarUrl: string = '';\n    drained: boolean = false; // 是否未排干日志队列\n    baseSendData!: LoggerSender;\n    batchCount: number = 50;\n    isSetSamplingResult = false;\n    // 有值时阻塞日志发送\n    sendingYield?: Promise<any> | null = null;\n    constructor(config: any, commonPackage: CommonPackage) {\n        this.config = config;\n        if (this.config.maxBatchLength && this.config.maxBatchLength > 1) {\n            this.batchCount = Math.min(50, this.config.maxBatchLength);\n        }\n        this.commonPackage = commonPackage;\n        this.isDebug = this.config.logger || this.config.env === 'logger';\n        this.isV2 = this.config.proto === 'v2';\n        this.updateUrls();\n    }\n    sendData(data: {url: string, data: any, [key: string]: any}, callback?: SendCallback) {\n        if (typeof this.config.sender === 'function') {\n            return this.config.sender(data, callback);\n        }\n        return this.baseSendData(data, callback);\n    }\n    get responseSamplingStorageKey() {\n        const { product_name, product } = this.commonPackage.app_package;\n        const { device_id } = this.commonPackage.identity_package;\n        // tslint:disable-next-line:max-line-length\n        return `RESPONSE_SAMPLING_STORAGE_KEY_${product_name || product}_${device_id}`;\n    }\n\n    /**\n     * 根据配置生成上报的 url 地址\n     */\n    updateUrls() {\n        const { env } = this.config;\n        // 线上地址 -> 抓包查找工具后端，用以测试后端\n        // 兼容方式：若小程序里有扫码工具，扫码后直接进行切换\n        if (env && /^(https?:)?\\/\\//.test(env)) {\n            this.url = env;\n        } else {\n            this.url = buildUrl(env);\n        }\n        this.formatUrl();\n    }\n\n    formatUrl() {\n        if (!this.radarUrl) {\n            this.radarUrl = this.url.replace(this.url.indexOf(Apis.v2) !== -1 ? Apis.v2 : Apis.v3, Apis.radar);\n            // v2 域名不能上报雷达事件\n            if (this.radarUrl.indexOf(Hosts.v2.production || '') !== -1) {\n                this.radarUrl.replace(Hosts.v2.production || '', Hosts.v3.production);\n            }\n        }\n        const { product_name, product } = this.commonPackage.app_package;\n        const querys = `v=__VERSION__&kpn=${product_name || product}`;\n        this.url = formatUrlQuery(this.url, querys);\n        this.radarUrl = formatUrlQuery(this.radarUrl, querys);\n    }\n    /**\n     * 之所以使用 JSON 而不是 commonPackage 对象，是因为对象可能会变化，而 JSON 则是当时的一个快照，一旦生成不会变化\n     */\n    getCommonPackageJSON() {\n        return this.commonPackage.toJSON();\n    }\n    /**\n     * 进入发送流程\n     * @param data\n     * @param immediate\n     * @param callback 用户自定义 callback\n     * @returns\n     */\n    send(data: ReportEvent, immediate = false, callback?: SendCallback) {\n        // 有回调的立即上报\n        if (callback || this.drained) {\n            return this.sendLogs([data], callback);\n        }\n        if (immediate) {\n            this.sendAsync(data, callback);\n            return;\n        }\n        this.sendThrottle(data);\n    }\n    /**\n     * 短时异步上报\n     */\n    async sendAsync(data: ReportEvent, callback?: SendCallback) {\n        this.asyncQueue.push(data);\n        if (this.asyncQueue.length >= this.batchCount) {\n            this.flush();\n            return;\n        }\n        // 用一个微任务包裹，减少同时触发的 sendImmediately 对性能影响，TODO：丢失率影响\n        if (this.sendingYield) {\n            await this.sendingYield;\n            this.sendingYield = null;\n        }\n        try {\n            await Promise.resolve();\n        } catch (err) {}\n        if (!this.asyncQueue.length) return;\n        this.flush();\n    }\n    /**\n     * 节流上报\n     */\n    sendThrottle(data: ReportEvent) {\n        this.throttleQueue.push(data);\n        // 积攒超过最大\n        if (this.throttleQueue.length >= this.batchCount) {\n            this.flush();\n            return;\n        }\n\n        // debounce逻辑\n        clearTimeout(this.batchWaitTimer);\n        this.batchWaitTimer = setTimeout(() => {\n            this.flush();\n        }, this.config.wait);\n    }\n    /**\n     * 批量发送日志\n     * @param logs\n     * @param callback 用户自定义 callback\n     */\n    sendLogs(logs: ReportEvent[], callback?: SendCallback): void | Boolean {\n        if (!logs || !logs.length) {\n            return typeof callback === 'function' && callback();\n        }\n        const data: LogPackage = this.buildLogPackage(logs, this.url);\n        // 网络发送错误回调\n        const callbackFn = (error?: any) => {\n            // 如果网络异常，日志发送失败，则将错误日志缓存，在网络恢复时清空一次错误队列\n            if (error) {\n                this.errHandler(data);\n            } else {\n                this.flushErrorLogs();\n            }\n            typeof callback === 'function' && callback(error);\n        }\n        this.sendPackage(data, callbackFn);\n    }\n    /**\n     * 将日志包通过接口发送\n     * @param data\n     * @param callback\n     */\n    sendPackage(data: LogPackage, callback?: SendCallback) {\n        const { timeout } = this.config;\n        try {\n            // 如果业务方配置了 sender\n            this.sendData({\n                ...data,\n                isDebug: this.isDebug,\n                isDrained: this.drained,\n                timeout\n            }, callback);\n        } catch (err) {\n            typeof callback === 'function' && callback(err);\n        }\n    }\n\n    /**\n     * 每个 logPackage 包含了所有上报所需的信息，上报地址和上报数据\n     * @param logs\n     * @param url\n     */\n    buildLogPackage(logs: ReportEvent[], url: string) {\n        if (this.isV2) {\n            return this.buildV2Package(logs as ClientLogV2.ReportEvent[], url);\n        }\n        return this.buildV3Package(logs as ClientLogV3.ReportEvent[], url);\n    }\n    buildV2Package(logs: ClientLogV2.ReportEvent[], url: string): ClientLogV2.ReportPackage {\n        return {\n            url,\n            data: {\n                log: {\n                    event: logs\n                }\n            }\n        }\n    }\n    buildV3Package(logs: ClientLogV3.ReportEvent[], url: string, commonPackageOptions?: {[key: string]: any}): ClientLogV3.ReportPackage {\n        const common = this.getCommonPackageJSON();\n        commonPackageOptions && Object.assign(common, commonPackageOptions);\n        return {\n            url,\n            data: {\n                common,\n                logs\n            }\n        }\n    }\n    /**\n     * 清空当前日志队列\n     * @param callback\n     */\n    flush = (callback?: SendCallback) => {\n        this.sendLogs(this.throttleQueue.concat(this.asyncQueue), callback);\n        this.throttleQueue = [];\n        this.asyncQueue = [];\n    }\n    /**\n     * 页面关闭前排干所有未发送的和发送失败的日志\n     */\n    drain = () => {\n        this.drained = true;\n        this.flush();\n        this.flushErrorLogs();\n        // 处理 beforunload 中断，实际页面未退出的情况\n        setTimeout(() => {\n            this.drained = false;\n        }, 1000);\n    }\n\n    /**\n     * 日志上报出错处理，一般为网络异常\n     * @param logPackage\n     */\n    errHandler(logPackage: LogPackage) {\n        if (this.isV2) {\n            this.errorQueue.unshift(logPackage);\n            return;\n        }\n        const { data } = logPackage as ClientLogV3.ReportPackage;\n        if (!data.logs.length) return;\n        // http_seq_id 和 client_timestamp 不是必须的，合并时删除\n        delete data.common.h5_extra_attr.http_seq_id;\n        delete data.common.h5_extra_attr.client_timestamp;\n\n        // 尝试合并相同 url 和 common 的请求\n        let merged = false;\n        for (let i = 0; i < this.errorQueue.length; i++) {\n            const currentLog = this.errorQueue[i]  as ClientLogV3.ReportPackage;\n            if (\n                currentLog.url === logPackage.url &&\n                currentLog.data.logs.length + data.logs.length <= 100 &&\n                JSON.stringify(currentLog.data.common) === JSON.stringify(data.common)\n            ) {\n                merged = true;\n                currentLog.data.logs.push(...data.logs);\n                break;\n            }\n        }\n        if (!merged) {\n            // 先进后出\n            // 最大错误数量限制为 5\n            if (this.errorQueue.length >= 5) {\n                this.errorQueue.pop();\n            }\n            this.errorQueue.unshift(logPackage);\n        }\n    }\n\n    // 当网络恢复时尝试一次上报\n    flushErrorLogs() {\n        this.errorQueue.forEach(logPackage => {\n            this.sendPackage(logPackage);\n        });\n        this.errorQueue = [];\n    }\n\n    destory() {\n        this.batchWaitTimer && clearTimeout(this.batchWaitTimer);\n        this.compensateTimer && clearTimeout(this.compensateTimer);\n    }\n    /**\n     * 雷达专用上报（雷达上报接口和其他事件上报接口做了区分，用于分流统计）\n     * @param radar\n     */\n    sendRadar(radar: ClientLogV3.ReportEvent, service_name?: string) {\n        const options = service_name ? { service_name } : undefined;\n        const radarPackage = this.buildV3Package([radar], this.radarUrl || this.url, options);\n        this.sendPackage(radarPackage);\n    }\n}\n","import { dataTrackHost } from '@/config/apis';\nimport { log } from '@/util/console';\nexport const getReportUrl = (viewHost: string = dataTrackHost, reportHost: string, sessionId: string) => {\n    const loggerUrl = `${viewHost}/#/logger/index?sessionId=${sessionId}`;\n    log(`%c埋点抓包校验: %c${loggerUrl}`, 'color:#1abf89;font-size:1.2em;line-height:2.4em;', 'font-size:1.2em;');\n    return `${reportHost}/${sessionId}/`;\n};","import type { v3Env, LoggerSender } from '@/config/types';\nimport type { CommonPackage } from '@/core/common';\n\nimport { BatchLog as BaseLogger} from '@/core/logger';\nimport { dataTrackHost, buildUrl } from '@/config/apis';\nimport { getReportUrl } from '@/util/test';\nimport { warn } from '@/util/console';\n/**\n * env 为 logger 时上报的 url\n */\nconst getLoggerReportUrl = (did: string = 'krnlogger') => {\n    return getReportUrl(dataTrackHost, `${dataTrackHost}/rest`, did);\n};\nexport default class Logger extends BaseLogger {\n    override radarUrl: string = '';\n    override baseSendData: LoggerSender = () => { warn('请设置 sender 方法，否则埋点无法上报！') };\n    constructor(config: any, commonPackage: CommonPackage) {\n        super(config, commonPackage);\n    }\n    /**\n     * 根据配置生成上报的 url 地址\n     */\n    override updateUrls() {\n        const { env, logger } = this.config;\n        if (logger || env === 'logger') {\n            const loggerEnv = getLoggerReportUrl(this.commonPackage.identity_package.device_id);\n            this.url = buildUrl(loggerEnv);\n        } else if (env && /^(https?:)?\\/\\//.test(env)) {\n            this.url = env;\n        } else {\n            this.url = buildUrl(env as v3Env);\n            this.radarUrl = buildUrl(env as v3Env, true);\n        }\n        this.formatUrl();\n    }\n}","import type { ShowEventOptions } from '../config/types';\n\nimport { Base } from '../proto/base';\nimport { ClientEvent as ClientEventV3 } from '../proto/v3/client_event';\nimport { ClientEvent as ClientEventV2} from '../proto/v2/client_event';\nimport { getPositiveInteger } from '@/util';\n\n// TODO: 这两个变量有副作用，待优化\nlet firstLoad: boolean | undefined = true;\nlet enterTime: number = new Date().valueOf();\nexport default (options: ShowEventOptions, isV2: boolean = false): ClientEventV3.EventPackage | ClientEventV2.EventPackage => {\n    const {\n        type,\n        currentUrlPackage,\n        referUrlPackage,\n        name = '',\n        action,\n        beginTime,\n        params,\n        contentPackage,\n        status,\n        actionType, // 这值目前似乎没传进来\n        auto\n    } = options;\n    const commonInfo = {\n        status: status ? (Base.ActionStatus[status] || Base.ActionStatus.UNKNOWN_STATUS) : Base.ActionStatus.SUCCESS,\n        [isV2 ? 'show_type' : 'action_type']: actionType ? (Base.ActionType[actionType] || Base.ActionType.UNKNOWN_ACTION_TYPE) : Base.ActionType.CLICK,\n        url_package: currentUrlPackage,\n        refer_url_package: referUrlPackage,\n        [isV2 ? 'content_wrapper' : 'content_package']: contentPackage,\n    };\n    if (type === 'PV') {\n        let sub_action = Base.SubAction.PAGE_ENTER;\n        let actionPB = Base.PageShowAction.ENTER;\n        let first_load = firstLoad;\n        let stay_length = 0;\n        firstLoad = false;\n        switch (action) {\n            case 'leave':\n                actionPB = Base.PageShowAction.LEAVE;\n                sub_action = Base.SubAction.PAGE_LEAVE;\n                stay_length = getPositiveInteger(new Date().valueOf() - (beginTime || enterTime));\n                break;\n            case 'enter':\n                actionPB = Base.PageShowAction.ENTER;\n                sub_action = Base.SubAction.PAGE_ENTER;\n                enterTime = new Date().valueOf();\n                break;\n            case 'visible':\n                actionPB = Base.PageShowAction.RESUME;\n                sub_action = Base.SubAction.PAGE_RESUME;\n                enterTime = new Date().valueOf();\n                break;\n            case 'hidden':\n                actionPB = Base.PageShowAction.LEAVE;\n                sub_action = Base.SubAction.PAGE_PAUSE;\n                stay_length = getPositiveInteger(new Date().valueOf() - (beginTime || enterTime));\n                break;\n        }\n        let showType: ClientEventV3.ShowType | ClientEventV2.ShowType = auto ? ClientEventV3.ShowType.PAGE_AUTO : ClientEventV3.ShowType.PAGE_CUSTOM;\n        if (isV2) {\n            first_load = undefined;\n            showType = ClientEventV2.ShowType.PAGE;\n        }\n        return {\n            show_event: {\n                action: actionPB,\n                sub_action,\n                type: showType,\n                first_load,\n                time_cost: 0,\n                stay_length,\n                ...commonInfo\n            }\n        } as ClientEventV3.EventPackage | ClientEventV2.EventPackage\n    }\n    return {\n        show_event: {\n            action: isV2 ? 0 : Base.PageShowAction.ENTER,\n            type: isV2 ? 0 : ClientEventV3.ShowType.ELEMENT,\n            sub_action: isV2 ? 0 : Base.SubAction.PAGE_ENTER,\n            element_package: {\n                [isV2 ? 'action2': 'action']: name,\n                params: JSON.stringify(params),\n            },\n            ...commonInfo\n        }\n    }\n}\n","import type { ClientEvent as ClientEventV3 } from '../proto/v3/client_event';\nimport type { ClientEvent as ClientEventV2 } from '../proto/v2/client_event';\nimport type {\n    OtherEventOptions,\n    ShowEventProps,\n    TaskOperations,\n    TaskEventOptions,\n} from '@/config/types';\nimport type { DeepPartial } from 'utility-types';\n\nimport ShowEvent from './show-event';\nimport TaskEvent from './task-event';\nimport CustomStatEvent from './custom-stat-event';\nimport VideoStatEvent from './video-stat-event';\nimport { leftPad, getPositiveInteger } from '@/util';\nimport { getCustomIncrementId, getNomalIncrementId } from '@/util/increment-id';\nimport Global from '../config/global';\n\nconst GMT = (() => {\n    const timeZoneGMTOffset = (new Date()).getTimezoneOffset() / 60;\n    return timeZoneGMTOffset <= 0\n        ? `GMT+${leftPad(-timeZoneGMTOffset + '', 2, '0')}:00`\n        : `GMT-${leftPad(timeZoneGMTOffset + '', 2, '0')}:00`;\n})();\n\n// 为防止每个传出都带common_package，所以用base保留大多数信息\n// 部分信息放到每个消息体内维护，比如client_timestamp\nexport class ReportEvent {\n    // uint64 客户端时间, Event或Stat发生时的时间, 而不是上传时的时间\n    client_timestamp = getPositiveInteger(new Date().valueOf());\n\n    // uint64 客户端自增Id, 每新增一条日志+1, 必须是连续的, 用于校检数据完整性\n    client_increment_id = 0;\n\n    // string 会话id，设备冷启动或者切到后台超过5分钟再切回前台时，重新生成一个id\n    // 端内页面不可缺省\n    // Tip: 小程序的global字段不一致\n    session_id = Global.sessionId;\n    time_zone?: string;\n    event_package?: ClientEventV3.EventPackage | ClientEventV2.EventPackage;\n    stat_package?: ClientEventV3.CustomEvent | ClientEventV2.VideoStatEvent;\n    // 埋点唯一主键， PB 中已不推荐使用\n    event_id = '';\n    constructor(options: DeepPartial<ReportEvent>, isV2: boolean = false) {\n        // v2 没有 time_zone 字段\n        if (!isV2) {\n            this.time_zone = GMT;\n        }\n        Object.assign(this, options);\n        this.genIncrementId();\n    }\n    // 设置自增 id，自定义事件和常规事件使用不同的 localStorage key\n    genIncrementId() {\n        this.client_increment_id = this.isCustomStatEvent() ? getCustomIncrementId() : getNomalIncrementId();\n    }\n    // 是否是自定义事件\n    isCustomStatEvent() {\n        return !!(this.stat_package && 'custom_stat_event' in this.stat_package);\n    }\n    // 获取埋点事件类型\n    getEventType() {\n        if (this.event_package) {\n            const {\n                task_event,\n                show_event,\n                click_event,\n                custom_event,\n            } = this.event_package as ClientEventV2.EventPackage;\n            if (show_event) return 'showEvent';\n            if (click_event) return 'clickEvent';\n            if (task_event) return 'taskEvent';\n            if (custom_event) return 'customEvent';\n        }\n        return 'customEvent';\n    }\n}\n// 微信小程序事件处理\nconst StatEvent = (eventOptions: any) => {\n    const { currentUrlPackage, referUrlPackage, taskType, ...event } = eventOptions;\n    return event;\n}\n\nexport function logFactory(type: string, data: ShowEventProps | OtherEventOptions, isV2: boolean = false) {\n    const { eventId: event_id, currentUrlPackage, referUrlPackage, contentPackage, name, params } = data;\n    if (isV2 && type !== 'RADAR' && type !== 'CUSTOM') {\n        // v2 需要特殊处理，先保留 ts-ignore\n        if (currentUrlPackage) {\n            // @ts-ignore\n            currentUrlPackage.page2 = currentUrlPackage.page;\n            // @ts-ignore\n            delete currentUrlPackage.page;\n        }\n        if (referUrlPackage) {\n            // @ts-ignore\n            referUrlPackage.page2 = referUrlPackage.page;\n            // @ts-ignore\n            delete referUrlPackage.page;\n        }\n    }\n    switch (type) {\n        case 'PV':\n        case 'SHOW':\n            return new ReportEvent({\n                event_package: ShowEvent({\n                    type,\n                    status: (data as ShowEventProps).status,\n                    currentUrlPackage,\n                    referUrlPackage,\n                    action: (data as ShowEventProps).type,\n                    beginTime: (data as ShowEventProps).beginTime,\n                    actionType: (data as ShowEventProps).actionType,\n                    name,\n                    params,\n                    contentPackage,\n                    operationDirection: data.operationDirection,\n                    auto: (data as ShowEventProps).auto,\n                }, isV2),\n                event_id,\n            }, isV2);\n        case 'CUSTOM':\n        case 'CUSTOM_STAT_EVENT':\n            const customData = CustomStatEvent({\n                name,\n                params,\n                currentUrlPackage,\n                referUrlPackage,\n            });\n            return new ReportEvent(isV2 ?\n                {\n                    event_package: {\n                        custom_event: customData,\n                    },\n                    event_id,\n                }\n                :\n                {\n                    stat_package: {\n                        custom_stat_event: customData,\n                    },\n                    event_id,\n                }, isV2);\n        case 'RADAR':\n            return new ReportEvent({\n                stat_package: {\n                    custom_stat_event: CustomStatEvent({\n                        name,\n                        params,\n                        currentUrlPackage,\n                        referUrlPackage,\n                    }),\n                },\n                event_id,\n            }, isV2);\n        // 小程序自定义的事件名称\n        case 'HEART_BEAT_EVENT':\n        case 'LAUNCH_EVENT':\n        case 'APP_USAGE_STAT_EVENT':\n        case 'EXCEPTION_EVENT':\n        case 'DEVICE_STAT_EVENT':\n            return new ReportEvent({\n                stat_package: {\n                    [type.toLowerCase()]: StatEvent(data)\n                },\n            }, isV2);\n        case 'VIDEO':\n            if (isV2) {\n                return new ReportEvent({\n                    stat_package: VideoStatEvent({\n                        currentUrlPackage,\n                        referUrlPackage,\n                        options: params.params,\n                    }),\n                    event_id,\n                }, isV2);\n            }\n            return new ReportEvent({\n                event_package: TaskEvent({\n                    type: type as TaskOperations,\n                    status: (data as TaskEventOptions).status,\n                    taskType: (data as TaskEventOptions).taskType,\n                    sessionId: Global.sessionId,\n                    currentUrlPackage,\n                    referUrlPackage,\n                    name,\n                    params: params.params,\n                    contentPackage,\n                }, isV2),\n                event_id,\n            }, isV2);\n        default:\n            return new ReportEvent({\n                event_package: TaskEvent({\n                    type: type as TaskOperations,\n                    status: (data as TaskEventOptions).status,\n                    taskType: (data as TaskEventOptions).taskType,\n                    sessionId: Global.sessionId,\n                    currentUrlPackage,\n                    referUrlPackage,\n                    name,\n                    params,\n                    contentPackage,\n                }, isV2),\n                event_id,\n            }, isV2);\n    }\n}\n","import type { ClientEvent as ClientEventV2 } from '../proto/v2/client_event';\nimport type { TaskEventOptions } from '../config/types';\n\nimport { Base } from '../proto/base';\nimport { ClientEvent as ClientEventV3 } from '../proto/v3/client_event';\n\nexport default (options: TaskEventOptions, isV2: boolean = false): ClientEventV3.EventPackage | ClientEventV2.EventPackage => {\n    const {\n        sessionId,\n        currentUrlPackage,\n        referUrlPackage,\n        name,\n        params,\n        type,\n        contentPackage,\n        status,\n        taskType,\n        operationDirection,\n    } = options;\n    const commonInfo = {\n        url_package: currentUrlPackage,\n        refer_url_package: referUrlPackage,\n        element_package: {\n            [isV2 ? 'action2': 'action']: name,\n            params: JSON.stringify(params),\n        },\n        [isV2 ? 'content_wrapper' : 'content_package']: contentPackage\n    }\n    if (isV2) {\n        // v2 click_event 是一个单独的事件类型，v3 则属于 task_event\n        const isV2Click = taskType === 'USER_OPERATION' || type === 'CLICK' && !taskType;\n        const operationType = type && Base.OperationType[type as keyof typeof Base.OperationType] || Base.OperationType.CLICK;\n        if (isV2Click) {\n            return {\n                click_event: {\n                    type: operationType,\n                    direction: operationDirection && Base.Direction[operationDirection] || Base.Direction.UNKNOWN2,\n                    ...commonInfo,\n                }\n            }\n        }\n        return {\n            task_event: {\n                action2: name,\n                status: status && Base.TaskStatus[status] || Base.TaskStatus.UNKNOWN_STATUS,\n                ...commonInfo,\n            }\n        }\n    }\n    return {\n        task_event: {\n            type: taskType && ClientEventV3.TaskEventType[taskType as keyof typeof ClientEventV3.TaskEventType] || ClientEventV3.TaskEventType.USER_OPERATION,\n            status: status && Base.TaskStatus[status] || Base.TaskStatus.UNKNOWN_STATUS,\n            operation_type: Base.OperationType[type] || Base.OperationType.CLICK,\n            operation_direction: operationDirection && Base.Direction[operationDirection] || Base.Direction.UNKNOWN2,\n            session_id: sessionId,\n            ...commonInfo\n        }\n    }\n}","import type { Base } from '../proto/base';\nimport type { CustomStatEventOptions } from '../config/types';\n\n/**\n * 自定义事件上报\n */\nexport default (options: CustomStatEventOptions): Base.CustomEvent => {\n    const { name, params, currentUrlPackage, referUrlPackage, ...extra } = options;\n    return {\n        key: name,\n        value: JSON.stringify({\n            url_package: currentUrlPackage,\n            refer_url_package: referUrlPackage,\n            ...params,\n            ...extra,\n        })\n    };\n}\n","import type { ClientEvent } from '@/proto/v2/client_event';\nimport type { Base } from '@/proto/base';\nimport type { VideoEventOptionsParams } from '@/config/types';\n\ninterface Params {\n    currentUrlPackage: Base.UrlPackage;\n    referUrlPackage: Base.UrlPackage | undefined;\n    options: VideoEventOptionsParams;\n}\n\nexport default (params: Params): ClientEvent.VideoStatEvent => {\n    const { currentUrlPackage, referUrlPackage, options } = params;\n    return {\n        video_stat_event: {\n            ...options,\n            url_package: currentUrlPackage,\n            refer_url_package: referUrlPackage,\n        },\n    };\n}\n","import { getLocalStorageItem, setLocalStorageItem } from '../util';\n// 常规业务事件自增 id key\nconst LOCAL_INCREAMENT_ID_KEY = 'WEBLOGGER_INCREAMENT_ID_KEY';\n// 自定义事件自增 id key\nconst LOCAL_CUSTOM_INCREAMENT_ID_KEY = 'WEBLOGGER_CUSTOM_INCREAMENT_ID_KEY';\n// Bridge 常规事件自增 id 本地缓存 key\nconst H5_SEQ_ID_KEY = 'WEBLOGGER_H5_SEQ_ID';\n// Bridge 自定义事件自增 id 本地缓存 key\nconst H5_CUSTOM_SEQ_ID_KEY = 'WEBLOGGER_H5_CUSTOM_SEQ_ID';\n// http 请求自增 id 本地缓存 key\nconst LOCAL_HTTP_INCREMENT_ID_KEY = 'WEBLOGGER_HTTP_SEQ_ID';\n// v2 自增 id 本地缓存 key\nconst V2_INCREMENT_ID_KEY = 'WEBLOGGER_V2_SEQ_ID';\nconst CHANNEL_INCREMENT_ID_KEY = 'WEBLOGGER_CHANNEL_SEQ_ID';\n// 自增 id 最大值\nconst maxId = 1e8;\n// 如果没有 localStorage 则使用运行时自增 id，用于非浏览器场景，比如 React Native\nconst runtimeIdMap:{[key: string]: number} = {};\nconst genId = (key: string) => {\n    try {\n        if (window && window.localStorage && typeof Storage !== 'undefined' && window.localStorage instanceof Storage) {\n            let id = Number(getLocalStorageItem(key)) || 0;\n            if (id + 1 > maxId) {\n                id = 0;\n            }\n            setLocalStorageItem(key, id + 1);\n            return id;\n        }\n    } catch (err) {};\n    if (!runtimeIdMap[key]) {\n        runtimeIdMap[key] = 0;\n    }\n    return runtimeIdMap[key] ++;\n}\n/**\n * 常规事件自增 id\n */\nexport const getNomalIncrementId = () => {\n    return genId(LOCAL_INCREAMENT_ID_KEY);\n};\n/**\n * 自定义事件自增 id\n */\nexport const getCustomIncrementId = () => {\n    return genId(LOCAL_CUSTOM_INCREAMENT_ID_KEY);\n};\n/**\n * 桥接常规事件自增 id\n */\nexport const getBridgeNormalIncrementId = () => {\n    return genId(H5_SEQ_ID_KEY);\n};\n/**\n * 桥接自定义事件自增 id\n */\nexport const getBridgeCustomIncrementId = () => {\n    return genId(H5_CUSTOM_SEQ_ID_KEY);\n};\n/**\n * http 请求自增 id\n */\nexport const getHttpIncrementId = () => {\n    return genId(LOCAL_HTTP_INCREMENT_ID_KEY);\n};\n/**\n * v2 channel 自增 id\n */\nexport const getChannelIncrementId = (channel: string = '') => {\n    return genId(`${CHANNEL_INCREMENT_ID_KEY}_${channel}`);\n};\n/**\n * v2 事件自增 id\n */\nexport const getV2EventIncrementId = (event: string) => {\n    return genId(`${V2_INCREMENT_ID_KEY}_${event}`);\n};","import type {\n    EventType as IEventType,\n    EventOptions as IEventOptions,\n} from '@/types/event';\nimport type {\n    UrlObj,\n    HttpWeblogInitParamsV2,\n    HttpWeblogInitParamsV3\n} from '@/types/configuration';\nimport BaseWeblog from '@/core';\nimport UrlPackage from '@/core/url-package';\nimport { CommonPackage } from '@/core/common';\nimport Logger from './logger';\nimport { logFactory } from '@/core/log';\nimport { uuid } from '@/util/uuid';\nexport default class NodeWeblog extends BaseWeblog {\n    constructor(\n        logConfig: HttpWeblogInitParamsV3[0] | HttpWeblogInitParamsV2[0],\n        base?: HttpWeblogInitParamsV3[1] | HttpWeblogInitParamsV2[1],\n    ) {\n        super(logConfig, base);\n        this.commonPackage = new CommonPackage(this.baseOption);\n        this.logger = new Logger(this.logConfig, this.commonPackage);\n        this.currentUrlPackage = new UrlPackage({page: ''});\n        this.addPlugins();\n    }\n    /**\n     * 更新当前 url 信息\n     * @param url\n     * @param type\n     */\n    override updateCurrentUrlPackage(url: UrlObj = {}) {\n        // 该接口不改变 refer 信息\n       if (typeof url === 'object' && !url.force && this.currentUrlPackage) {\n            const { page = this.currentUrlPackage.page, params = {} } = url;\n           if (page === this.currentUrlPackage.page) {\n               return this.currentUrlPackage.update(page, params);\n           }\n       }\n       this.currentUrlPackage = new UrlPackage(url);\n   }\n\n   /**\n    * 更新 refer url 信息\n    * @param url\n    * @param type\n    */\n    override updateReferUrlPackage(url: UrlObj | UrlPackage = this.currentUrlPackage) {\n       if (url instanceof UrlPackage) {\n           this.referUrlPackage = url;\n       } else {\n           this.referUrlPackage = new UrlPackage(url);\n       }\n    }\n\n    override generateLog<T extends IEventType>(\n        eventType: T,\n        eventOptions: IEventOptions<T>,\n        factory: (type: string, data: any) => any = logFactory\n    ) {\n        let { action, params, status, type, eventId, contentPackage, urlPage } = eventOptions as IEventOptions<'CLICK'>;\n        let currentUrlPackage;\n        if (contentPackage) {\n            contentPackage = typeof contentPackage === 'string' ? contentPackage : JSON.stringify(contentPackage);\n        }\n        // 若是 pv 先更新currentUrlPackage\n        if (eventType === 'PV') {\n            const { page } = eventOptions as IEventOptions<'PV'>;\n            this.currentUrlPackage.update(page, params);\n        } else if (urlPage && urlPage.page) {  // 如果参数中带有 urlPage，用来解决页面飘移问题，只影响该埋点\n            currentUrlPackage = {\n                page: urlPage.page,\n                identity: urlPage.identity || uuid(),\n                params: JSON.stringify(urlPage.params),\n                page_type: this.currentUrlPackage.page_type\n            }\n        }\n        const commonInfo = {\n            currentUrlPackage: currentUrlPackage || this.currentUrlPackage.toJSON(),\n            referUrlPackage: this.referUrlPackage ? this.referUrlPackage.toJSON() : undefined,\n            contentPackage\n        };\n        if (eventType === 'PV') {\n            const { type } = eventOptions as IEventOptions<'PV'>;\n            // PV 类型\n            return factory(eventType, {\n                ...eventOptions as IEventOptions<'PV'>,\n                type,\n                name: eventType,\n                ...commonInfo\n            });\n        }\n        if (eventType === 'SHOW') {\n            // SHOW 类型\n            return factory(eventType, {\n                ...eventOptions as IEventOptions<'SHOW'>,\n                name: action,\n                ...commonInfo\n            });\n        }\n\n        if (eventType === 'VIDEO') {\n            return factory(eventType, {\n                params: eventOptions,\n                name: 'VIDEO',\n                ...commonInfo\n            });\n        }\n\n        // Radar 日志特殊处理\n        if (eventType === 'RADAR') {\n            return factory(eventType, eventOptions);\n        }\n\n        if (['CUSTOM', 'RADAR', 'CUSTOM_EVENT'].indexOf(eventType) !== -1) {\n            // CUSTOM 类型\n            const { key, value } = eventOptions as IEventOptions<'CUSTOM'>;\n            return factory('CUSTOM', {\n                ...eventOptions,\n                params: value,\n                eventId,\n                name: key,\n                ...commonInfo\n            });\n        }\n\n        // TASK 类型\n        return factory(eventType, {\n            ...eventOptions,\n            params,\n            status,\n            taskType: type,\n            eventId,\n            name: action,\n            ...commonInfo\n        });\n    }\n}","import { isInApp } from '.';\nimport { getCookie, setCookie } from './cookie';\n\nexport function uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\n/**\n * 生成nano id\n * @return {string} 16长度的字符串\n */\nexport function nanoId() {\n    const ts = ((Math.random() * 1e9) >>> 0);\n    const randomer = [];\n    const seed = '0123456789ABCDEF';\n    for (let i = 0; i < 7; i++) {\n        randomer.push(seed.charAt(Math.random() * 16));\n    }\n\n    return ts + randomer.join('');\n}\n/**\n * 提取顶级域名\n * @param {?string=} hostname\n * @return {string} 返回顶级域名\n */\nfunction resolveTopLevelDomain(hostname: string = typeof location !== 'undefined' ? location.hostname : '') {\n    if (!hostname) {\n        return '';\n    }\n\n    const ret = hostname.split('.');\n    const len = ret.length;\n    return (len <= 2 ? '' : `.${ret[len - 2]}.${ret[len - 1]}`);\n}\nconst didKey: string = 'did';\n/**\n * 生成did\n * @return {string}\n */\nexport function generateDID() {\n    try {\n        // 兼容一下原下发的did逻辑，如果能从did获取，那么就走did\n        // 如果不能，那就通过log sdk自行维护的_did来搞\n        let did = getCookie(didKey) || getCookie('_did');\n        if (!did) {\n            did = `web_${nanoId()}`;\n            const expires = new Date();\n            expires.setFullYear(expires.getFullYear() + 1);\n            setCookie('_did', did, {\n                expires,\n                domain: resolveTopLevelDomain(),\n                path: '/',\n            });\n        }\n        return did;\n    } catch (err) {\n        return '';\n    }\n}\nconst sessionKey = 'WEBLOGGER_SESSIONID';\n// session_id 用来串联在一次打开 App 期间跳转不同页面的用户行为\nexport const getSessionId = () => {\n    let sessionId: string = '';\n    const defaultKey = 'session_id';\n    try {\n        if (isInApp()) {\n            sessionId = getCookie(defaultKey) || getCookie('sid'); // 端内从 cookie 中获取客户端传来的 session_id\n            if (sessionId) return sessionId;\n        } else if (typeof sessionStorage !== 'undefined') {\n            sessionId = sessionStorage.getItem(sessionKey) || '';\n            if (!sessionId) {\n                sessionId = uuid();\n                sessionStorage.setItem(sessionKey, sessionId);\n            }\n        }\n    } catch (err) {\n        sessionId = uuid();\n    }\n    return sessionId || uuid();\n};\n","import type { BaseWeblogInstance } from '@/types/index';\n\nexport abstract class BasePlugin {\n    declare weblog: BaseWeblogInstance;\n    abstract destroy(): void;\n    apply(weblog: BaseWeblogInstance) {\n        this.weblog = weblog;\n    }\n    /**\n     * 统一由 weblog 在页面关闭前调用的生命周期函数\n     */\n    beforeUnload?: (event: Event) => void;\n    static key: string;\n}\n\nexport interface BasePluginConstructor {\n    new(options?: any): any;\n    new(weblogger?: any, options?: any): any;\n    key: string;\n}\n/**\n * 在 bootstrap 环境下自动注册插件\n * @param Plugin\n * @param optionKey\n */\nexport const autoRegister = (Plugin: any, optionKey?: string) => {\n    if (\n        typeof window === 'undefined' ||\n        typeof window._GLOBAL_KS_WEBLOGGER_ === 'undefined' ||\n        typeof Plugin !== 'function') return;\n    const { weblog, config } = window._GLOBAL_KS_WEBLOGGER_;\n    let option = optionKey ? config.plugins[optionKey]?.options : undefined;\n    weblog.addPluginInstance(new Plugin(option));\n}\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","adopt","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","Symbol","iterator","v","op","pop","push","__spreadArray","to","from","pack","ar","l","slice","concat","GlobalConfig","UrlPackage","url","pageType","page","identity","page_type","update","params","generatePageId","toJSON","JSON","stringify","category","Date","getTime","leftPad","str","len","ch","pad","TaskOperations","EventTypes","isObj","obj","isArray","getPositiveInteger","Math","abs","floor","EventEmitter","events","on","eventName","callback","_a","off","array","item","index","arr","splice","emit","args","_i","forEach","pluginIndex","Weblog","_super","logConfig","base","options","_this","version","plugins","flush","logger","baseOption","env","proto","timeout","wait","maxBatchLength","sampleRate","yoda","window","forbidV2HttpUrlPage","initUrlPackage","__instance","defineProperty","get","Global","updateCurrentUrlPackage","type","currentUrlPackage","updateReferUrlPackage","referUrlPackage","updateBase","updateCommonPackage","commonPackage","addPlugins","plugin","addPluginInstance","pluginInstance","key","weblog","plug","pluginOptions","error_1","console","error","unplug","name","destroy","unplugAll","generateLog","eventType","eventOptions","send","immediately","log","toUpperCase","beforeSend","collect","sendImmediately","sendPackage","data","networkType","unknown","none","wifi","4g","3g","2g","5g","slow-2g","Base","ClientEvent","CommonPackage","identity_package","device_id","undefined","global_id","user_id","union_id","open_id","iu_id","app_package","product","language","platform","container","package_name","product_name","version_name","channel","version_code","experiment","service_name","safety_id","sub_biz","device_package","os_version","model","ua","need_encrypt","network_package","h5_extra_attr","sdk_name","sdk_version","sdk_bundle","global_attr","entry_tag","location_package","country","province","city","county","street","latitude","longitude","lastDotIndex","lastIndexOf","getH5ExtraAttr","extraInfo","target","merge","obj1","obj2","deepKey","flattenAssign","network","network_type","updateGlobalAttr","json","keys","location","dataTrackHost","testHost","PROD","v3Api","Envs","overseaHost","Apis","v2","v3","radar","Hosts","production","round","random","development","test","oversea","buildUrl","formatUrlQuery","querys","replace","err","BatchLog","config","asyncQueue","throttleQueue","errorQueue","sendingQueue","isV2","isDebug","radarUrl","drained","batchCount","isSetSamplingResult","sendingYield","sendLogs","drain","flushErrorLogs","setTimeout","min","updateUrls","sendData","sender","baseSendData","formatUrl","getCommonPackageJSON","immediate","sendAsync","sendThrottle","clearTimeout","batchWaitTimer","logs","buildLogPackage","errHandler","isDrained","buildV2Package","buildV3Package","event","commonPackageOptions","common","logPackage","unshift","http_seq_id","client_timestamp","merged","currentLog","destory","compensateTimer","sendRadar","radarPackage","getReportUrl","viewHost","reportHost","sessionId","loggerUrl","log_1","Logger","warn_1","warn","did","loggerEnv","BaseLogger","ElementStatus","PageShowAction","ActionStatus","ActionType","SubAction","Direction","TaskStatus","OperationType","ShowType","TaskEventType","timeZoneGMTOffset","firstLoad","enterTime","valueOf","ShowEvent","_c","action","beginTime","contentPackage","status","actionType","auto","commonInfo","UNKNOWN_STATUS","SUCCESS","UNKNOWN_ACTION_TYPE","CLICK","url_package","refer_url_package","sub_action","PAGE_ENTER","actionPB","ENTER","first_load","stay_length","LEAVE","PAGE_LEAVE","RESUME","PAGE_RESUME","PAGE_PAUSE","showType","ClientEventV3","PAGE_AUTO","PAGE_CUSTOM","ClientEventV2","PAGE","show_event","time_cost","ELEMENT","element_package","_b","TaskEvent","taskType","operationDirection","isV2Click","operationType","click_event","direction","UNKNOWN2","task_event","action2","USER_OPERATION","operation_type","operation_direction","session_id","CustomStatEvent","extra","VideoStatEvent","video_stat_event","runtimeIdMap","genId","localStorage","Storage","id","Number","getItem","parse","getLocalStorageItem","setItem","setLocalStorageItem","GMT","getTimezoneOffset","ReportEvent","client_increment_id","event_id","time_zone","genIncrementId","isCustomStatEvent","stat_package","getEventType","event_package","custom_event","logFactory","eventId","page2","customData","custom_stat_event","toLowerCase","NodeWeblog","force","factory","urlPage","c","r","toString","type_1","BaseWeblog","BasePlugin"],"mappings":"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"}