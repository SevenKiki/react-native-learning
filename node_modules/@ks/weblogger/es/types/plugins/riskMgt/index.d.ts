import type { HttpWeblogInstance } from "../../types/index";
import { BasePlugin } from '../base';
import { RiskMgtOptions } from './const';
export default class RiskMgt extends BasePlugin {
    weblog: HttpWeblogInstance;
    static key: string;
    private beginTime;
    private options;
    private touchStartObject;
    private touchMoveObject;
    private mousedown;
    private mouseDownObject;
    private mouseMoveArray;
    private logQueue;
    private reportUrl;
    private batchWaitTimer;
    private battery;
    private estimate;
    private firstSend;
    private encryptDecryptWorker;
    private encryptFailedFunc;
    private encryptSuccessFunc;
    private decryptFailedFunc;
    private decryptSuccessFunc;
    private auH;
    private rtcH;
    private rtcS;
    private ts;
    private cnt;
    private loadTime;
    private riskRadar;
    private location;
    private pers;
    constructor(options: RiskMgtOptions);
    apply(weblog: HttpWeblogInstance): void;
    private sendCoreData;
    private sendWholeData;
    private addEvent;
    private addActivityEvent;
    private mouseDownEvent;
    private mouseMoveEvent;
    private mouseUpEvent;
    private pickMouseEventProps;
    private keyDownHandler;
    private gamepadConnectHandler;
    private verifyParams;
    private getConfig;
    dataXhr(urlAndData: any, callback: () => void): void;
    send(data: any, immediate?: boolean, logId?: string): void;
    flush: (logId?: string) => void;
    private sendLogs;
    createEncryptDecryptWorker(): void;
    private buildLogPackage;
    private touchStartEvent;
    private touchMoveEvent;
    private touchEndEvent;
    private urlChange;
    private dataFormat;
    private generateModuleSection;
    private generateCoreModuleSection;
    private pushException;
    beforeunload: () => void;
    destroy: () => void;
}
