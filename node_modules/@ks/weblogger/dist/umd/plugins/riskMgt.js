(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
  typeof define === 'function' && define.amd ? define(factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.RiskMgt = factory());
})(this, (function () { 'use strict';

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
  }

  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
      return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
  }

  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };

    return _setPrototypeOf(o, p);
  }

  function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;

    try {
      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }

  function _construct(Parent, args, Class) {
    if (_isNativeReflectConstruct()) {
      _construct = Reflect.construct;
    } else {
      _construct = function _construct(Parent, args, Class) {
        var a = [null];
        a.push.apply(a, args);
        var Constructor = Function.bind.apply(Parent, a);
        var instance = new Constructor();
        if (Class) _setPrototypeOf(instance, Class.prototype);
        return instance;
      };
    }

    return _construct.apply(null, arguments);
  }

  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  function _possibleConstructorReturn(self, call) {
    if (call && (typeof call === "object" || typeof call === "function")) {
      return call;
    }

    return _assertThisInitialized(self);
  }

  function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();

    return function _createSuperInternal() {
      var Super = _getPrototypeOf(Derived),
          result;

      if (hasNativeReflectConstruct) {
        var NewTarget = _getPrototypeOf(this).constructor;

        result = Reflect.construct(Super, arguments, NewTarget);
      } else {
        result = Super.apply(this, arguments);
      }

      return _possibleConstructorReturn(this, result);
    };
  }

  function _superPropBase(object, property) {
    while (!Object.prototype.hasOwnProperty.call(object, property)) {
      object = _getPrototypeOf(object);
      if (object === null) break;
    }

    return object;
  }

  function _get(target, property, receiver) {
    if (typeof Reflect !== "undefined" && Reflect.get) {
      _get = Reflect.get;
    } else {
      _get = function _get(target, property, receiver) {
        var base = _superPropBase(target, property);

        if (!base) return;
        var desc = Object.getOwnPropertyDescriptor(base, property);

        if (desc.get) {
          return desc.get.call(receiver);
        }

        return desc.value;
      };
    }

    return _get(target, property, receiver || target);
  }

  /******************************************************************************
  Copyright (c) Microsoft Corporation.

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** */

  /* global Reflect, Promise */
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  function __extends(d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  }

  var _assign = function __assign() {
    _assign = Object.assign || function __assign(t) {
      for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];

        for (var p in s) {
          if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
      }

      return t;
    };

    return _assign.apply(this, arguments);
  };
  function __rest(s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
  }
  function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function (resolve) {
        resolve(value);
      });
    }

    return new (P || (P = Promise))(function (resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }

      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }

      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }

      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  }
  function __generator(thisArg, body) {
    var _ = {
      label: 0,
      sent: function sent() {
        if (t[0] & 1) throw t[1];
        return t[1];
      },
      trys: [],
      ops: []
    },
        f,
        y,
        t,
        g;
    return g = {
      next: verb(0),
      "throw": verb(1),
      "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
      return this;
    }), g;

    function verb(n) {
      return function (v) {
        return step([n, v]);
      };
    }

    function step(op) {
      if (f) throw new TypeError("Generator is already executing.");

      while (_) {
        try {
          if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
          if (y = 0, t) op = [op[0] & 2, t.value];

          switch (op[0]) {
            case 0:
            case 1:
              t = op;
              break;

            case 4:
              _.label++;
              return {
                value: op[1],
                done: false
              };

            case 5:
              _.label++;
              y = op[1];
              op = [0];
              continue;

            case 7:
              op = _.ops.pop();

              _.trys.pop();

              continue;

            default:
              if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                _ = 0;
                continue;
              }

              if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                _.label = op[1];
                break;
              }

              if (op[0] === 6 && _.label < t[1]) {
                _.label = t[1];
                t = op;
                break;
              }

              if (t && _.label < t[2]) {
                _.label = t[2];

                _.ops.push(op);

                break;
              }

              if (t[2]) _.ops.pop();

              _.trys.pop();

              continue;
          }

          op = body.call(thisArg, _);
        } catch (e) {
          op = [6, e];
          y = 0;
        } finally {
          f = t = 0;
        }
      }

      if (op[0] & 5) throw op[1];
      return {
        value: op[0] ? op[1] : void 0,
        done: true
      };
    }
  }
  function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar) ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
  }

  var sdkName = 'webLogger';
  function error() {
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
      }
      try {
          var error_1 = sdkName === 'webLogger_krn' ? console === null || console === void 0 ? void 0 : console.log : console === null || console === void 0 ? void 0 : console.error;
          return error_1 && error_1.call.apply(error_1, __spreadArray([console], args, false));
      }
      catch (e) {
          return;
      }
  }

  /**
   * 事件监听兼容处理
   * @param {*} evtTarget  事件监听目标
   * @param {*} evtName   事件名
   * @param {*} callback  回调函数
   * @param {*} options  相关参数设置
   */
  function addMonitor(evtTarget, evtName, callback, options) {
      if ('attachEvent' in evtTarget) {
          return evtTarget.attachEvent('on' + evtName, callback);
      }
      return evtTarget.addEventListener(evtName, callback, options);
  }
  /**
   * 事件监听解绑兼容处理
   * @param {*} evtTarget  事件监听目标
   * @param {*} evtName   事件名
   * @param {*} callback  事件回调
   */
  function removeMonitor(evtTarget, evtName, callback, options) {
      if ('attachEvent' in evtTarget) {
          return evtTarget.detachEvent('on' + evtName, callback);
      }
      return evtTarget.removeEventListener(evtName, callback, options);
  }
  function parseQueryString(queryString) {
      var result = {};
      var queries = queryString.split('&');
      for (var _i = 0, queries_1 = queries; _i < queries_1.length; _i++) {
          var query = queries_1[_i];
          var _a = query.split('='), key = _a[0], value = _a[1];
          if (!(key in result)) {
              result[key] = value;
              continue;
          }
          if (result[key] instanceof Array) {
              result[key].push(value);
              continue;
          }
          result[key] = [result[key], value];
      }
      return result;
  }
  /**
   * 获取元素xpath
   * @param element 元素
   */
  function getXpathFromNode(element) {
      // if (element && element.id !== '')
      //     return 'id("' + element.id + '")';
      if (element === document.body)
          return 'HTML/' + element.tagName;
      var ix = 0;
      if (element && element.parentNode) {
          var siblings = element.parentNode.childNodes;
          for (var i = 0; i < siblings.length; i++) {
              var sibling = siblings[i];
              if (sibling === element)
                  return getXpathFromNode(element.parentNode) + '/' + element.tagName + '[' + (ix + 1) + ']';
              if (sibling.nodeType === 1 && sibling.tagName === element.tagName)
                  ix++;
          }
      }
      return '';
  }
  function getUrlAndQueryFromUrl(url) {
      if (url === void 0) { url = location.href; }
      var queryIndex = url.lastIndexOf('?');
      if (queryIndex === -1) {
          return {
              page: url
          };
      }
      var page = url.slice(0, queryIndex);
      var queryString = url.slice(queryIndex + 1);
      return {
          page: page,
          params: parseQueryString(queryString),
      };
  }
  var getMappingPage = function (urlPackage, urlMap) {
      var url = urlPackage.url, page = urlPackage.page, params = urlPackage.params, pageId = urlPackage.pageId;
      if (!page && typeof url === 'string') {
          var parsed = getUrlAndQueryFromUrl(url);
          page = parsed.page;
          params = parsed.params;
      }
      if (typeof urlMap === 'function') {
          try {
              var res = urlMap({ url: url, page: page, params: params });
              if (typeof res === 'string') {
                  page = res;
              }
              else if (typeof res === 'object') {
                  if (res.page) {
                      page = res.page;
                  }
                  if (res.params) {
                      params = res.params;
                  }
                  if (res.pageId) {
                      pageId = res.pageId;
                  }
              }
          }
          catch (err) { }
      }
      else if (typeof urlMap === 'object') {
          var mappingPage = '';
          for (var key in urlMap) {
              if ((url || page || '').indexOf(key) > -1) {
                  mappingPage = urlMap[key];
                  break;
              }
          }
          if (mappingPage) {
              page = mappingPage;
          }
      }
      return {
          page: page,
          params: params,
          pageId: pageId
      };
  };
  var getResolution = (function () {
      var resolution = '';
      return function () {
          if (resolution) {
              return resolution;
          }
          try {
              var ratio = window.devicePixelRatio || 1;
              var width = Math.floor(screen.width * ratio); // 有的devicePixelRatio为小数，在此转为整数
              var height = Math.floor(screen.height * ratio);
              resolution = "".concat(width, "x").concat(height);
              return resolution;
          }
          catch (err) {
              return '';
          }
      };
  })();

  var perf = typeof window !== 'undefined'
      ? window.performance
      : null;
  var performanceTiming = perf && perf.timing || null;
  perf
      && perf.getEntriesByType
      && perf.getEntriesByType('navigation')[0]
      || null;

  var BasePlugin = /** @class */ (function () {
      function BasePlugin() {
      }
      BasePlugin.prototype.apply = function (weblog) {
          this.weblog = weblog;
      };
      return BasePlugin;
  }());
  /**
   * 在 bootstrap 环境下自动注册插件
   * @param Plugin
   * @param optionKey
   */
  var autoRegister = function (Plugin, optionKey) {
      var _a;
      if (typeof window === 'undefined' ||
          typeof window._GLOBAL_KS_WEBLOGGER_ === 'undefined' ||
          typeof Plugin !== 'function')
          return;
      var _b = window._GLOBAL_KS_WEBLOGGER_, weblog = _b.weblog, config = _b.config;
      var option = optionKey ? (_a = config.plugins[optionKey]) === null || _a === void 0 ? void 0 : _a.options : undefined;
      weblog.addPluginInstance(new Plugin(option));
  };

  var LoggerId = "10001001";
  var CoreDataLoggerId = "10001002";
  var RM_VERSION = "1.6.0";
  var AppKeyAndSecretKey = {
      test: {
          appKey: "26",
          secretKey: "4d987a04c739527acc8439696cd06913",
      },
      production: {
          appKey: "10001001",
          secretKey: "f2fff381c551a8dcdb765e316f3d44ac",
      },
  };
  var Hosts = {
      test: "https://infra-gdfp.test.gifshow.com",
      production: "https://gdfp.gifshow.com",
      kwai: 'https://g-gdfp.kwai-pro.com',
      snack: 'https://g-gdfp.snackvideo.com',
  };
  var Urls = {
      report: "/p/z/s",
      strategy: "/s/u/v",
  };
  var FLAG = 2;

  /* eslint-disable no-use-before-define */

  /**
   * Base class for inheritance.
   */
  var Base = /*#__PURE__*/function () {
    function Base() {
      _classCallCheck(this, Base);
    }

    _createClass(Base, [{
      key: "mixIn",
      value:
      /**
       * Copies properties into this object.
       *
       * @param {Object} properties The properties to mix in.
       *
       * @example
       *
       *     MyType.mixIn({
       *         field: 'value'
       *     });
       */
      function mixIn(properties) {
        return Object.assign(this, properties);
      }
      /**
       * Creates a copy of this object.
       *
       * @return {Object} The clone.
       *
       * @example
       *
       *     var clone = instance.clone();
       */

    }, {
      key: "clone",
      value: function clone() {
        var clone = new this.constructor();
        Object.assign(clone, this);
        return clone;
      }
    }], [{
      key: "create",
      value:
      /**
       * Extends this object and runs the init method.
       * Arguments to create() will be passed to init().
       *
       * @return {Object} The new object.
       *
       * @static
       *
       * @example
       *
       *     var instance = MyType.create();
       */
      function create() {
        for (var _len = arguments.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {
          args[_key2] = arguments[_key2];
        }

        return _construct(this, args);
      }
    }]);

    return Base;
  }();
  /**
   * An array of 32-bit words.
   *
   * @property {Array} words The array of 32-bit words.
   * @property {number} sigBytes The number of significant bytes in this word array.
   */

  var WordArray = /*#__PURE__*/function (_Base) {
    _inherits(WordArray, _Base);

    var _super = _createSuper(WordArray);

    /**
     * Initializes a newly created word array.
     *
     * @param {Array} words (Optional) An array of 32-bit words.
     * @param {number} sigBytes (Optional) The number of significant bytes in the words.
     *
     * @example
     *
     *     var wordArray = CryptoJS.lib.WordArray.create();
     *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);
     *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);
     */
    function WordArray() {
      var _this;

      var words = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      var sigBytes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : words.length * 4;

      _classCallCheck(this, WordArray);

      _this = _super.call(this);
      var typedArray = words; // Convert buffers to uint8

      if (typedArray instanceof ArrayBuffer) {
        typedArray = new Uint8Array(typedArray);
      } // Convert other array views to uint8


      if (typedArray instanceof Int8Array || typedArray instanceof Uint8ClampedArray || typedArray instanceof Int16Array || typedArray instanceof Uint16Array || typedArray instanceof Int32Array || typedArray instanceof Uint32Array || typedArray instanceof Float32Array || typedArray instanceof Float64Array) {
        typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);
      } // Handle Uint8Array


      if (typedArray instanceof Uint8Array) {
        // Shortcut
        var typedArrayByteLength = typedArray.byteLength; // Extract bytes

        var _words = [];

        for (var i = 0; i < typedArrayByteLength; i += 1) {
          _words[i >>> 2] |= typedArray[i] << 24 - i % 4 * 8;
        } // Initialize this word array


        _this.words = _words;
        _this.sigBytes = typedArrayByteLength;
      } else {
        // Else call normal init
        _this.words = words;
        _this.sigBytes = sigBytes;
      }

      return _this;
    }
    /**
     * Creates a word array filled with random bytes.
     *
     * @param {number} nBytes The number of random bytes to generate.
     *
     * @return {WordArray} The random word array.
     *
     * @static
     *
     * @example
     *
     *     var wordArray = CryptoJS.lib.WordArray.random(16);
     */


    _createClass(WordArray, [{
      key: "toString",
      value:
      /**
       * Converts this word array to a string.
       *
       * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex
       *
       * @return {string} The stringified word array.
       *
       * @example
       *
       *     var string = wordArray + '';
       *     var string = wordArray.toString();
       *     var string = wordArray.toString(CryptoJS.enc.Utf8);
       */
      function toString() {
        var encoder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Hex;
        return encoder.stringify(this);
      }
      /**
       * Concatenates a word array to this word array.
       *
       * @param {WordArray} wordArray The word array to append.
       *
       * @return {WordArray} This word array.
       *
       * @example
       *
       *     wordArray1.concat(wordArray2);
       */

    }, {
      key: "concat",
      value: function concat(wordArray) {
        // Shortcuts
        var thisWords = this.words;
        var thatWords = wordArray.words;
        var thisSigBytes = this.sigBytes;
        var thatSigBytes = wordArray.sigBytes; // Clamp excess bits

        this.clamp(); // Concat

        if (thisSigBytes % 4) {
          // Copy one byte at a time
          for (var i = 0; i < thatSigBytes; i += 1) {
            var thatByte = thatWords[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
            thisWords[thisSigBytes + i >>> 2] |= thatByte << 24 - (thisSigBytes + i) % 4 * 8;
          }
        } else {
          // Copy one word at a time
          for (var _i = 0; _i < thatSigBytes; _i += 4) {
            thisWords[thisSigBytes + _i >>> 2] = thatWords[_i >>> 2];
          }
        }

        this.sigBytes += thatSigBytes; // Chainable

        return this;
      }
      /**
       * Removes insignificant bits.
       *
       * @example
       *
       *     wordArray.clamp();
       */

    }, {
      key: "clamp",
      value: function clamp() {
        // Shortcuts
        var words = this.words,
            sigBytes = this.sigBytes; // Clamp

        words[sigBytes >>> 2] &= 0xffffffff << 32 - sigBytes % 4 * 8;
        words.length = Math.ceil(sigBytes / 4);
      }
      /**
       * Creates a copy of this word array.
       *
       * @return {WordArray} The clone.
       *
       * @example
       *
       *     var clone = wordArray.clone();
       */

    }, {
      key: "clone",
      value: function clone() {
        var clone = _get(_getPrototypeOf(WordArray.prototype), "clone", this).call(this);

        clone.words = this.words.slice(0);
        return clone;
      }
    }], [{
      key: "random",
      value: function random(nBytes) {
        var words = [];

        var r = function r(m_w) {
          var _m_w = m_w;
          var _m_z = 0x3ade68b1;
          var mask = 0xffffffff;
          return function () {
            _m_z = 0x9069 * (_m_z & 0xFFFF) + (_m_z >> 0x10) & mask;
            _m_w = 0x4650 * (_m_w & 0xFFFF) + (_m_w >> 0x10) & mask;
            var result = (_m_z << 0x10) + _m_w & mask;
            result /= 0x100000000;
            result += 0.5;
            return result * (Math.random() > 0.5 ? 1 : -1);
          };
        };

        for (var i = 0, rcache; i < nBytes; i += 4) {
          var _r = r((rcache || Math.random()) * 0x100000000);

          rcache = _r() * 0x3ade67b7;
          words.push(_r() * 0x100000000 | 0);
        }

        return new WordArray(words, nBytes);
      }
    }]);

    return WordArray;
  }(Base);
  /**
   * Hex encoding strategy.
   */

  var Hex = {
    /**
     * Converts a word array to a hex string.
     *
     * @param {WordArray} wordArray The word array.
     *
     * @return {string} The hex string.
     *
     * @static
     *
     * @example
     *
     *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);
     */
    stringify: function stringify(wordArray) {
      // Shortcuts
      var words = wordArray.words,
          sigBytes = wordArray.sigBytes; // Convert

      var hexChars = [];

      for (var i = 0; i < sigBytes; i += 1) {
        var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
        hexChars.push((bite >>> 4).toString(16));
        hexChars.push((bite & 0x0f).toString(16));
      }

      return hexChars.join('');
    },

    /**
     * Converts a hex string to a word array.
     *
     * @param {string} hexStr The hex string.
     *
     * @return {WordArray} The word array.
     *
     * @static
     *
     * @example
     *
     *     var wordArray = CryptoJS.enc.Hex.parse(hexString);
     */
    parse: function parse(hexStr) {
      // Shortcut
      var hexStrLength = hexStr.length; // Convert

      var words = [];

      for (var i = 0; i < hexStrLength; i += 2) {
        words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << 24 - i % 8 * 4;
      }

      return new WordArray(words, hexStrLength / 2);
    }
  };
  /**
   * Latin1 encoding strategy.
   */

  var Latin1 = {
    /**
     * Converts a word array to a Latin1 string.
     *
     * @param {WordArray} wordArray The word array.
     *
     * @return {string} The Latin1 string.
     *
     * @static
     *
     * @example
     *
     *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);
     */
    stringify: function stringify(wordArray) {
      // Shortcuts
      var words = wordArray.words,
          sigBytes = wordArray.sigBytes; // Convert

      var latin1Chars = [];

      for (var i = 0; i < sigBytes; i += 1) {
        var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
        latin1Chars.push(String.fromCharCode(bite));
      }

      return latin1Chars.join('');
    },

    /**
     * Converts a Latin1 string to a word array.
     *
     * @param {string} latin1Str The Latin1 string.
     *
     * @return {WordArray} The word array.
     *
     * @static
     *
     * @example
     *
     *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);
     */
    parse: function parse(latin1Str) {
      // Shortcut
      var latin1StrLength = latin1Str.length; // Convert

      var words = [];

      for (var i = 0; i < latin1StrLength; i += 1) {
        words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << 24 - i % 4 * 8;
      }

      return new WordArray(words, latin1StrLength);
    }
  };
  /**
   * UTF-8 encoding strategy.
   */

  var Utf8 = {
    /**
     * Converts a word array to a UTF-8 string.
     *
     * @param {WordArray} wordArray The word array.
     *
     * @return {string} The UTF-8 string.
     *
     * @static
     *
     * @example
     *
     *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);
     */
    stringify: function stringify(wordArray) {
      try {
        return decodeURIComponent(escape(Latin1.stringify(wordArray)));
      } catch (e) {
        throw new Error('Malformed UTF-8 data');
      }
    },

    /**
     * Converts a UTF-8 string to a word array.
     *
     * @param {string} utf8Str The UTF-8 string.
     *
     * @return {WordArray} The word array.
     *
     * @static
     *
     * @example
     *
     *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);
     */
    parse: function parse(utf8Str) {
      return Latin1.parse(unescape(encodeURIComponent(utf8Str)));
    }
  };
  /**
   * Abstract buffered block algorithm template.
   *
   * The property blockSize must be implemented in a concrete subtype.
   *
   * @property {number} _minBufferSize
   *
   *     The number of blocks that should be kept unprocessed in the buffer. Default: 0
   */

  var BufferedBlockAlgorithm = /*#__PURE__*/function (_Base2) {
    _inherits(BufferedBlockAlgorithm, _Base2);

    var _super2 = _createSuper(BufferedBlockAlgorithm);

    function BufferedBlockAlgorithm() {
      var _this2;

      _classCallCheck(this, BufferedBlockAlgorithm);

      _this2 = _super2.call(this);
      _this2._minBufferSize = 0;
      return _this2;
    }
    /**
     * Resets this block algorithm's data buffer to its initial state.
     *
     * @example
     *
     *     bufferedBlockAlgorithm.reset();
     */


    _createClass(BufferedBlockAlgorithm, [{
      key: "reset",
      value: function reset() {
        // Initial values
        this._data = new WordArray();
        this._nDataBytes = 0;
      }
      /**
       * Adds new data to this block algorithm's buffer.
       *
       * @param {WordArray|string} data
       *
       *     The data to append. Strings are converted to a WordArray using UTF-8.
       *
       * @example
       *
       *     bufferedBlockAlgorithm._append('data');
       *     bufferedBlockAlgorithm._append(wordArray);
       */

    }, {
      key: "_append",
      value: function _append(data) {
        var m_data = data; // Convert string to WordArray, else assume WordArray already

        if (typeof m_data === 'string') {
          m_data = Utf8.parse(m_data);
        } // Append


        this._data.concat(m_data);

        this._nDataBytes += m_data.sigBytes;
      }
      /**
       * Processes available data blocks.
       *
       * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.
       *
       * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.
       *
       * @return {WordArray} The processed data.
       *
       * @example
       *
       *     var processedData = bufferedBlockAlgorithm._process();
       *     var processedData = bufferedBlockAlgorithm._process(!!'flush');
       */

    }, {
      key: "_process",
      value: function _process(doFlush) {
        var processedWords; // Shortcuts

        var data = this._data,
            blockSize = this.blockSize;
        var dataWords = data.words;
        var dataSigBytes = data.sigBytes;
        var blockSizeBytes = blockSize * 4; // Count blocks ready

        var nBlocksReady = dataSigBytes / blockSizeBytes;

        if (doFlush) {
          // Round up to include partial blocks
          nBlocksReady = Math.ceil(nBlocksReady);
        } else {
          // Round down to include only full blocks,
          // less the number of blocks that must remain in the buffer
          nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);
        } // Count words ready


        var nWordsReady = nBlocksReady * blockSize; // Count bytes ready

        var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes); // Process blocks

        if (nWordsReady) {
          for (var offset = 0; offset < nWordsReady; offset += blockSize) {
            // Perform concrete-algorithm logic
            this._doProcessBlock(dataWords, offset);
          } // Remove processed words


          processedWords = dataWords.splice(0, nWordsReady);
          data.sigBytes -= nBytesReady;
        } // Return processed words


        return new WordArray(processedWords, nBytesReady);
      }
      /**
       * Creates a copy of this object.
       *
       * @return {Object} The clone.
       *
       * @example
       *
       *     var clone = bufferedBlockAlgorithm.clone();
       */

    }, {
      key: "clone",
      value: function clone() {
        var clone = _get(_getPrototypeOf(BufferedBlockAlgorithm.prototype), "clone", this).call(this);

        clone._data = this._data.clone();
        return clone;
      }
    }]);

    return BufferedBlockAlgorithm;
  }(Base);
  /**
   * Abstract hasher template.
   *
   * @property {number} blockSize
   *
   *     The number of 32-bit words this hasher operates on. Default: 16 (512 bits)
   */

  var Hasher = /*#__PURE__*/function (_BufferedBlockAlgorit) {
    _inherits(Hasher, _BufferedBlockAlgorit);

    var _super3 = _createSuper(Hasher);

    function Hasher(cfg) {
      var _this3;

      _classCallCheck(this, Hasher);

      _this3 = _super3.call(this);
      _this3.blockSize = 512 / 32;
      /**
       * Configuration options.
       */

      _this3.cfg = Object.assign(new Base(), cfg); // Set initial values

      _this3.reset();

      return _this3;
    }
    /**
     * Creates a shortcut function to a hasher's object interface.
     *
     * @param {Hasher} SubHasher The hasher to create a helper for.
     *
     * @return {Function} The shortcut function.
     *
     * @static
     *
     * @example
     *
     *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);
     */


    _createClass(Hasher, [{
      key: "reset",
      value:
      /**
       * Resets this hasher to its initial state.
       *
       * @example
       *
       *     hasher.reset();
       */
      function reset() {
        // Reset data buffer
        _get(_getPrototypeOf(Hasher.prototype), "reset", this).call(this); // Perform concrete-hasher logic


        this._doReset();
      }
      /**
       * Updates this hasher with a message.
       *
       * @param {WordArray|string} messageUpdate The message to append.
       *
       * @return {Hasher} This hasher.
       *
       * @example
       *
       *     hasher.update('message');
       *     hasher.update(wordArray);
       */

    }, {
      key: "update",
      value: function update(messageUpdate) {
        // Append
        this._append(messageUpdate); // Update the hash


        this._process(); // Chainable


        return this;
      }
      /**
       * Finalizes the hash computation.
       * Note that the finalize operation is effectively a destructive, read-once operation.
       *
       * @param {WordArray|string} messageUpdate (Optional) A final message update.
       *
       * @return {WordArray} The hash.
       *
       * @example
       *
       *     var hash = hasher.finalize();
       *     var hash = hasher.finalize('message');
       *     var hash = hasher.finalize(wordArray);
       */

    }, {
      key: "finalize",
      value: function finalize(messageUpdate) {
        // Final message update
        if (messageUpdate) {
          this._append(messageUpdate);
        } // Perform concrete-hasher logic


        var hash = this._doFinalize();

        return hash;
      }
    }], [{
      key: "_createHelper",
      value: function _createHelper(SubHasher) {
        return function (message, cfg) {
          return new SubHasher(cfg).finalize(message);
        };
      }
      /**
       * Creates a shortcut function to the HMAC's object interface.
       *
       * @param {Hasher} SubHasher The hasher to use in this HMAC helper.
       *
       * @return {Function} The shortcut function.
       *
       * @static
       *
       * @example
       *
       *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);
       */

    }, {
      key: "_createHmacHelper",
      value: function _createHmacHelper(SubHasher) {
        return function (message, key) {
          return new HMAC(SubHasher, key).finalize(message);
        };
      }
    }]);

    return Hasher;
  }(BufferedBlockAlgorithm);
  /**
   * HMAC algorithm.
   */

  var HMAC = /*#__PURE__*/function (_Base3) {
    _inherits(HMAC, _Base3);

    var _super4 = _createSuper(HMAC);

    /**
     * Initializes a newly created HMAC.
     *
     * @param {Hasher} SubHasher The hash algorithm to use.
     * @param {WordArray|string} key The secret key.
     *
     * @example
     *
     *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);
     */
    function HMAC(SubHasher, key) {
      var _this4;

      _classCallCheck(this, HMAC);

      _this4 = _super4.call(this);
      var hasher = new SubHasher();
      _this4._hasher = hasher; // Convert string to WordArray, else assume WordArray already

      var _key = key;

      if (typeof _key === 'string') {
        _key = Utf8.parse(_key);
      } // Shortcuts


      var hasherBlockSize = hasher.blockSize;
      var hasherBlockSizeBytes = hasherBlockSize * 4; // Allow arbitrary length keys

      if (_key.sigBytes > hasherBlockSizeBytes) {
        _key = hasher.finalize(key);
      } // Clamp excess bits


      _key.clamp(); // Clone key for inner and outer pads


      var oKey = _key.clone();

      _this4._oKey = oKey;

      var iKey = _key.clone();

      _this4._iKey = iKey; // Shortcuts

      var oKeyWords = oKey.words;
      var iKeyWords = iKey.words; // XOR keys with pad constants

      for (var i = 0; i < hasherBlockSize; i += 1) {
        oKeyWords[i] ^= 0x5c5c5c5c;
        iKeyWords[i] ^= 0x36363636;
      }

      oKey.sigBytes = hasherBlockSizeBytes;
      iKey.sigBytes = hasherBlockSizeBytes; // Set initial values

      _this4.reset();

      return _this4;
    }
    /**
     * Resets this HMAC to its initial state.
     *
     * @example
     *
     *     hmacHasher.reset();
     */


    _createClass(HMAC, [{
      key: "reset",
      value: function reset() {
        // Shortcut
        var hasher = this._hasher; // Reset

        hasher.reset();
        hasher.update(this._iKey);
      }
      /**
       * Updates this HMAC with a message.
       *
       * @param {WordArray|string} messageUpdate The message to append.
       *
       * @return {HMAC} This HMAC instance.
       *
       * @example
       *
       *     hmacHasher.update('message');
       *     hmacHasher.update(wordArray);
       */

    }, {
      key: "update",
      value: function update(messageUpdate) {
        this._hasher.update(messageUpdate); // Chainable


        return this;
      }
      /**
       * Finalizes the HMAC computation.
       * Note that the finalize operation is effectively a destructive, read-once operation.
       *
       * @param {WordArray|string} messageUpdate (Optional) A final message update.
       *
       * @return {WordArray} The HMAC.
       *
       * @example
       *
       *     var hmac = hmacHasher.finalize();
       *     var hmac = hmacHasher.finalize('message');
       *     var hmac = hmacHasher.finalize(wordArray);
       */

    }, {
      key: "finalize",
      value: function finalize(messageUpdate) {
        // Shortcut
        var hasher = this._hasher; // Compute HMAC

        var innerHash = hasher.finalize(messageUpdate);
        hasher.reset();
        var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));
        return hmac;
      }
    }]);

    return HMAC;
  }(Base);

  var W = [];
  /**
   * SHA-1 hash algorithm.
   */

  var SHA1Algo = /*#__PURE__*/function (_Hasher) {
    _inherits(SHA1Algo, _Hasher);

    var _super = _createSuper(SHA1Algo);

    function SHA1Algo() {
      _classCallCheck(this, SHA1Algo);

      return _super.apply(this, arguments);
    }

    _createClass(SHA1Algo, [{
      key: "_doReset",
      value: function _doReset() {
        this._hash = new WordArray([0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0]);
      }
    }, {
      key: "_doProcessBlock",
      value: function _doProcessBlock(M, offset) {
        // Shortcut
        var H = this._hash.words; // Working variables

        var a = H[0];
        var b = H[1];
        var c = H[2];
        var d = H[3];
        var e = H[4]; // Computation

        for (var i = 0; i < 80; i += 1) {
          if (i < 16) {
            W[i] = M[offset + i] | 0;
          } else {
            var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
            W[i] = n << 1 | n >>> 31;
          }

          var t = (a << 5 | a >>> 27) + e + W[i];

          if (i < 20) {
            t += (b & c | ~b & d) + 0x5a827999;
          } else if (i < 40) {
            t += (b ^ c ^ d) + 0x6ed9eba1;
          } else if (i < 60) {
            t += (b & c | b & d | c & d) - 0x70e44324;
          } else
            /* if (i < 80) */
            {
              t += (b ^ c ^ d) - 0x359d3e2a;
            }

          e = d;
          d = c;
          c = b << 30 | b >>> 2;
          b = a;
          a = t;
        } // Intermediate hash value


        H[0] = H[0] + a | 0;
        H[1] = H[1] + b | 0;
        H[2] = H[2] + c | 0;
        H[3] = H[3] + d | 0;
        H[4] = H[4] + e | 0;
      }
    }, {
      key: "_doFinalize",
      value: function _doFinalize() {
        // Shortcuts
        var data = this._data;
        var dataWords = data.words;
        var nBitsTotal = this._nDataBytes * 8;
        var nBitsLeft = data.sigBytes * 8; // Add padding

        dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;
        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);
        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = nBitsTotal;
        data.sigBytes = dataWords.length * 4; // Hash final blocks

        this._process(); // Return final computed hash


        return this._hash;
      }
    }, {
      key: "clone",
      value: function clone() {
        var clone = _get(_getPrototypeOf(SHA1Algo.prototype), "clone", this).call(this);

        clone._hash = this._hash.clone();
        return clone;
      }
    }]);

    return SHA1Algo;
  }(Hasher);
  /**
   * Shortcut function to the hasher's object interface.
   *
   * @param {WordArray|string} message The message to hash.
   *
   * @return {WordArray} The hash.
   *
   * @static
   *
   * @example
   *
   *     var hash = CryptoJS.SHA1('message');
   *     var hash = CryptoJS.SHA1(wordArray);
   */

  var SHA1 = Hasher._createHelper(SHA1Algo);
  /**
   * Shortcut function to the HMAC's object interface.
   *
   * @param {WordArray|string} message The message to hash.
   * @param {WordArray|string} key The secret key.
   *
   * @return {WordArray} The HMAC.
   *
   * @static
   *
   * @example
   *
   *     var hmac = CryptoJS.HmacSHA1(message, key);
   */

  Hasher._createHmacHelper(SHA1Algo);

  var parseLoop = function parseLoop(base64Str, base64StrLength, reverseMap) {
    var words = [];
    var nBytes = 0;

    for (var i = 0; i < base64StrLength; i += 1) {
      if (i % 4) {
        var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << i % 4 * 2;
        var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> 6 - i % 4 * 2;
        var bitsCombined = bits1 | bits2;
        words[nBytes >>> 2] |= bitsCombined << 24 - nBytes % 4 * 8;
        nBytes += 1;
      }
    }

    return WordArray.create(words, nBytes);
  };
  /**
   * Base64 encoding strategy.
   */


  var Base64 = {
    /**
     * Converts a word array to a Base64 string.
     *
     * @param {WordArray} wordArray The word array.
     *
     * @return {string} The Base64 string.
     *
     * @static
     *
     * @example
     *
     *     const base64String = CryptoJS.enc.Base64.stringify(wordArray);
     */
    stringify: function stringify(wordArray) {
      // Shortcuts
      var words = wordArray.words,
          sigBytes = wordArray.sigBytes;
      var map = this._map; // Clamp excess bits

      wordArray.clamp(); // Convert

      var base64Chars = [];

      for (var i = 0; i < sigBytes; i += 3) {
        var byte1 = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
        var byte2 = words[i + 1 >>> 2] >>> 24 - (i + 1) % 4 * 8 & 0xff;
        var byte3 = words[i + 2 >>> 2] >>> 24 - (i + 2) % 4 * 8 & 0xff;
        var triplet = byte1 << 16 | byte2 << 8 | byte3;

        for (var j = 0; j < 4 && i + j * 0.75 < sigBytes; j += 1) {
          base64Chars.push(map.charAt(triplet >>> 6 * (3 - j) & 0x3f));
        }
      } // Add padding


      var paddingChar = map.charAt(64);

      if (paddingChar) {
        while (base64Chars.length % 4) {
          base64Chars.push(paddingChar);
        }
      }

      return base64Chars.join('');
    },

    /**
     * Converts a Base64 string to a word array.
     *
     * @param {string} base64Str The Base64 string.
     *
     * @return {WordArray} The word array.
     *
     * @static
     *
     * @example
     *
     *     const wordArray = CryptoJS.enc.Base64.parse(base64String);
     */
    parse: function parse(base64Str) {
      // Shortcuts
      var base64StrLength = base64Str.length;
      var map = this._map;
      var reverseMap = this._reverseMap;

      if (!reverseMap) {
        this._reverseMap = [];
        reverseMap = this._reverseMap;

        for (var j = 0; j < map.length; j += 1) {
          reverseMap[map.charCodeAt(j)] = j;
        }
      } // Ignore padding


      var paddingChar = map.charAt(64);

      if (paddingChar) {
        var paddingIndex = base64Str.indexOf(paddingChar);

        if (paddingIndex !== -1) {
          base64StrLength = paddingIndex;
        }
      } // Convert


      return parseLoop(base64Str, base64StrLength, reverseMap);
    },
    _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='
  };

  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

  function createCommonjsModule(fn, module) {
  	return module = { exports: {} }, fn(module, module.exports), module.exports;
  }

  var md5 = createCommonjsModule(function (module) {

    (function ($) {
      /**
       * Add integers, wrapping at 2^32.
       * This uses 16-bit operations internally to work around bugs in interpreters.
       *
       * @param {number} x First integer
       * @param {number} y Second integer
       * @returns {number} Sum
       */

      function safeAdd(x, y) {
        var lsw = (x & 0xffff) + (y & 0xffff);
        var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
        return msw << 16 | lsw & 0xffff;
      }
      /**
       * Bitwise rotate a 32-bit number to the left.
       *
       * @param {number} num 32-bit number
       * @param {number} cnt Rotation count
       * @returns {number} Rotated number
       */


      function bitRotateLeft(num, cnt) {
        return num << cnt | num >>> 32 - cnt;
      }
      /**
       * Basic operation the algorithm uses.
       *
       * @param {number} q q
       * @param {number} a a
       * @param {number} b b
       * @param {number} x x
       * @param {number} s s
       * @param {number} t t
       * @returns {number} Result
       */


      function md5cmn(q, a, b, x, s, t) {
        return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);
      }
      /**
       * Basic operation the algorithm uses.
       *
       * @param {number} a a
       * @param {number} b b
       * @param {number} c c
       * @param {number} d d
       * @param {number} x x
       * @param {number} s s
       * @param {number} t t
       * @returns {number} Result
       */


      function md5ff(a, b, c, d, x, s, t) {
        return md5cmn(b & c | ~b & d, a, b, x, s, t);
      }
      /**
       * Basic operation the algorithm uses.
       *
       * @param {number} a a
       * @param {number} b b
       * @param {number} c c
       * @param {number} d d
       * @param {number} x x
       * @param {number} s s
       * @param {number} t t
       * @returns {number} Result
       */


      function md5gg(a, b, c, d, x, s, t) {
        return md5cmn(b & d | c & ~d, a, b, x, s, t);
      }
      /**
       * Basic operation the algorithm uses.
       *
       * @param {number} a a
       * @param {number} b b
       * @param {number} c c
       * @param {number} d d
       * @param {number} x x
       * @param {number} s s
       * @param {number} t t
       * @returns {number} Result
       */


      function md5hh(a, b, c, d, x, s, t) {
        return md5cmn(b ^ c ^ d, a, b, x, s, t);
      }
      /**
       * Basic operation the algorithm uses.
       *
       * @param {number} a a
       * @param {number} b b
       * @param {number} c c
       * @param {number} d d
       * @param {number} x x
       * @param {number} s s
       * @param {number} t t
       * @returns {number} Result
       */


      function md5ii(a, b, c, d, x, s, t) {
        return md5cmn(c ^ (b | ~d), a, b, x, s, t);
      }
      /**
       * Calculate the MD5 of an array of little-endian words, and a bit length.
       *
       * @param {Array} x Array of little-endian words
       * @param {number} len Bit length
       * @returns {Array<number>} MD5 Array
       */


      function binlMD5(x, len) {
        /* append padding */
        x[len >> 5] |= 0x80 << len % 32;
        x[(len + 64 >>> 9 << 4) + 14] = len;
        var i;
        var olda;
        var oldb;
        var oldc;
        var oldd;
        var a = 1732584193;
        var b = -271733879;
        var c = -1732584194;
        var d = 271733878;

        for (i = 0; i < x.length; i += 16) {
          olda = a;
          oldb = b;
          oldc = c;
          oldd = d;
          a = md5ff(a, b, c, d, x[i], 7, -680876936);
          d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);
          c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);
          b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);
          a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);
          d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);
          c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);
          b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);
          a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);
          d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);
          c = md5ff(c, d, a, b, x[i + 10], 17, -42063);
          b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);
          a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);
          d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);
          c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);
          b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);
          a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);
          d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);
          c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);
          b = md5gg(b, c, d, a, x[i], 20, -373897302);
          a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);
          d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);
          c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);
          b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);
          a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);
          d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);
          c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);
          b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);
          a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);
          d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);
          c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);
          b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);
          a = md5hh(a, b, c, d, x[i + 5], 4, -378558);
          d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);
          c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);
          b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);
          a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);
          d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);
          c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);
          b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);
          a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);
          d = md5hh(d, a, b, c, x[i], 11, -358537222);
          c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);
          b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);
          a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);
          d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);
          c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);
          b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);
          a = md5ii(a, b, c, d, x[i], 6, -198630844);
          d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);
          c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);
          b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);
          a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);
          d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);
          c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);
          b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);
          a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);
          d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);
          c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);
          b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);
          a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);
          d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);
          c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);
          b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);
          a = safeAdd(a, olda);
          b = safeAdd(b, oldb);
          c = safeAdd(c, oldc);
          d = safeAdd(d, oldd);
        }

        return [a, b, c, d];
      }
      /**
       * Convert an array of little-endian words to a string
       *
       * @param {Array<number>} input MD5 Array
       * @returns {string} MD5 string
       */


      function binl2rstr(input) {
        var i;
        var output = '';
        var length32 = input.length * 32;

        for (i = 0; i < length32; i += 8) {
          output += String.fromCharCode(input[i >> 5] >>> i % 32 & 0xff);
        }

        return output;
      }
      /**
       * Convert a raw string to an array of little-endian words
       * Characters >255 have their high-byte silently ignored.
       *
       * @param {string} input Raw input string
       * @returns {Array<number>} Array of little-endian words
       */


      function rstr2binl(input) {
        var i;
        var output = [];
        output[(input.length >> 2) - 1] = undefined;

        for (i = 0; i < output.length; i += 1) {
          output[i] = 0;
        }

        var length8 = input.length * 8;

        for (i = 0; i < length8; i += 8) {
          output[i >> 5] |= (input.charCodeAt(i / 8) & 0xff) << i % 32;
        }

        return output;
      }
      /**
       * Calculate the MD5 of a raw string
       *
       * @param {string} s Input string
       * @returns {string} Raw MD5 string
       */


      function rstrMD5(s) {
        return binl2rstr(binlMD5(rstr2binl(s), s.length * 8));
      }
      /**
       * Calculates the HMAC-MD5 of a key and some data (raw strings)
       *
       * @param {string} key HMAC key
       * @param {string} data Raw input string
       * @returns {string} Raw MD5 string
       */


      function rstrHMACMD5(key, data) {
        var i;
        var bkey = rstr2binl(key);
        var ipad = [];
        var opad = [];
        var hash;
        ipad[15] = opad[15] = undefined;

        if (bkey.length > 16) {
          bkey = binlMD5(bkey, key.length * 8);
        }

        for (i = 0; i < 16; i += 1) {
          ipad[i] = bkey[i] ^ 0x36363636;
          opad[i] = bkey[i] ^ 0x5c5c5c5c;
        }

        hash = binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);
        return binl2rstr(binlMD5(opad.concat(hash), 512 + 128));
      }
      /**
       * Convert a raw string to a hex string
       *
       * @param {string} input Raw input string
       * @returns {string} Hex encoded string
       */


      function rstr2hex(input) {
        var hexTab = '0123456789abcdef';
        var output = '';
        var x;
        var i;

        for (i = 0; i < input.length; i += 1) {
          x = input.charCodeAt(i);
          output += hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f);
        }

        return output;
      }
      /**
       * Encode a string as UTF-8
       *
       * @param {string} input Input string
       * @returns {string} UTF8 string
       */


      function str2rstrUTF8(input) {
        return unescape(encodeURIComponent(input));
      }
      /**
       * Encodes input string as raw MD5 string
       *
       * @param {string} s Input string
       * @returns {string} Raw MD5 string
       */


      function rawMD5(s) {
        return rstrMD5(str2rstrUTF8(s));
      }
      /**
       * Encodes input string as Hex encoded string
       *
       * @param {string} s Input string
       * @returns {string} Hex encoded string
       */


      function hexMD5(s) {
        return rstr2hex(rawMD5(s));
      }
      /**
       * Calculates the raw HMAC-MD5 for the given key and data
       *
       * @param {string} k HMAC key
       * @param {string} d Input string
       * @returns {string} Raw MD5 string
       */


      function rawHMACMD5(k, d) {
        return rstrHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d));
      }
      /**
       * Calculates the Hex encoded HMAC-MD5 for the given key and data
       *
       * @param {string} k HMAC key
       * @param {string} d Input string
       * @returns {string} Raw MD5 string
       */


      function hexHMACMD5(k, d) {
        return rstr2hex(rawHMACMD5(k, d));
      }
      /**
       * Calculates MD5 value for a given string.
       * If a key is provided, calculates the HMAC-MD5 value.
       * Returns a Hex encoded string unless the raw argument is given.
       *
       * @param {string} string Input string
       * @param {string} [key] HMAC key
       * @param {boolean} [raw] Raw output switch
       * @returns {string} MD5 output
       */


      function md5(string, key, raw) {
        if (!key) {
          if (!raw) {
            return hexMD5(string);
          }

          return rawMD5(string);
        }

        if (!raw) {
          return hexHMACMD5(key, string);
        }

        return rawHMACMD5(key, string);
      }

      if (module.exports) {
        module.exports = md5;
      } else {
        $.md5 = md5;
      }
    })(commonjsGlobal);
  });

  function encrypt(data) {
      return Base64.stringify(Utf8.parse(data));
  }
  function decrypt(data) {
      return Utf8.stringify(Base64.parse(data));
  }
  function getAppkeyAndSecretKey(env) {
      env = env || 'production';
      return AppKeyAndSecretKey[env];
  }
  function getReportUrl(options) {
      var env = options.env || 'production';
      var host = Hosts[env];
      // 生产环境且用户传入了host 兼容海外
      if (env === 'production' && options.host && Hosts[options.host]) {
          host = Hosts[options.host];
      }
      var _a = AppKeyAndSecretKey[env], appKey = _a.appKey, secretKey = _a.secretKey;
      var timestamp = (new Date().valueOf() / 1000).toFixed();
      var sign = md5(appKey + secretKey + timestamp);
      // 随机选择一个接口上报
      var url = options.reportUrls ? options.reportUrls[(Math.floor(Math.random() * options.reportUrls.length))] : Urls.report;
      return "".concat(host).concat(url, "?appkey=").concat(appKey, "&seckey=").concat(secretKey, "&bussType=").concat(options.bussType, "&timestamp=").concat(timestamp, "&sign=").concat(sign);
  }
  function getStrategyUrl(options) {
      var env = options.env || 'production';
      var host = Hosts[env];
      // 生产环境且用户传入了host 兼容海外
      if (env === 'production' && options.host && Hosts[options.host]) {
          host = Hosts[options.host];
      }
      var _a = AppKeyAndSecretKey[env], appKey = _a.appKey, secretKey = _a.secretKey;
      var timestamp = (new Date().valueOf() / 1000).toFixed();
      var sign = md5(appKey + secretKey + timestamp);
      return "".concat(host).concat(Urls.strategy, "?appkey=").concat(appKey, "&seckey=").concat(secretKey, "&bussType=").concat(options.bussType, "&timestamp=").concat(timestamp, "&sign=").concat(sign, "&type=SDK_INIT");
  }
  function isMobile() {
      var ua = navigator.userAgent;
      var isAndroid = ua.indexOf('Android') > -1 || ua.indexOf('Adr') > -1; // android终端
      var isiOS = !!ua.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/); // ios终端
      return isAndroid || isiOS;
  }
  // 是否是低端机
  function isLowEnd() {
      // 1. url中含参数sf2021=1,该参数是春节活动特有参数
      var url = location.href;
      var isSpringFestival = url.indexOf('sf2021=1') !== -1;
      // 2. 判断ua参数
      var ua = navigator.userAgent;
      var isLowPerformance = ua.indexOf('ISLP/1') !== -1 || (ua.indexOf('Kwai') !== -1 && ua.indexOf('ISLP/') === -1);
      return isSpringFestival && isLowPerformance;
  }
  function sha1Encode(data) {
      return SHA1(data).toString();
  }

  /**
   * 如果引用radar，会导致整包引入&与业务冲突。所以摘取了radar部分上报代码，自定义上报。
   */
  function compose(middlewares) {
      return function (context, next) {
          var index = -1;
          return dispatch(0);
          function dispatch(i) {
              if (i <= index) {
                  return new Error('`next` 被重复调用');
              }
              index = i;
              var fn = middlewares[i];
              if (i === middlewares.length)
                  fn = next;
              if (!fn)
                  return;
              try {
                  return fn(context, dispatch.bind(null, i + 1));
              }
              catch (err) {
                  return err;
              }
          }
      };
  }
  var MiddlewareManager = /** @class */ (function () {
      function MiddlewareManager() {
          var _a;
          var middleware = [];
          for (var _i = 0; _i < arguments.length; _i++) {
              middleware[_i] = arguments[_i];
          }
          this.middlewares = [];
          (_a = this.middlewares).push.apply(_a, middleware);
      }
      /**
       * 添加使用一个新的中间件
       * @param middlewares
       */
      MiddlewareManager.prototype.use = function () {
          var _a;
          var middlewares = [];
          for (var _i = 0; _i < arguments.length; _i++) {
              middlewares[_i] = arguments[_i];
          }
          var defaultMiddleware = this.middlewares.pop();
          (_a = this.middlewares).push.apply(_a, middlewares);
          this.middlewares.push(defaultMiddleware);
      };
      /**
       * 执行所有已添加的中间件
       * @param context
       * @returns
       */
      MiddlewareManager.prototype.invoke = function (context) {
          var fn = compose(this.middlewares);
          return fn(context);
      };
      return MiddlewareManager;
  }());
  var riskRadarObj;
  var riskRadar = /** @class */ (function () {
      function riskRadar(params) {
          var _this = this;
          this.projectId = '4104e6fdd6';
          this.weblog = {};
          this.radarSessionIdNext = '';
          this.getCommonData = function () {
              var _a, _b;
              var app_package = _this.weblog.commonPackage.app_package;
              var h5_extra_attr = JSON.stringify(_assign(_assign({}, _this.weblog.commonPackage.getH5ExtraAttr()), { app_version_name: app_package.version_name, url: location.href, hash: location.hash, online: navigator === null || navigator === void 0 ? void 0 : navigator.onLine, downlink: (_a = navigator === null || navigator === void 0 ? void 0 : navigator.connection) === null || _a === void 0 ? void 0 : _a.downlink, rtt: (_b = navigator === null || navigator === void 0 ? void 0 : navigator.connection) === null || _b === void 0 ? void 0 : _b.rtt }));
              // @ts-ignore
              var url_package = _this.currentUrlPackage && _this.currentUrlPackage.toJSON();
              var project_id = _this.projectId;
              return {
                  h5_extra_attr: h5_extra_attr,
                  url_package: url_package,
                  app_version_name: app_package.version_name,
                  project_id: project_id,
              };
          };
          // 获取webview_type
          this.getWebViewType = function () {
              var ua = window.navigator.userAgent;
              if (ua.indexOf('Android') !== -1) {
                  return 'WebView';
              }
              if (ua.indexOf('iPhone') !== -1) {
                  var uaList = _this.getUAList();
                  if (uaList.Yoda && uaList.WebViewType === 'WK') {
                      return 'YodaWKWebView';
                  }
                  if (!uaList.Yoda && uaList.WebView === 'WKWebView') {
                      return 'WKWebView';
                  }
                  return 'UIWebView';
              }
              return '';
          };
          this.weblog = params.weblog;
          // @ts-ignore
          this.currentUrlPackage = this.weblog.currentUrlPackage;
          this.radarSessionIdNext = this.uuid();
          riskRadarObj = this;
      }
      riskRadar.prototype.uuid = function () {
          return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
              var r = Math.random() * 16 | 0;
              var v = c === 'x' ? r : (r & 0x3 | 0x8);
              return v.toString(16);
          });
      };
      riskRadar.prototype.getUAList = function () {
          var ua = window.navigator.userAgent;
          var uaList = {};
          ua.split(' ').forEach(function (item) {
              var _a = item.split('/'), key = _a[0], value = _a[1];
              if (key && value) {
                  uaList[key] = value;
              }
          });
          return uaList;
      };
      // http上报新链路
      riskRadar.prototype.reportByHttp = function (event) {
          var commonData = this.getCommonData();
          var commonLogData = {
              project_id: this.projectId,
              radar_session_id: this.radarSessionIdNext,
              h5_extra_attr: commonData.h5_extra_attr,
          };
          var common = [];
          var dimension = event;
          common.push(dimension);
          if (Array.isArray(common) && common.length) {
              this.collectLog(commonLogData, common, 'radarSDKSupplement');
          }
      };
      riskRadar.prototype.collectLog = function (commonLogData, logList, serviceName) {
          var send = this.weblog.sendByHttp || this.weblog.collect;
          var KEY = 'radar_log';
          send.call(this.weblog, 'RADAR', {
              name: KEY,
              params: _assign(_assign({}, commonLogData), { data: __spreadArray([], logList, true) }),
              serviceName: serviceName,
          });
      };
      // 用户定义的事件
      riskRadar.prototype.event = function (dimension, value) {
          var uaList = this.getUAList();
          // 处理extra_info
          if (dimension.extra_info && dimension.extra_info instanceof Object) {
              dimension.extra_info = JSON.stringify(dimension.extra_info);
          }
          // 处理yoda_version
          if (dimension.yoda_version === undefined) {
              dimension.yoda_version = uaList.Yoda || '';
          }
          // 处理webview_type
          if (dimension.webview_type === undefined) {
              dimension.webview_type = this.getWebViewType();
          }
          var log = {
              key: 'event',
              value: value,
              dimension: dimension,
          };
          this.logCollectNext(log);
      };
      riskRadar.prototype.logCollectNext = function (incomeKv) {
          var _this = this;
          var kv = deepClone(incomeKv);
          // this.decorateLog(kv);
          // 获取公共数据
          var commonData = this.getCommonData();
          var app_version_name = commonData.app_version_name;
          delete commonData.app_version_name;
          // 将上报内容中加入公共数据
          var logMiddleWare = new MiddlewareManager(function (context, next) {
              context.dimension.app_version_name = app_version_name;
              context = _assign(_assign(_assign({}, context), commonData), { event_client_timestamp: Date.now(), event_trigger_source: 'H5', radar_session_id: _this.radarSessionIdNext });
              return context;
          });
          logMiddleWare.use(function (context, next) {
              // 增加自增id，统计丢失率
              if (context.key && context.key === 'load') {
                  context.dimension = _assign(_assign({}, context.dimension), { load_device_increase_id: genDeviceIncreaseId('LOAD_DEVICE_INCREASE_ID'), load_session_increase_id: genSessionIncreaseId('LOAD_SESSION_INCREASE_ID') });
              }
              if (context.key && context.key !== 'load') {
                  context.dimension = _assign(_assign({}, context.dimension), { other_device_increase_id: genDeviceIncreaseId('OTHER_DEVICE_INCREASE_ID'), other_session_increase_id: genSessionIncreaseId('OTHER_SESSION_INCREASE_ID') });
              }
              return next();
          }, function (context, next) {
              context.dimension.sample_rate = { load: 1, api: 1, resource: 1, error: 1, event: 1, custom: 1, isHit: true };
              return next();
          });
          kv = logMiddleWare.invoke(kv);
          if (kv instanceof Error) {
              throw kv;
          }
          try {
              window.dispatchEvent(new CustomEvent('get-radar-next-data', {
                  detail: {
                      kv: deepClone(kv),
                  },
              }));
          }
          catch (e) {
              //
          }
          // 广播之后删除广播所需的字段，目前仅api有
          delete kv.dimension.broadcast_info;
          this.reportByHttp(kv);
      };
      riskRadar.prototype.riskEvent = function (name, event_type, extra_info) {
          this.event({
              name: name,
              // event_type, //'事件类型', // 【可选】
              // category: '业务分类', // 【可选】
              src: location.href,
              // result_type: '事件结果', // 【可选】
              // message: '消息', // 【可选】
              extra_info: extra_info // '额外信息（建议使用json string）' // 【可选】
          });
      };
      riskRadar.prototype.pushException = function (error) {
          this.riskEvent('exception', '', JSON.stringify({
              er: error.toString(),
              st: error.stack
          }));
      };
      return riskRadar;
  }());
  // 自增 id 最大值
  var maxId = 1e8;
  var genDeviceIncreaseId = function (key) {
      try {
          if (window && window.localStorage && typeof Storage !== 'undefined' && window.localStorage instanceof Storage) {
              var id = Number(getLocalStorageItem(key)) || 0;
              if (id + 1 > maxId) {
                  id = 0;
              }
              setLocalStorageItem(key, id + 1);
              return id;
          }
      }
      catch (err) {
          //
      }
  };
  function deepClone(data) {
      return JSON.parse(JSON.stringify(data));
  }
  /**
   * 获取 localStorage 缓存
   */
  function getLocalStorageItem(key) {
      try {
          if (window && window.localStorage) {
              var value = window.localStorage.getItem(key);
              if (value) {
                  try {
                      return JSON.parse(value);
                  }
                  catch (err) {
                      return value;
                  }
              }
          }
      }
      catch (err) {
          return null;
      }
      return null;
  }
  /**
   * 设置 localStorage 缓存
   */
  function setLocalStorageItem(key, value) {
      try {
          if (window && window.localStorage) {
              window.localStorage.setItem(key, JSON.stringify(value));
              return true;
          }
      }
      catch (err) {
          return false;
      }
      return false;
  }
  // 如果没有 localStorage 则使用运行时自增 id，用于非浏览器场景，比如 React Native
  var runtimeIdMap = {};
  var genSessionIncreaseId = function (key) {
      if (!runtimeIdMap[key]) {
          runtimeIdMap[key] = 0;
      }
      return runtimeIdMap[key]++;
  };
  function pushException(error) {
      try {
          if (riskRadarObj && error) {
              riskRadarObj.pushException(error);
          }
      }
      catch (error) {
      }
  }

  function getNavigatorPlugins(navigator) {
      var plugins = navigator.plugins || [];
      if (plugins.length > 0) {
          var array = [];
          for (var i = 0; i < plugins.length; i++) {
              var _a = plugins[i] || {}, name_1 = _a.name, filename = _a.filename, description = _a.description;
              var json_data = {
                  name: name_1,
                  filename: filename,
                  description: description
              }; // 定义一个json对象
              array[i] = json_data;
          }
          return JSON.stringify(array);
      }
      return "";
  }
  function getNavigatorMimeTypes(navigator) {
      var mimeTypes = navigator.mimeTypes || [];
      if (mimeTypes.length > 0) {
          var array = [];
          for (var i = 0; i < mimeTypes.length; i++) {
              var _a = mimeTypes[i] || {}, type = _a.type, description = _a.description;
              var json_data = {
                  type: type,
                  description: description
              }; // 定义一个json对象
              array[i] = json_data;
          }
          return JSON.stringify(array);
      }
      return "";
  }
  function getWeglData(document) {
      try {
          var canvas = document.createElement('canvas');
          var gl = canvas.getContext('webgl'); // 等同于 canvas.getContext('experimental-webgl');
          if (gl != null) {
              var debugInfo = gl.getExtension('WEBGL_debug_renderer_info');
              if (debugInfo) {
                  // GPU 制造商
                  var vendor = gl.getParameter(debugInfo.UNMASKED_VENDOR_WEBGL);
                  // GPU 型号
                  var renderer = gl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL);
                  var json_data = {}; // 定义一个json对象
                  json_data['61'] = vendor;
                  json_data['62'] = renderer;
                  var gl_vendor = gl.getParameter(gl.VENDOR);
                  var gl_version = gl.getParameter(gl.VERSION);
                  json_data['64'] = gl_vendor;
                  json_data['65'] = gl_version;
                  var shading_language_version = gl.getParameter(gl.SHADING_LANGUAGE_VERSION);
                  var stencil_bits = gl.getParameter(gl.STENCIL_BITS);
                  json_data['66'] = shading_language_version;
                  json_data['67'] = stencil_bits;
                  var gl_attributes = gl.getContextAttributes();
                  if (gl_attributes != null) {
                      var antialias = gl_attributes.antialias ? '1' : '0';
                      json_data['63'] = antialias;
                  }
                  return json_data;
              }
          }
      }
      catch (err) {
          pushException(err);
      }
      return {};
  }
  var getWebglCanvas = function () {
      var canvas = document.createElement('canvas');
      var gl = null;
      try {
          gl = canvas.getContext('webgl');
      }
      catch (e) {
          pushException(e);
      }
      if (!gl) {
          gl = null;
      }
      return gl;
  };
  // 由于iOS 支持从 8.1 版开始的 webgl，并且 8.1 版在多个图形芯片上运行，
  // 因此不同 iOS 设备的结果可能不同，但我们需要对其进行验证
  function getWeglFdData() {
      var gl = getWebglCanvas();
      if (!gl) {
          return null;
      }
      var result = [];
      //着色器
      var vShaderTemplate = 'attribute vec2 attrVertex;varying vec2 varyinTexCoordinate;uniform vec2 uniformOffset;void main(){varyinTexCoordinate=attrVertex+uniformOffset;gl_Position=vec4(attrVertex,0,1);}';
      var fShaderTemplate = 'precision mediump float;varying vec2 varyinTexCoordinate;void main() {gl_FragColor=vec4(varyinTexCoordinate,0,1);}';
      var vertexPosBuffer = gl.createBuffer();
      if (vertexPosBuffer != null) {
          gl.bindBuffer(gl.ARRAY_BUFFER, vertexPosBuffer);
          var vertices = new Float32Array([-0.2, -0.9, 0, 0.4, -0.26, 0, 0, 0.732134444, 0]);
          gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);
          var vertexPosBuffer_itemSize = 3;
          var vertexPosBuffer_numItems = 3;
          var program = gl.createProgram();
          var vshader = gl.createShader(gl.VERTEX_SHADER);
          if (vshader != null && program != null) {
              gl.shaderSource(vshader, vShaderTemplate);
              gl.compileShader(vshader);
              var fshader = gl.createShader(gl.FRAGMENT_SHADER);
              if (fshader != null) {
                  gl.shaderSource(fshader, fShaderTemplate);
                  gl.compileShader(fshader);
                  gl.attachShader(program, vshader);
                  gl.attachShader(program, fshader);
                  gl.linkProgram(program);
                  gl.useProgram(program);
                  var program_vertexPosAttrib = gl.getAttribLocation(program, 'attrVertex');
                  var program_offsetUniform = gl.getUniformLocation(program, 'uniformOffset');
                  try {
                      gl.enableVertexAttribArray(program.vertexPosArray);
                      gl.vertexAttribPointer(program_vertexPosAttrib, vertexPosBuffer_itemSize, gl.FLOAT, !1, 0, 0);
                      gl.uniform2f(program_offsetUniform, 1, 1);
                      gl.drawArrays(gl.TRIANGLE_STRIP, 0, vertexPosBuffer_numItems);
                      var gl_canvas = gl.canvas;
                      result.push(gl_canvas.toDataURL());
                  }
                  catch (e) {
                      /* .toDataURL may be absent or broken (blocked by extension) */
                      pushException(e);
                  }
                  return {
                      hash: md5(result[0]),
                      rawData: result[0]
                  };
              }
          }
      }
      return null;
  }
  function getCanvasFdData() {
      try {
          var canvas = document.createElement('canvas');
          canvas.width = 2000;
          canvas.height = 200;
          canvas.style.display = 'inline';
          var ctx = canvas.getContext('2d');
          if (ctx != null) {
              ctx.textBaseline = 'alphabetic';
              ctx.fillStyle = '#f60';
              ctx.fillRect(125, 1, 62, 20);
              ctx.fillStyle = '#069';
              ctx.font = '11pt Arial';
              ctx.globalCompositeOperation = 'multiply';
              ctx.fillStyle = 'rgb(255,255,0)';
              ctx.beginPath();
              ctx.arc(75, 100, 50, 0, Math.PI * 2, true);
              ctx.closePath();
              ctx.fill();
              ctx.fillStyle = 'rgb(255,0,255)';
              ctx.arc(75, 75, 75, 0, Math.PI * 2, true);
              ctx.arc(75, 75, 25, 0, Math.PI * 2, true);
              ctx.fill('evenodd');
              var canvasData = canvas.toDataURL();
              return {
                  hash: md5(canvasData),
                  rawData: canvasData
              };
          }
      }
      catch (e) {
      }
      return null;
  }
  var M = Math; // To reduce the minified code size
  var fallbackFn = function () { return 0; };
  function getMathFingerprint() {
      // Native operations
      var acos = M.acos || fallbackFn;
      var acosh = M.acosh || fallbackFn;
      var asin = M.asin || fallbackFn;
      var asinh = M.asinh || fallbackFn;
      var atanh = M.atanh || fallbackFn;
      var atan = M.atan || fallbackFn;
      var sin = M.sin || fallbackFn;
      var sinh = M.sinh || fallbackFn;
      var cos = M.cos || fallbackFn;
      var cosh = M.cosh || fallbackFn;
      var tan = M.tan || fallbackFn;
      var tanh = M.tanh || fallbackFn;
      var exp = M.exp || fallbackFn;
      var expm1 = M.expm1 || fallbackFn;
      var log1p = M.log1p || fallbackFn;
      // Operation polyfills
      var powPI = function (value) { return M.pow(M.PI, value); };
      var acoshPf = function (value) { return M.log(value + M.sqrt(value * value - 1)); };
      var asinhPf = function (value) { return M.log(value + M.sqrt(value * value + 1)); };
      var atanhPf = function (value) { return M.log((1 + value) / (1 - value)) / 2; };
      var sinhPf = function (value) { return M.exp(value) - 1 / M.exp(value) / 2; };
      var coshPf = function (value) { return (M.exp(value) + 1 / M.exp(value)) / 2; };
      var expm1Pf = function (value) { return M.exp(value) - 1; };
      var tanhPf = function (value) { return (M.exp(2 * value) - 1) / (M.exp(2 * value) + 1); };
      var log1pPf = function (value) { return M.log(1 + value); };
      // Note: constant values are empirical
      var mdata = {
          acos: acos(0.123124234234234242),
          acosh: acosh(1e308),
          acoshPf: acoshPf(1e154),
          asin: asin(0.123124234234234242),
          asinh: asinh(1),
          asinhPf: asinhPf(1),
          atanh: atanh(0.5),
          atanhPf: atanhPf(0.5),
          atan: atan(0.5),
          sin: sin(-1e300),
          sinh: sinh(1),
          sinhPf: sinhPf(1),
          cos: cos(10.000000000123),
          cosh: cosh(1),
          coshPf: coshPf(1),
          tan: tan(-1e300),
          tanh: tanh(1),
          tanhPf: tanhPf(1),
          exp: exp(1),
          expm1: expm1(1),
          expm1Pf: expm1Pf(1),
          log1p: log1p(10),
          log1pPf: log1pPf(10),
          powPI: powPI(-100),
      };
      return {
          h: md5(JSON.stringify(mdata)),
          d: mdata
      };
  }
  function getObjPropertys(obj) {
      var lc = 0;
      for (var key in obj) {
          lc++;
      }
      return {
          pc: Object.getOwnPropertyNames(obj).length,
          kc: Object.keys(obj).length,
          lc: lc
      };
  }
  function getStorage() {
      var o = {};
      try {
          var lsc = window.localStorage.length;
          var ssc = window.sessionStorage.length;
          o = { lsc: lsc, ssc: ssc };
      }
      catch (error) {
          pushException(error);
      }
      return o;
  }
  function getHisLen() {
      var l = -1;
      try {
          l = window.history.length;
      }
      catch (error) {
          pushException(error);
      }
      return l;
  }
  function getCookieL() {
      var l = -1;
      try {
          l = document.cookie.split(";").length;
      }
      catch (error) {
          pushException(error);
      }
      return l;
  }
  function getFS() {
      var o = {};
      try {
          var isF = document.fullscreenElement || document['mozFullScreenElement'] || document['webkitFullscreenElement'];
          var en = document.fullscreenEnabled || document['mozFullScreenEnabled'] || document['webkitFullscreenEnabled'];
          o = {
              en: en ? true : false,
              isF: isF ? true : false
          };
      }
      catch (error) {
          pushException(error);
      }
      return o;
  }
  var permissionsNames = [
      "geolocation",
      "notifications",
      "push",
      "midi",
      "camera",
      "microphone",
      "speaker",
      "device-info",
      "background-fetch",
      "background-sync",
      "bluetooth",
      "persistent-storage",
      "ambient-light-sensor",
      "accelerometer",
      "gyroscope",
      "magnetometer",
      "clipboard",
      "display-capture",
      "nfc"
  ];
  var getAllPermissions = function (callback) { return __awaiter(void 0, void 0, void 0, function () {
      var allPermissions;
      return __generator(this, function (_a) {
          switch (_a.label) {
              case 0:
                  allPermissions = [];
                  return [4 /*yield*/, Promise.all(permissionsNames.map(function (permissionName) { return __awaiter(void 0, void 0, void 0, function () {
                          var permission, _a;
                          return __generator(this, function (_b) {
                              switch (_b.label) {
                                  case 0:
                                      _b.trys.push([0, 6, , 7]);
                                      permission = void 0;
                                      _a = permissionName;
                                      switch (_a) {
                                          case 'push': return [3 /*break*/, 1];
                                      }
                                      return [3 /*break*/, 3];
                                  case 1: return [4 /*yield*/, navigator.permissions.query({ name: permissionName, userVisibleOnly: true })];
                                  case 2:
                                      // @ts-ignore
                                      permission = _b.sent();
                                      return [3 /*break*/, 5];
                                  case 3: return [4 /*yield*/, navigator.permissions.query({ name: permissionName })];
                                  case 4:
                                      permission = _b.sent();
                                      _b.label = 5;
                                  case 5:
                                      allPermissions.push({ permissionName: permissionName, state: permission.state });
                                      return [3 /*break*/, 7];
                                  case 6:
                                      _b.sent();
                                      allPermissions.push({ permissionName: permissionName, state: 'error' });
                                      return [3 /*break*/, 7];
                                  case 7: return [2 /*return*/];
                              }
                          });
                      }); })).then(function (values) {
                          callback && callback(allPermissions);
                      })];
              case 1:
                  _a.sent();
                  return [2 /*return*/];
          }
      });
  }); };
  var getLocation = function (callback) {
      try {
          navigator.permissions.query({ name: 'geolocation' }).then(function (result) {
              if (result.state == 'granted') {
                  // 获取地理位置信息
                  navigator.geolocation.getCurrentPosition(function (position) {
                      // console.log('当前地理位置', position);
                      callback && callback({
                          lat: position.coords.latitude,
                          lon: position.coords.longitude,
                      });
                  });
              }
          });
      }
      catch (error) {
          pushException(error);
      }
  };

  function audioFP () {
      return new Promise(function (done, reject) {
          var options = {
              audio: {
                  timeout: 1000,
                  excludeIOS11: true
              },
              EXCLUDED: '',
              NOT_AVAILABLE: ''
          };
          var audioOptions = options.audio;
          if (navigator.userAgent.match(/OS 11.+Version\/11.+Safari/)) {
              return done(options.EXCLUDED);
          }
          var AudioContext = window.OfflineAudioContext; // || window.webkitOfflineAudioContext
          if (AudioContext == null) {
              return done(options.NOT_AVAILABLE);
          }
          var context = new AudioContext(1, 44100, 44100);
          var oscillator = context.createOscillator();
          oscillator.type = 'triangle';
          oscillator.frequency.setValueAtTime(10000, context.currentTime);
          var compressor = context.createDynamicsCompressor();
          [
              ['threshold', -50],
              ['knee', 40],
              ['ratio', 12],
              ['reduction', -20],
              ['attack', 0],
              ['release', 0.25]
          ].forEach(function (value, index, array) {
              var v0 = value[0];
              var c0 = compressor[v0];
              if (c0 !== undefined && typeof c0.setValueAtTime === 'function') {
                  c0.setValueAtTime(value[1], context && context.currentTime || 0);
              }
          });
          oscillator.connect(compressor);
          compressor.connect(context.destination);
          oscillator.start(0);
          context.startRendering();
          var audioTimeoutId = setTimeout(function () {
              context = undefined;
              return done('audioTimeout');
          }, audioOptions.timeout);
          context.oncomplete = function (event) {
              var fingerprint;
              try {
                  clearTimeout(audioTimeoutId);
                  fingerprint = event.renderedBuffer.getChannelData(0)
                      .slice(4500, 5000)
                      .reduce(function (acc, val) {
                      return acc + Math.abs(val);
                  }, 0)
                      .toString();
                  oscillator.disconnect();
                  compressor.disconnect();
              }
              catch (error) {
                  done(error);
                  return;
              }
              done(fingerprint);
          };
      }).then(function (rawData) {
          return {
              hash: md5(rawData + ""),
              rawData: rawData,
          };
      });
  }

  function gFr(callback) {
      var rtc = window.RTCPeerConnection || window['mozRTCPeerConnection'] || window['webkitRTCPeerConnection'];
      var pc = new rtc({
          iceServers: [{
                  urls: [
                      // "stun:stun.whoi.edu:3478",
                      // "stun:stunserver.org:3478",
                      // "stun:stun.vopium.com:3478",
                      // "stun:stun.voippro.com:3478",
                      "stun:stun.rapidnet.de:3478",
                      "stun:stun.voipwise.com:3478",
                      "stun:stun.voipzoom.com:3478",
                      "stun:stun.voipstunt.com:3478",
                      "stun:stun.voxgratia.org:3478",
                      "stun:stun.l.google.com:19302",
                      // "stun:stun.voipraider.com:3478",
                      // "stun:stun1.voiceeclipse.net:3478",
                      // "stun:stun.samsungsmartcam.com:3478",
                      // "stun:stun.services.mozilla.com:3478"
                  ]
              }
          ]
      });
      pc.createDataChannel('');
      pc.createOffer().then(function (offer) {
          pc.setLocalDescription(offer);
      });
      var p = { can: '', sdp: '' };
      pc.onicecandidate = function (ice) {
          if (ice && ice.candidate) {
              var target = ice.target;
              var localDescription = target.localDescription;
              var sdp = localDescription && localDescription.sdp;
              p.can += ';' + ice.candidate.candidate;
              if (ice.target && sdp) {
                  p.sdp += ';' + sdp;
              }
              else {
                  p.sdp += ';';
              }
              if (callback) {
                  callback(p);
              }
          }
      };
  }

  function detectjsFiles() {
      var jsFilePaths = Array.prototype.slice
          .apply(document.querySelectorAll('script'))
          .filter(function (s) { return s.src; })
          .map(function (s) { return s.src; });
      return jsFilePaths;
  }

  function printCallStack() {
      var st = (new Error()).stack;
      st = st === null || st === void 0 ? void 0 : st.replace('Error\n', '');
      st = st === null || st === void 0 ? void 0 : st.replace(/\s*/g, '');
      return st;
  }

  function decodeBase64(base64, enableUnicode) {
      var binaryString = atob(base64);
      if (enableUnicode) {
          var binaryView = new Uint8Array(binaryString.length);
          for (var i = 0, n = binaryString.length; i < n; ++i) {
              binaryView[i] = binaryString.charCodeAt(i);
          }
          return String.fromCharCode.apply(null, new Uint16Array(binaryView.buffer));
      }
      return binaryString;
  }

  function createURL(base64, sourcemapArg, enableUnicodeArg) {
      var sourcemap = sourcemapArg === undefined ? null : sourcemapArg;
      var enableUnicode = enableUnicodeArg === undefined ? false : enableUnicodeArg;
      var source = decodeBase64(base64, enableUnicode);
      var start = source.indexOf('\n', 10) + 1;
      var body = source.substring(start) + (sourcemap ? '\/\/# sourceMappingURL=' + sourcemap : '');
      var blob = new Blob([body], { type: 'application/javascript' });
      return URL.createObjectURL(blob);
  }

  function createBase64WorkerFactory(base64, sourcemapArg, enableUnicodeArg) {
      var url;
      return function WorkerFactory(options) {
          url = url || createURL(base64, sourcemapArg, enableUnicodeArg);
          return new Worker(url, options);
      };
  }

  var WorkerFactory$1 = createBase64WorkerFactory('', null, false);
  /* eslint-enable */

  var WorkerFactory = createBase64WorkerFactory('', null, false);
  /* eslint-enable */

  var urlChangeEventId = 'hashchange';
  var RiskMgt = /** @class */ (function (_super) {
      __extends(RiskMgt, _super);
      function RiskMgt(options) {
          var _this = _super.call(this) || this;
          _this.beginTime = performanceTiming && performanceTiming.fetchStart
              || new Date().valueOf();
          _this.options = {};
          _this.touchStartObject = {}; // 多个触点touchStart的数据
          _this.touchMoveObject = {}; // 多个触点touchMove的数据
          _this.mousedown = false; // 仅在鼠标按下后才会收集
          _this.mouseDownObject = {};
          _this.mouseMoveArray = [];
          _this.logQueue = {};
          _this.reportUrl = ''; // 初始化时随机选择一个上报接口
          _this.firstSend = true; // 是否第一次上报
          _this.encryptFailedFunc = function () { };
          _this.encryptSuccessFunc = function () { };
          _this.decryptFailedFunc = function () { };
          _this.decryptSuccessFunc = function () { };
          _this.auH = '';
          _this.rtcH = '';
          _this.rtcS = '';
          _this.ts = {};
          _this.cnt = 0;
          _this.loadTime = 0;
          _this.riskRadar = undefined;
          _this.location = {};
          _this.pers = [];
          _this.mouseDownEvent = function (event) {
              _this.mousedown = true;
              _this.mouseDownObject = _this.pickMouseEventProps(event);
              _this.ts['ms'] = new Date().getTime();
          };
          _this.mouseMoveEvent = function (event) {
              if (!_this.mousedown)
                  return;
              _this.mouseMoveArray.push(_this.pickMouseEventProps(event));
              _this.ts['mm'] = new Date().getTime();
          };
          _this.mouseUpEvent = function (event) {
              if (!_this.mousedown)
                  return;
              var mouseup = _this.pickMouseEventProps(event);
              var mouseInfo = {
                  mouseDown: {},
                  mouseMove: [],
                  mouseUp: {},
              };
              mouseInfo.mouseDown = _this.mouseDownObject;
              mouseInfo.mouseMove = _this.mouseMoveArray;
              mouseInfo.mouseUp = mouseup;
              var formatData = _this.dataFormat(event);
              if (formatData) {
                  var moduleSection = void 0;
                  if (_this.mouseMoveArray.length === 0) {
                      moduleSection = _this.generateModuleSection(_assign({ type: 'CLICK', timestamp: new Date().valueOf() }, formatData), '19');
                  }
                  else {
                      moduleSection = _this.generateModuleSection(_assign(_assign({ type: 'MOUSE', timestamp: new Date().valueOf() }, formatData), { mouseInfo: mouseInfo }), '22');
                      // console.log('mouse', moduleSection)
                  }
                  _this.send(moduleSection);
              }
              _this.mousedown = false;
              _this.mouseDownObject = {};
              _this.mouseMoveArray = [];
              _this.ts['me'] = new Date().getTime();
          };
          _this.pickMouseEventProps = function (event) {
              // @ts-ignore
              var clientX = event.clientX, clientY = event.clientY, altKey = event.altKey, button = event.button, buttons = event.buttons, ctrlKey = event.ctrlKey, metaKey = event.metaKey; event.pageX; event.pageY; var region = event.region, relatedTarget = event.relatedTarget, shiftKey = event.shiftKey, which = event.which, webkitForce = event.webkitForce;
              return {
                  clientX: Number(clientX.toFixed(2)),
                  clientY: Number(clientY.toFixed(2)),
                  altKey: altKey,
                  button: button,
                  buttons: buttons,
                  ctrlKey: ctrlKey,
                  metaKey: metaKey,
                  pageX: Number(clientX.toFixed(2)),
                  pageY: Number(clientY.toFixed(2)),
                  region: region,
                  relatedTarget: relatedTarget,
                  shiftKey: shiftKey,
                  which: which,
                  webkitForce: webkitForce,
                  timestamp: new Date().valueOf(),
              };
          };
          _this.keyDownHandler = function (event) {
              var moduleSection;
              moduleSection = _this.generateModuleSection({
                  type: 'KEYBOARD',
                  timestamp: new Date().valueOf(),
                  altKey: event.altKey,
                  code: event.code,
                  ctrlKey: event.ctrlKey,
                  isComposing: event.isComposing,
                  key: event.key,
                  locale: event.locale || '',
                  location: event.location,
                  metaKey: event.metaKey,
                  repeat: event.repeat,
                  shiftKey: event.shiftKey,
              }, '45');
              _this.send(moduleSection);
          };
          _this.gamepadConnectHandler = function (event) {
              var moduleSection = _this.generateModuleSection({
                  type: 'GAMEPADCONNECTED',
                  game_pad_id: event.gamepad.id,
                  timestamp: new Date().valueOf(),
              }, 44);
              _this.send(moduleSection);
          };
          // 服务端拉取配置
          _this.getConfig = function (callback) {
              var urlAndData = {
                  data: JSON.stringify({
                      device_id: _this.weblog.commonPackage.identity_package.device_id,
                      sdkver: RM_VERSION,
                      pver: '0.0.0',
                      hp: _this.options.bussType,
                      platform: 3,
                  }),
                  flag: FLAG,
                  url: getStrategyUrl(_this.options),
              };
              _this.encryptFailedFunc = (function (urlAndData, callback) {
                  return function () {
                      urlAndData.url; var data = __rest(urlAndData, ["url"]);
                      data.data = encrypt(data.data);
                      _this.dataXhr(urlAndData, callback);
                  };
              })(urlAndData, callback);
              _this.encryptSuccessFunc = (function (callback) {
                  return function (urlAndData) {
                      _this.dataXhr(urlAndData, callback);
                  };
              })(callback);
              _this.encryptDecryptWorker.postMessage({
                  type: 'encrypt',
                  info: urlAndData,
              });
          };
          _this.flush = function (logId) {
              if (logId === void 0) { logId = LoggerId; }
              _this.sendLogs(_this.logQueue[logId], logId);
              _this.logQueue[logId] = [];
          };
          _this.touchStartEvent = function (event) {
              _this.ts['ts'] = new Date().getTime();
              var touches = event.touches;
              for (var i = 0; i < touches.length; i++) {
                  var _a = touches[i], clientX = _a.clientX, clientY = _a.clientY, identifier = _a.identifier, force = _a.force;
                  if (_this.touchStartObject[identifier]) {
                      return;
                  }
                  _this.touchStartObject[identifier] = {
                      clientX: Number(clientX.toFixed(2)),
                      clientY: Number(clientY.toFixed(2)),
                      force: force,
                      timestamp: new Date().valueOf(),
                  };
              }
          };
          _this.touchMoveEvent = function (event) {
              _this.ts['tm'] = new Date().getTime();
              var touches = event.changedTouches;
              for (var i = 0; i < touches.length; i++) {
                  var _a = touches[i], clientX = _a.clientX, clientY = _a.clientY, identifier = _a.identifier, force = _a.force;
                  var data = {
                      clientX: Number(clientX.toFixed(2)),
                      clientY: Number(clientY.toFixed(2)),
                      timestamp: new Date().valueOf(),
                      force: force
                  };
                  if (_this.touchMoveObject[identifier]) {
                      _this.touchMoveObject[identifier].push(data);
                      return;
                  }
                  _this.touchMoveObject[identifier] = [data];
              }
          };
          _this.touchEndEvent = function (event) {
              var _a, _b, _c, _d;
              _this.ts['te'] = new Date().getTime();
              var touches = event.changedTouches;
              var touchesInfo = [];
              for (var i = 0; i < touches.length; i++) {
                  var _e = touches[i], clientX = _e.clientX, clientY = _e.clientY, identifier = _e.identifier, force = _e.force;
                  var touchItem = {
                      touchStart: {},
                      touchMove: [],
                      touchEnd: {},
                  };
                  var currentTouchStartPointerInfo = _this.touchStartObject[identifier];
                  var currentTouchMovePointerInfo = _this.touchMoveObject[identifier];
                  // touchstart info
                  if (currentTouchStartPointerInfo) {
                      touchItem.touchStart = currentTouchStartPointerInfo;
                      delete _this.touchStartObject[identifier];
                  }
                  // touchmove info
                  if (currentTouchMovePointerInfo) {
                      touchItem.touchMove = currentTouchMovePointerInfo;
                      delete _this.touchMoveObject[identifier];
                  }
                  // touchend info
                  touchItem.touchEnd = {
                      clientX: Number(clientX.toFixed(2)),
                      clientY: Number(clientY.toFixed(2)),
                      timestamp: new Date().valueOf(),
                      force: force
                  };
                  touchesInfo.push(touchItem);
              }
              var isClick = touchesInfo[0] && touchesInfo[0].touchMove.length === 0;
              var formatData = _this.dataFormat(event);
              if (formatData) {
                  var moduleSection = void 0;
                  if (isClick) {
                      moduleSection = _this.generateModuleSection(_assign(_assign({ type: 'CLICK', timestamp: new Date().valueOf() }, formatData), { 
                          // touch event返回的clientX&clientY是undefined,在stringify时会被忽略，手动从touch里拿到对应值
                          clientX: (_b = (_a = touchesInfo[0]) === null || _a === void 0 ? void 0 : _a.touchEnd) === null || _b === void 0 ? void 0 : _b.clientX, clientY: (_d = (_c = touchesInfo[0]) === null || _c === void 0 ? void 0 : _c.touchEnd) === null || _d === void 0 ? void 0 : _d.clientY }), '19');
                  }
                  else {
                      moduleSection = _this.generateModuleSection(_assign(_assign({ type: 'TOUCH', timestamp: new Date().valueOf() }, formatData), { touchesInfo: touchesInfo }), '18');
                  }
                  _this.send(moduleSection);
              }
          };
          _this.urlChange = function () {
              setTimeout(function () {
                  if (!_this.weblog)
                      return;
                  var page = getMappingPage({ url: location.href }, _this.weblog.logConfig.urlMap).page;
                  if (page === _this.weblog.currentUrlPackage.page)
                      return;
                  // 触发旧页面离开
                  var now = new Date().valueOf();
                  var moduleSectionLeave = _this.generateModuleSection({
                      type: 'PAGE_LEAVE',
                      timestamp: now,
                      stay: now - _this.beginTime,
                  }, '23');
                  _this.send(moduleSectionLeave);
                  // 浏览器历史记录发生变化时，需判断新的url是否满足低端机的要求
                  if (isLowEnd()) {
                      _this.destroy();
                      return;
                  }
                  // 新页面上报
                  _this.beginTime = now; // 更新新页面初始时间
                  var moduleSectionEnter = _this.generateModuleSection({
                      type: 'PAGE_ENTER',
                      timestamp: now,
                      initTime: _this.beginTime, // sdk初始化时间
                  }, '21');
                  _this.send(moduleSectionEnter);
              });
          };
          // 数据组织
          _this.dataFormat = function (event) {
              var customData = null;
              var _a = event, target = _a.target, clientX = _a.clientX, clientY = _a.clientY;
              if (!target)
                  return;
              var tagName = target.tagName;
              // 顶级标签不采集
              if (['html', 'body'].indexOf(tagName.toLowerCase()) !== -1)
                  return;
              // 采集信息
              var xpath = getXpathFromNode(target);
              var innerText = target.innerText, nodeName = target.nodeName, attributes = target.attributes;
              // 序列化
              var attributesSerialize = {};
              for (var i = 0; i < attributes.length; i++) {
                  var _b = attributes[i], name_1 = _b.name, value = _b.value;
                  // 强制采集：自定义属性
                  if (name_1.indexOf('data-') !== -1) {
                      attributesSerialize[name_1] = value;
                  }
                  else {
                      attributesSerialize[name_1] = value;
                  }
              }
              return { xpath: xpath, innerText: innerText, nodeName: nodeName, attributesSerialize: attributesSerialize, clientX: clientX, clientY: clientY, customData: customData };
          };
          _this.generateModuleSection = function (options, eventIndex) {
              _this.ts['gs'] = new Date().getTime();
              var _a = _this.weblog, referUrlPackage = _a.referUrlPackage, cookie = _a.Utils.cookie, _b = _a.commonPackage, network_package = _b.network_package, device_package = _b.device_package, h5_extra_attr = _b.h5_extra_attr, app_package = _b.app_package, identity_package = _b.identity_package, sessionId = _a.sessionId;
              var estimateRate = '';
              if (_this.estimate && _this.estimate.usage !== undefined && _this.estimate.quota !== undefined) {
                  estimateRate = (_this.estimate.usage / _this.estimate.quota).toFixed(2);
              }
              var webglFD = getWeglFdData();
              var canvasFD = getCanvasFdData();
              var webglData = getWeglData(document);
              var ow = 'outerWidth';
              var iw = 'innerWidth';
              var oh = 'outerHeight';
              var ih = 'innerHeight';
              var nwd = '';
              try {
                  nwd = navigator.webdriver.toString();
              }
              catch (err) {
                  _this.pushException(err);
              }
              var nw = false;
              try {
                  nw = navigator.webdriver;
              }
              catch (err) {
                  _this.pushException(err);
              }
              var pha = '0';
              try {
                  if (window['_phantom'] || window['phantom'] || window['callPhantom']) {
                      pha = '1';
                  }
              }
              catch (err) {
                  _this.pushException(err);
              }
              var nw2 = undefined;
              try {
                  nw2 = navigator['w' + 'e' + 'b' + 'dr' + '' + 'iv' + 'er'];
              }
              catch (err) {
                  _this.pushException(err);
              }
              _this.ts['ge'] = new Date().getTime();
              var pcs = printCallStack.toString();
              var wfs = getWeglFdData.toString();
              var cfs = getCanvasFdData.toString();
              var mfs = getMathFingerprint.toString();
              var ffs = detectjsFiles.toString();
              var afs = audioFP.toString();
              var grs = gFr.toString();
              var els = eval.toString();
              var ows = Object.getOwnPropertyNames(window).toString();
              // let owss = getObProNameStr().toString();
              var kys = Object.keys.toString();
              var cis = document.cookie.toString();
              // let ciss = getdocCoStr();
              var moduleSection = {
                  1: referUrlPackage ? referUrlPackage : '',
                  2: location.href,
                  3: network_package && network_package.ip,
                  4: h5_extra_attr && h5_extra_attr.domain,
                  5: sessionId,
                  6: document && document.title || '',
                  7: cookie.parseCookieString(document && document.cookie || '', true),
                  8: getResolution(),
                  9: document && document.body && document.body.clientHeight || '',
                  10: document && document.body && document.body.clientWidth || '',
                  11: device_package && device_package.ua,
                  12: device_package && device_package.os_version,
                  13: app_package && app_package.language,
                  14: device_package && device_package.model,
                  16: identity_package && identity_package.user_id,
                  17: identity_package && identity_package.device_id,
                  24: _this.options.taskType,
                  25: _this.options.subTaskType,
                  26: '0',
                  28: sha1Encode(identity_package.device_id + (referUrlPackage ? referUrlPackage : '') + getResolution() + device_package.ua + location.href),
                  29: new URL(_this.reportUrl).pathname,
                  30: _this.options.host || 'ks',
                  // 第三期字段
                  // 30: position,
                  31: _this.battery && _this.battery.level,
                  32: estimateRate,
                  33: navigator.appCodeName,
                  34: navigator.appName,
                  35: navigator.appVersion,
                  36: navigator.platform,
                  37: JSON.stringify(navigator.languages),
                  //   38: JSON.stringify(navigator.plugins),
                  39: navigator.oscpu,
                  40: navigator.buildID,
                  41: navigator.productSub,
                  42: navigator.vendor,
                  43: navigator.vendorSub,
                  44: navigator.hardwareConcurrency,
                  90: _this.options.reserved ? _this.options.reserved : '',
                  50: navigator.maxTouchPoints,
                  51: navigator.doNotTrack ? navigator.doNotTrack : '',
                  52: navigator.cookieEnabled ? 1 : 0,
                  53: navigator.product,
                  54: navigator.onLine,
                  55: nw ? 1 : 0,
                  56: navigator.userAgent,
                  57: navigator.language ? navigator.language : '',
                  58: getNavigatorPlugins(navigator),
                  59: getNavigatorMimeTypes(navigator),
                  61: webglData['61'] ? webglData['61'] : '',
                  62: webglData['62'] ? webglData['62'] : '',
                  63: webglData['63'] ? webglData['63'] : '',
                  64: webglData['64'] ? webglData['64'] : '',
                  65: webglData['65'] ? webglData['65'] : '',
                  66: webglData['66'] ? webglData['66'] : '',
                  67: webglData['67'],
                  68: webglFD ? webglFD.hash : '',
                  69: canvasFD ? canvasFD.hash : '',
                  //70-74 预留一些audio使用
                  70: _this.auH,
                  // 75-79 预留一些检测自动化工具
                  75: nw2 ? '0' : '1',
                  76: nwd,
                  77: detectjsFiles(),
                  78: { w: getObjPropertys(window), n: getObjPropertys(window.navigator) },
                  79: printCallStack(),
                  80: (window[ow] - window[iw]) + '',
                  81: (window[oh] - window[ih]) + '',
                  82: {
                      pc: pcs.length, ph: md5(pcs),
                      wf: wfs.length, wh: md5(wfs),
                      cf: cfs.length, ch: md5(cfs),
                      mf: mfs.length, mh: md5(mfs),
                      ff: ffs.length, fh: md5(ffs),
                      af: afs.length, ah: md5(afs),
                      gr: grs.length, gh: md5(grs),
                      el: els.length, eh: md5(els),
                      ow: ows.length, oh: md5(ows),
                      // ox: owss.length, xh: md5(owss),
                      ky: kys.length, kh: md5(kys),
                      ci: cis.length, ih: md5(cis),
                      // cj: ciss.length, jh: md5(ciss),
                  },
                  //rtc
                  85: _this.rtcH,
                  86: _this.rtcS,
                  //screen
                  87: { w: window.screen.width, h: window.screen.height, c: window.screen.colorDepth, p: window.screen.pixelDepth },
                  //math
                  88: getMathFingerprint().h,
                  //timestamp
                  89: _this.ts,
                  //90 为预留字段
                  100: getCookieL(),
                  101: getStorage(),
                  102: getHisLen(),
                  103: getFS(),
                  104: {
                      ts: (new Date).getTime(),
                      cts: (new Date).getTime(),
                  },
                  105: pha,
                  106: _this.pers,
                  107: new Date().getTimezoneOffset() / 60,
                  108: _this.location ? _this.location : {},
                  // 109: getCallStack(),
              };
              if (eventIndex) {
                  moduleSection[eventIndex] = options;
              }
              return moduleSection;
          };
          _this.generateCoreModuleSection = function (options, eventIndex) {
              var _a = _this.weblog, referUrlPackage = _a.referUrlPackage, cookie = _a.Utils.cookie, _b = _a.commonPackage, network_package = _b.network_package, device_package = _b.device_package, _c = _b.identity_package, identity_package = _c === void 0 ? {} : _c, sessionId = _a.sessionId;
              var canvasFD = getCanvasFdData();
              var nwd = '';
              try {
                  nwd = navigator.webdriver.toString();
              }
              catch (err) {
                  _this.pushException(err);
              }
              var nw = false;
              try {
                  nw = navigator.webdriver;
              }
              catch (err) {
                  _this.pushException(err);
              }
              var nw2 = undefined;
              try {
                  nw2 = navigator['w' + 'e' + 'b' + 'dr' + '' + 'iv' + 'er'];
              }
              catch (err) {
                  _this.pushException(err);
              }
              var els = eval.toString();
              var cfs = getCanvasFdData.toString();
              var ffs = detectjsFiles.toString();
              var cis = document.cookie.toString();
              var moduleSection = {
                  1: referUrlPackage ? referUrlPackage : '',
                  2: location.href,
                  3: network_package && network_package.ip,
                  5: sessionId,
                  7: cookie.parseCookieString(document && document.cookie || '', true),
                  8: getResolution(),
                  11: device_package && device_package.ua,
                  16: identity_package && identity_package.user_id,
                  17: identity_package && identity_package.device_id,
                  28: sha1Encode(identity_package.device_id + (referUrlPackage ? referUrlPackage : '') + getResolution() + device_package.ua + location.href),
                  // 第三期字段
                  // 30: position,
                  33: navigator.appCodeName,
                  34: navigator.appName,
                  35: navigator.appVersion,
                  36: navigator.platform,
                  //   38: JSON.stringify(navigator.plugins),
                  55: nw ? 1 : 0,
                  56: navigator.userAgent,
                  69: canvasFD ? canvasFD.hash : '',
                  // 75-79 预留一些检测自动化工具
                  75: nw2 ? '0' : '1',
                  76: nwd,
                  77: detectjsFiles(),
                  79: printCallStack(),
                  82: {
                      cf: cfs.length, ch: md5(cfs),
                      ff: ffs.length, fh: md5(ffs),
                      el: els.length, eh: md5(els),
                      ci: cis.length, ih: md5(cis),
                  },
                  //timestamp
                  89: _this.ts,
                  102: getHisLen(),
                  108: _this.location ? _this.location : {},
                  // 109: getCallStack(),
              };
              if (eventIndex) {
                  moduleSection[eventIndex] = options;
              }
              return moduleSection;
          };
          _this.pushException = function (error) {
              _this.riskRadar && _this.riskRadar.pushException(error);
          };
          // 特意改成beforeunload，因为weblogger会在销毁时判断插件是否有'beforeUnolad'事件，这样会重复执行
          _this.beforeunload = function () {
              if (!_this.weblog)
                  return;
              var now = new Date().valueOf();
              var moduleSection = _this.generateModuleSection({
                  type: 'PAGE_LEAVE',
                  timestamp: now,
                  stay: now - _this.beginTime,
              }, '23');
              _this.send(moduleSection);
              // 清空当前日志队列
              _this.flush();
          };
          _this.destroy = function () {
              removeMonitor(window, 'onpagehide' in window ? 'pagehide' : 'beforeunload', _this.beforeunload);
              removeMonitor(window, urlChangeEventId, _this.urlChange);
              if (isMobile()) {
                  window.removeEventListener('touchstart', _this.touchStartEvent, true);
                  window.removeEventListener('touchmove', _this.touchMoveEvent, true);
                  window.removeEventListener('touchend', _this.touchEndEvent, true);
              }
              else {
                  // window.removeEventListener('click', this.clickEvent, true);
                  window.removeEventListener('mousedown', _this.mouseDownEvent, true);
                  window.removeEventListener('mousemove', _this.mouseMoveEvent, true);
                  window.removeEventListener('mouseup', _this.mouseUpEvent, true);
              }
              _this.batchWaitTimer && clearTimeout(_this.batchWaitTimer);
              window.removeEventListener('keydown', _this.keyDownHandler);
              window.removeEventListener('gamepadconnected', _this.gamepadConnectHandler);
          };
          _this.options = options || {};
          _this.ts['cs'] = new Date().getTime();
          audioFP().then(function (_a) {
              var hash = _a.hash;
              _this.auH = hash;
              _this.ts['cae'] = new Date().getTime();
          }).catch(function (error) {
              _this.pushException(error);
          });
          try {
              gFr(function (v) {
                  _this.rtcH = v.can;
                  _this.rtcS = v.sdp;
                  _this.ts['cre'] = new Date().getTime();
              });
          }
          catch (error) {
              _this.pushException(error);
          }
          _this.ts['ce'] = new Date().getTime();
          _this.loadTime = (new Date().getTime() - performanceTiming.navigationStart);
          try {
              getAllPermissions(function (pers) {
                  _this.pers = pers;
              });
          }
          catch (error) {
          }
          getLocation(function (location) {
              _this.location = location;
          });
          return _this;
      }
      RiskMgt.prototype.apply = function (weblog) {
          var _this = this;
          this.ts['as'] = new Date().getTime();
          // 必传参数校验
          if (!this.verifyParams())
              return;
          // 低端机不采集
          if (isLowEnd())
              return;
          if (!(weblog === null || weblog === void 0 ? void 0 : weblog.collect))
              return;
          this.weblog = weblog;
          // 默认值赋值
          this.options.switch = true;
          this.options.wait = 0;
          this.options.maxBatchLength = 10;
          this.options.enableNative = false;
          try {
              this.riskRadar = new riskRadar({ weblog: this.weblog });
              this.riskRadar.riskEvent && this.riskRadar.riskEvent('init', '', { ts: '' + this.loadTime });
          }
          catch (error) {
              this.pushException(error);
          }
          try {
              this.createEncryptDecryptWorker();
          }
          catch (error) {
              this.pushException(error);
          }
          var callbackFn = function () {
              _this.sendCoreData()
                  .then(function (_) { return __awaiter(_this, void 0, void 0, function () {
                  var battery, e_1, estimate, e_2;
                  var _this = this;
                  return __generator(this, function (_a) {
                      switch (_a.label) {
                          case 0:
                              _a.trys.push([0, 3, , 4]);
                              if (!navigator.getBattery) return [3 /*break*/, 2];
                              return [4 /*yield*/, navigator.getBattery()];
                          case 1:
                              battery = _a.sent();
                              if (battery) {
                                  this.battery = battery;
                                  this.battery.addEventListener('chargingchange', function () {
                                      var moduleSection = _this.generateModuleSection({
                                          type: 'CHARGINGCHANGGE',
                                          level: _this.battery.level,
                                          timestamp: new Date().valueOf(),
                                      }, 45);
                                      _this.send(moduleSection);
                                  });
                              }
                              _a.label = 2;
                          case 2: return [3 /*break*/, 4];
                          case 3:
                              e_1 = _a.sent();
                              error(e_1);
                              this.pushException(e_1);
                              return [3 /*break*/, 4];
                          case 4:
                              _a.trys.push([4, 7, , 8]);
                              if (!navigator.storage) return [3 /*break*/, 6];
                              return [4 /*yield*/, navigator.storage.estimate()];
                          case 5:
                              estimate = _a.sent();
                              if (estimate) {
                                  this.estimate = estimate;
                              }
                              _a.label = 6;
                          case 6: return [3 /*break*/, 8];
                          case 7:
                              e_2 = _a.sent();
                              error(e_2);
                              this.pushException(e_2);
                              return [3 /*break*/, 8];
                          case 8:
                              // 发送PV信息
                              if (this.options.switch) {
                                  // 上报完整数据
                                  this.sendWholeData();
                                  // 注册事件
                                  this.addEvent();
                                  // 注册业务事件
                                  this.addActivityEvent();
                              }
                              return [2 /*return*/];
                      }
                  });
              }); });
          };
          try {
              if (this.options.switchAsync) {
                  callbackFn();
                  this.getConfig(function () { });
              }
              else {
                  this.getConfig(callbackFn);
              }
          }
          catch (error) {
              this.pushException(error);
          }
          this.ts['ae'] = new Date().getTime();
      };
      // 上报核心数据
      RiskMgt.prototype.sendCoreData = function () {
          return __awaiter(this, void 0, void 0, function () {
              var yoda, canUse, moduleSection;
              return __generator(this, function (_a) {
                  switch (_a.label) {
                      case 0:
                          if (!this.options.switch) return [3 /*break*/, 3];
                          yoda = this.weblog.Utils.yoda;
                          if (!(this.options.enableNative && yoda)) return [3 /*break*/, 2];
                          return [4 /*yield*/, yoda.invoke('tool.canIUse', {
                                  namespace: 'weapon',
                                  name: 'recordJSScene',
                              })];
                      case 1:
                          canUse = (_a.sent()).canUse;
                          // console.log('yoda caniuse result:', result, canUse);
                          if (canUse) {
                              yoda.invoke('weapon.recordJSScene', {
                                  bussType: this.options.bussType,
                                  jsVersion: RM_VERSION,
                                  taskType: this.options.taskType,
                                  subTaskType: '1111', // 页面进入
                              });
                          }
                          _a.label = 2;
                      case 2:
                          this.reportUrl = getReportUrl(this.options);
                          moduleSection = this.generateCoreModuleSection({
                              type: 'PAGE_ENTER',
                              timestamp: new Date().valueOf(),
                              initTime: this.beginTime, // sdk初始化时间
                          }, '21');
                          this.send(moduleSection, true, CoreDataLoggerId);
                          _a.label = 3;
                      case 3: return [2 /*return*/];
                  }
              });
          });
      };
      // 发送完整数据
      RiskMgt.prototype.sendWholeData = function () {
          return __awaiter(this, void 0, void 0, function () {
              var moduleSection;
              return __generator(this, function (_a) {
                  if (this.options.switch) {
                      moduleSection = this.generateModuleSection({
                          type: 'PAGE_ENTER',
                          timestamp: new Date().valueOf(),
                          initTime: this.beginTime, // sdk初始化时间
                      }, '21');
                      this.send(moduleSection);
                  }
                  return [2 /*return*/];
              });
          });
      };
      // 注册事件监听
      RiskMgt.prototype.addEvent = function () {
          var _this = this;
          if (isMobile()) {
              // 是否需要记录多个手指
              window.addEventListener('touchstart', this.touchStartEvent, true);
              window.addEventListener('touchmove', this.touchMoveEvent, true);
              window.addEventListener('touchend', this.touchEndEvent, true);
          }
          else {
              // 是否需要记录哪个按键
              window.addEventListener('mousedown', this.mouseDownEvent, true);
              window.addEventListener('mousemove', this.mouseMoveEvent, true);
              window.addEventListener('mouseup', this.mouseUpEvent, true);
          }
          // 判断是否支持history API，优先使用history API。这是因为hash改变时也会触发popstate
          urlChangeEventId = this.weblog.Utils.ua.supportsPushState() ? 'popstate' : 'hashchange';
          addMonitor(window, urlChangeEventId, this.urlChange);
          addMonitor(window, 'onpagehide' in window ? 'pagehide' : 'beforeunload', this.beforeunload);
          // 键盘按下触发或者游戏控制器第一次连接或者第一次按下游戏键/摇杆的时候触发。
          window.addEventListener('keydown', this.keyDownHandler, true);
          window.addEventListener("gamepadconnected", this.gamepadConnectHandler, true);
          document.addEventListener('copy', function (event) {
              //剪切板数据
              var moduleSection = _this.generateModuleSection({
                  type: 'copy',
                  timestamp: new Date().valueOf(),
              }, 44);
              _this.send(moduleSection);
          });
          document.addEventListener('cut', function (event) {
              //剪切板数据
              var moduleSection = _this.generateModuleSection({
                  type: 'cut',
                  timestamp: new Date().valueOf(),
              }, 44);
              _this.send(moduleSection);
          });
          document.addEventListener('paste', function (event) {
              //剪切板数据
              var moduleSection = _this.generateModuleSection({
                  type: 'paste',
                  timestamp: new Date().valueOf(),
              }, 44);
              _this.send(moduleSection);
          });
          document.addEventListener('selectionchange', function (event) {
              var _a;
              //选中文本数据
              if (((_a = document.getSelection()) === null || _a === void 0 ? void 0 : _a.toString()) != '') {
                  // console.log(document.getSelection()?.toString());
                  var moduleSection = _this.generateModuleSection({
                      type: 'selectionchange',
                      timestamp: new Date().valueOf(),
                  }, 44);
                  _this.send(moduleSection);
              }
          });
      };
      RiskMgt.prototype.addActivityEvent = function () {
          var _this = this;
          var addEventListener = function (elementName, callback) {
              try {
                  if (!elementName || elementName === '' || !callback) {
                      return;
                  }
                  var list = document.getElementsByClassName(elementName);
                  var element;
                  if (list.length === 0) {
                      var idElement = document.getElementById(elementName);
                      if (!idElement) {
                          return;
                      }
                      element = idElement;
                  }
                  else {
                      element = list[0];
                  }
                  if (!element) {
                      return;
                  }
                  element.addEventListener('click', callback);
              }
              catch (error) {
                  _this.pushException(error);
              }
          };
          window.onload = function () {
              var elements = {
                  'like-item': 110,
                  'uninterested-item': 111,
                  'report-item': 112,
                  'profile-user-name': 113,
                  'short-video-follow': 114,
                  'submit-button': 115,
                  'video-switch-last': 116,
                  'video-switch-next': 117 // 下一条视频
              };
              var _loop_1 = function (name_2) {
                  addEventListener(name_2, function () {
                      var moduleSection = _this.generateModuleSection({
                          type: name_2,
                          timestamp: new Date().valueOf(),
                      }, elements[name_2]);
                      _this.send(moduleSection);
                  });
              };
              for (var name_2 in elements) {
                  _loop_1(name_2);
              }
          };
      };
      RiskMgt.prototype.verifyParams = function () {
          if (!this.options.bussType || typeof this.options.bussType !== 'string') {
              error('【风控sdk】请设置有效的bussType值!');
              return false;
          }
          if (!this.options.taskType || typeof this.options.taskType !== 'string') {
              error('【风控sdk】请设置有效的taskType值!');
              return false;
          }
          if (!this.options.subTaskType || typeof this.options.subTaskType !== 'string') {
              error('【风控sdk】请设置有效的subTaskType值!');
              return false;
          }
          return true;
      };
      RiskMgt.prototype.dataXhr = function (urlAndData, callback) {
          var _this = this;
          var url = urlAndData.url, data = __rest(urlAndData, ["url"]);
          var xhr = new XMLHttpRequest();
          xhr.onreadystatechange = function () {
              if (xhr.readyState === 4) {
                  if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304) {
                      if (xhr.responseText) {
                          var response = JSON.parse(xhr.responseText);
                          if (response.result === 1) {
                              _this.decryptFailedFunc = (function (responseData, callback) {
                                  return function () {
                                      var _a;
                                      var config = JSON.parse(decrypt(responseData));
                                      // console.log('config', config);
                                      // 设置参数
                                      _this.options.switch = config.switch;
                                      _this.options.maxBatchLength = config.maxBatchLength;
                                      _this.options.wait = config.wait;
                                      _this.options.reportUrls = (_a = config === null || config === void 0 ? void 0 : config.reportConfig) === null || _a === void 0 ? void 0 : _a.reportUrls;
                                      _this.options.enableNative = config.enableNative;
                                      callback();
                                  };
                              })(response.antispamPluginRsp, callback);
                              _this.decryptSuccessFunc = (function (callback) {
                                  return function (eventData) {
                                      var _a;
                                      _this.options.switch = eventData.switch;
                                      _this.options.maxBatchLength = eventData.maxBatchLength;
                                      _this.options.wait = eventData.wait;
                                      _this.options.reportUrls = (_a = eventData.reportConfig) === null || _a === void 0 ? void 0 : _a.reportUrls;
                                      _this.options.enableNative = eventData.enableNative;
                                      callback();
                                  };
                              })(callback);
                              _this.encryptDecryptWorker.postMessage({
                                  type: 'decrypt',
                                  info: response.antispamPluginRsp,
                              });
                          }
                          else {
                              callback();
                          }
                      }
                  }
                  else {
                      console.warn('Request was unsuccessful:' + xhr.status);
                      callback();
                  }
              }
          };
          xhr.open('POST', url);
          xhr.send(JSON.stringify(data));
      };
      RiskMgt.prototype.send = function (data, immediate, logId) {
          var _this = this;
          var _a;
          if (immediate === void 0) { immediate = false; }
          if (logId === void 0) { logId = LoggerId; }
          // console.log('send', data);
          if (!this.options.switch)
              return;
          if (immediate) {
              this.sendLogs([data], logId);
              return;
          }
          this.batchWaitTimer && clearTimeout(this.batchWaitTimer);
          if (!this.logQueue[logId]) {
              this.logQueue[logId] = [];
          }
          var logs = this.logQueue[logId];
          logs.push(data);
          // 积攒超过最大
          if (logs.length >= (((_a = this.options) === null || _a === void 0 ? void 0 : _a.maxBatchLength) || 0)) {
              this.flush(logId);
              return;
          }
          this.batchWaitTimer = setTimeout(function () {
              _this.flush(logId);
          }, this.options.wait);
          ++this.cnt;
          //采样上报
          if (this.cnt % 5 == 0) {
              this.riskRadar.riskEvent('cnt', '', { cnt: '' + (this.cnt) });
          }
      };
      RiskMgt.prototype.sendLogs = function (logs, logId) {
          if (logId === void 0) { logId = LoggerId; }
          if (!logs || !logs.length) {
              return;
          }
          this.buildLogPackage(logs, logId);
      };
      RiskMgt.prototype.createEncryptDecryptWorker = function () {
          var _this = this;
          this.encryptDecryptWorker = WorkerFactory();
          var type = 0;
          this.encryptDecryptWorker.onerror = function (event) {
              error('worker onerror', event.message);
              type++;
              if (type === 1) {
                  _this.encryptFailedFunc();
              }
              else if (type === 2) {
                  _this.decryptFailedFunc();
                  _this.encryptDecryptWorker.terminate();
              }
          };
          this.encryptDecryptWorker.onmessageerror = function (event) {
              error('worker onmessageerror', event.message);
              type++;
              if (type === 1) {
                  _this.encryptFailedFunc();
              }
              else if (type === 2) {
                  _this.decryptFailedFunc();
                  _this.encryptDecryptWorker.terminate();
              }
          };
          this.encryptDecryptWorker.onmessage = function (event) {
              type++;
              if (type === 1) {
                  _this.encryptSuccessFunc(event.data);
              }
              else if (type === 2) {
                  _this.decryptSuccessFunc(event.data);
                  _this.encryptDecryptWorker.terminate();
              }
          };
      };
      RiskMgt.prototype.buildLogPackage = function (logs, logId) {
          var _this = this;
          if (logId === void 0) { logId = LoggerId; }
          this.ts['ls'] = new Date().getTime();
          var cookie = this.weblog.Utils.cookie;
          var source = {};
          var data = {};
          data['1'] = this.weblog.commonPackage.identity_package.device_id;
          data['2'] = cookie.getCookie('kpn');
          data['3'] = logId;
          data['4'] = this.weblog.commonPackage.app_package.version_name;
          data['5'] = cookie.getCookie('kpn');
          data['6'] = this.options.bussType;
          data['7'] = this.weblog.commonPackage.app_package.platform;
          data['8'] = this.weblog.commonPackage.app_package.version_code;
          data['9'] = new Date().valueOf();
          data['10'] = '';
          data['11'] = this.options.primaryKey;
          data['12'] = getAppkeyAndSecretKey(this.options.env).appKey;
          data['13'] = this.options.pluginPackageName || '';
          data['14'] = RM_VERSION;
          data.module_section = logs;
          // console.log(data);
          source.flag = FLAG;
          if (this.firstSend) {
              this.firstSend = false;
              var encryptWorker = WorkerFactory$1();
              encryptWorker.onerror = function (event) {
                  error('worker onerror', event.message);
                  source.data = encrypt(JSON.stringify(data));
                  _this.weblog.Utils.io.sendData({ data: source, url: _this.reportUrl });
              };
              encryptWorker.onmessageerror = function (event) {
                  error('worker onmessageerror', event.message);
                  source.data = encrypt(JSON.stringify(data));
                  _this.weblog.Utils.io.sendData({ data: source, url: _this.reportUrl });
              };
              encryptWorker.onmessage = function (event) {
                  source.data = event.data;
                  _this.weblog.Utils.io.sendData({ data: source, url: _this.reportUrl });
              };
              encryptWorker.postMessage(JSON.stringify(data));
          }
          else {
              source.data = encrypt(JSON.stringify(data));
              this.weblog.Utils.io.sendData({ data: source, url: this.reportUrl });
          }
          this.ts['le'] = new Date().getTime();
      };
      RiskMgt.key = 'risk-mgt';
      return RiskMgt;
  }(BasePlugin));
  /**
   * 如果使用了 bootstrap 则自动注册插件
   */
  autoRegister(RiskMgt, 'riskMgt');

  return RiskMgt;

}));
//# sourceMappingURL=riskMgt.js.map
