/**
 * @file 这里进行一些对底层的封装，底层包括：
 * 1. 中间件机制；
 * 2. 对 perf API 的繁杂处理；
 * 3. 对 weblogger 上报的封装；
 * @author guwanpo@kuaishou.com
 */
import type { HttpWeblogInstance } from "../../types/index";
import type { KVPair, RadarOptions, RadarMonitor } from './interface';
import type { RadarPluginConstructor } from './plugin';
import { BasePlugin } from '../base';
export declare class RadarRoot extends BasePlugin {
    weblog: HttpWeblogInstance;
    private plugins;
    private logQueue;
    private queueConfig;
    private batchTimer;
    private radarSessionId;
    private currentUrlPackage;
    options: RadarOptions;
    isUsingLegacy: boolean | null;
    isUsingDetachedReport: boolean | null;
    ignoreList: string[];
    constructor(options: RadarOptions);
    protected use(plugin: RadarPluginConstructor<RadarOptions>, ctx: RadarMonitor): void;
    apply(weblog: HttpWeblogInstance): void;
    created(): void;
    destroy(): void;
    flush(): void;
    decorateLog(kv: KVPair): void;
    logCollect(kv: KVPair): void;
    addRadarStatEvent(log: any): boolean;
    /**
     * 生成nano id
     * 目前radarsessionid生成逻辑与weblog相同，防止weblog修改，雷达自身保存一份
     * @return {string} 16长度的字符串
     */
    private nanoId;
}
