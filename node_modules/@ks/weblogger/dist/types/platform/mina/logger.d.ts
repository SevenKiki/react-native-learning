import type { ReportEvent } from "../../core/logger";
import type { SendCallback, LoggerSender } from "../../config/types";
import type { CommonPackage } from './common';
import { BatchLog as BaseLogger } from "../../core/logger";
import type { ResponseType } from "../../io/types";
export default class Logger extends BaseLogger {
    continueSend: Boolean;
    sendEffectiveTime: undefined | number;
    baseSendData: LoggerSender;
    constructor(config: any, commonPackage: CommonPackage);
    getResponseSamplingStorage(): void;
    sendLogs(logs: ReportEvent[], callback?: SendCallback): boolean;
    /**
     * 根据配置生成上报的 url 地址
     */
    updateUrls(url?: string): string | undefined;
    shouldSendPackage(): any;
    setResponseSamplingConfig(responsePromise?: Promise<ResponseType | undefined>): void;
    flush: (callback?: SendCallback) => void;
    send(data: ReportEvent, immediate?: boolean, callback?: SendCallback): void;
    completeLog(log: any): any;
}
