import { BaseCollect, RADAR_KEY, RadarCore } from '@ks-radar/radar-util';
import { PluginConfig, ReportedMetrics, PageMainElMap } from './type';
export default class RadarSpaFmpCollect extends BaseCollect {
    /** 数据上报的key */
    static key: RADAR_KEY;
    /** 是否打印数据 */
    private isDebugger?;
    /** 传入的vue-router */
    VueRouterInstance?: any;
    /** 每个页面核心模块的css query */
    pageMainElMap: PageMainElMap;
    /** 进入router beforeEach的时间戳 */
    private routerBeforeachTimestamp;
    /** 页面核心模块渲染完成的时间戳 */
    private contentRendedTimestamp;
    /** 页面mounted的时间戳 */
    private sffpTimestamp;
    /** 记录浏览器第一次打开时的页面route path */
    firstRoutePath: string;
    /** 记录页面是否已经切换过 */
    pageSwitched: boolean;
    /** 记录已上报的核心指标 */
    reportedMetrics: ReportedMetrics;
    /** 雷达load插件 */
    private navCollectInstance;
    /** 是否上报RPV */
    private enableReportRpv?;
    constructor(data: {
        core?: RadarCore;
        navCollect?: any;
        sampling?: number;
        router?: any;
        config: PluginConfig;
    });
    /**
     * 更新依赖的外部实例
     */
    updateDependence(params: {
        core?: RadarCore;
        navCollect?: any;
    }): void;
    /** 初始化采集器 */
    private init;
    /**
     * route改动调用的api，未传入router时可用
     * 若没有在router改变时调用该方法，会引起fmp/sfmp/pv等获取不准确，谨慎使用
     * @param routePath 当前页面的路由
     */
    routeChange(routePath: string): void;
    /**
     * 上报spa的路由改变次数，rpv
     * @param extendInfo extra_info
     */
    reportRpv(extendInfo?: {}): void;
    /**
     * 进入页面前初始化
     * @param currentRoutePath 当前页面的路由path
     */
    private metricReportInit;
    /**
     * 上报spa的指标：fmp、sfmp、ffp、sffp
     * @param currentRoutePath 当前页面路由path
     * @param extendInfo 雷达extra_info字段
     */
    spa: (currentRoutePath?: string, extendInfo?: {}) => void;
    /**
     * 上报FMP
     * @param currentRoutePath 当前页面的路由path
     * @param timestamp 用户自定义的发生fmp时的时间戳
     */
    fmp: (currentRoutePath?: string, timestamp?: number) => void;
    /**
     * 上报SFMP
     * @param currentRoutePath 当前页面的路由path
     * @param extendInfo 雷达extra_info字段
     * @param timestamp 外部自定义发生sfmp的时间戳
     */
    sfmp: (currentRoutePath?: string, extendInfo?: {}, timestamp?: number) => void;
    /**
     * 上报FFP
     * @param currentRoutePath 当前页面的路由path
     * @param extendInfo 雷达extra_info字段
     */
    ffp: (currentRoutePath?: string, extendInfo?: {}) => void;
    /**
     * 上报SFFP
     * @param currentRoutePath 当前页面的路由path
     * @param extendInfo 雷达extra_info字段
     */
    sffp: (currentRoutePath: string, extendInfo?: {}) => void;
    /**
     * 检测页面是否切换过
     * @param currentRoutePath 当前页面的路由path
     */
    private checkPageSwitched;
    /**
     * 检测页面是否渲染完成
     * @param currentRoutePath 当前页面的路由path
     */
    checkPageRendered: (currentRoutePath: string, callback: () => void) => void;
    /**
     * 监听el元素是否渲染完
     * @param el 需要监听的元素
     * @param callback 元素渲染完成后回调函数
     */
    domObserve: (el: Element, callback: (mutationsList: MutationRecord[]) => void) => void;
}
