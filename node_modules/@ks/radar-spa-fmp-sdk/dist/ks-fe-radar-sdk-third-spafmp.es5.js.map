{"version":3,"file":"ks-fe-radar-sdk-third-spafmp.es5.js","sources":["../node_modules/@ks-radar/radar-util/dist/index.es.js","../src/ks-fe-radar-sdk-third-spafmp.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\n\nfunction consoleLog() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    try {\r\n        var log = console === null || console === void 0 ? void 0 : console.log;\r\n        return log && log.call.apply(log, __spreadArray([console, 'radar:'], __read(args), false));\r\n    }\r\n    catch (e) {\r\n        return;\r\n    }\r\n}\r\nfunction consoleWarn() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    try {\r\n        var warn = console === null || console === void 0 ? void 0 : console.warn;\r\n        return warn && warn.call.apply(warn, __spreadArray([console, 'radar:'], __read(args), false));\r\n    }\r\n    catch (e) {\r\n        return;\r\n    }\r\n}\r\nfunction consoleError() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    try {\r\n        var error = console === null || console === void 0 ? void 0 : console.error;\r\n        return error && error.call.apply(error, __spreadArray([console, 'radar:'], __read(args), false));\r\n    }\r\n    catch (e) {\r\n        return;\r\n    }\r\n}\n\n/**\r\n * @file 中间件管理\r\n */\r\n/**\r\n * 执行中间件\r\n * @param middlewares\r\n * @returns\r\n */\r\nfunction compose(middlewares) {\r\n    return function (context, next) {\r\n        var index = -1;\r\n        return dispatch(0);\r\n        function dispatch(i) {\r\n            if (i <= index) {\r\n                return new Error('`next` 被重复调用');\r\n            }\r\n            index = i;\r\n            var fn = middlewares[i];\r\n            if (i === middlewares.length)\r\n                fn = next;\r\n            if (!fn)\r\n                return;\r\n            try {\r\n                return fn(context, dispatch.bind(null, i + 1));\r\n            }\r\n            catch (err) {\r\n                return err;\r\n            }\r\n        }\r\n    };\r\n}\r\n/**\r\n * 中间件管理器\r\n *\r\n * @example\r\n * const request = new MiddlewareManager((context, next)=>{\r\n *   const {url, ...options} = context\r\n *   return fetch(context.url, options)\r\n * })\r\n *\r\n * request.use((context, next)=>{\r\n *   if(!context.method) context.method = 'GET'\r\n *   context.headers = {\r\n *     'content-type': 'application/json',\r\n *     ...context.headers\r\n *   }\r\n *   return next()\r\n * })\r\n *\r\n * request.invoke({\r\n *   url: 'https://liusong.kproxy.corp.kuaishou.com/abc'\r\n * })\r\n */\r\nvar MiddlewareManager = /** @class */ (function () {\r\n    function MiddlewareManager() {\r\n        var _a;\r\n        var middleware = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            middleware[_i] = arguments[_i];\r\n        }\r\n        this.middlewares = [];\r\n        (_a = this.middlewares).push.apply(_a, __spreadArray([], __read(middleware), false));\r\n    }\r\n    /**\r\n     * 添加使用一个新的中间件\r\n     * @param middlewares\r\n     */\r\n    MiddlewareManager.prototype.use = function () {\r\n        var _a;\r\n        var middlewares = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            middlewares[_i] = arguments[_i];\r\n        }\r\n        var defaultMiddleware = this.middlewares.pop();\r\n        (_a = this.middlewares).push.apply(_a, __spreadArray([], __read(middlewares), false));\r\n        this.middlewares.push(defaultMiddleware);\r\n    };\r\n    /**\r\n     * 执行所有已添加的中间件\r\n     * @param context\r\n     * @returns\r\n     */\r\n    MiddlewareManager.prototype.invoke = function (context) {\r\n        var fn = compose(this.middlewares);\r\n        return fn(context);\r\n    };\r\n    return MiddlewareManager;\r\n}());\n\n// 采样控制 迁移自radar.ts 子类重写该方法\r\nfunction samplingControl(sampling) {\r\n    if (sampling === null || typeof sampling !== 'number') {\r\n        return false;\r\n    }\r\n    // 计算随机数\r\n    var rand = Math.random();\r\n    return rand < sampling;\r\n}\n\nvar RADAR_KEY;\r\n(function (RADAR_KEY) {\r\n    // 页面加载监控\r\n    RADAR_KEY[\"LOAD\"] = \"load\";\r\n    // 静态资源监控\r\n    RADAR_KEY[\"RES\"] = \"resource\";\r\n    // API 性能监控\r\n    RADAR_KEY[\"API\"] = \"api\";\r\n    // 异常\r\n    RADAR_KEY[\"ERROR\"] = \"error\";\r\n    // 脚本自身上报异常\r\n    RADAR_KEY[\"SDK_ERROR\"] = \"sdk_error\";\r\n    // 用户自定义性能监控\r\n    RADAR_KEY[\"CUSTOM\"] = \"custom\";\r\n    // 批量日志，用于处理批量情况\r\n    RADAR_KEY[\"BATCH\"] = \"batch\";\r\n    // 事件\r\n    RADAR_KEY[\"EVENT\"] = \"event\";\r\n})(RADAR_KEY || (RADAR_KEY = {}));\n\nvar BaseCollect = /** @class */ (function () {\r\n    function BaseCollect(options) {\r\n        if (options === void 0) { options = {}; }\r\n        if (options === undefined) {\r\n            throw new Error('radar error 100');\r\n        }\r\n        if (!options.key) {\r\n            throw new Error('radar error 101');\r\n        }\r\n        if (options.core &&\r\n            (typeof options.core.sampleData !== 'object' || typeof options.core.collect !== 'function')) {\r\n            throw new Error('radar error 121');\r\n        }\r\n        this.baseOptions = options;\r\n        this.key = options.key;\r\n        this.version = options.version;\r\n        this.name = options.name;\r\n        if (options.core) {\r\n            this.core = options.core;\r\n            this.sampling = this.getSample(options.sampling);\r\n            this.sampling !== undefined && (this.isHit = this.samplingControl(this.sampling));\r\n        }\r\n    }\r\n    BaseCollect.prototype.updateCore = function (core) {\r\n        if (typeof core.sampleData !== 'object' || typeof core.collect !== 'function') {\r\n            throw new Error('radar error 121');\r\n        }\r\n        this.core = core;\r\n        this.sampling = this.getSample(this.baseOptions.sampling);\r\n        this.sampling && (this.isHit = this.samplingControl(this.sampling));\r\n    };\r\n    // 获取采样率\r\n    BaseCollect.prototype.getSample = function (sampling) {\r\n        var _a, _b, _c, _d;\r\n        if (sampling === void 0) { sampling = 1; }\r\n        var coreSample = (_a = this.core) === null || _a === void 0 ? void 0 : _a.sampleData.core;\r\n        if (this.key === RADAR_KEY.LOAD) {\r\n            return coreSample;\r\n        }\r\n        // 校验采样率\r\n        if (typeof sampling !== 'number' || sampling < 0 || sampling > 1) {\r\n            consoleWarn(\"102\\uFF0C\".concat(this.key, \"\\uFF0C\\u91C7\\u7528Core\\u7684\\u91C7\\u6837\\u7387\").concat((_b = this.core) === null || _b === void 0 ? void 0 : _b.sampleData.core));\r\n            return coreSample;\r\n        }\r\n        // 如果配置的采样率大于core的采样率 直接使用core的采样率，否则按照core换算\r\n        var keySample = ((_c = this.core) === null || _c === void 0 ? void 0 : _c.isInYoda)\r\n            ? ((_d = this.core) === null || _d === void 0 ? void 0 : _d.sampleData[this.key]) === undefined\r\n                ? 1\r\n                : this.core.sampleData[this.key]\r\n            : sampling;\r\n        if (coreSample && keySample > coreSample) {\r\n            consoleWarn(\"115\\uFF0C\".concat(this.key));\r\n            return coreSample;\r\n        }\r\n        else {\r\n            return keySample;\r\n        }\r\n    };\r\n    // 判断是否采样\r\n    BaseCollect.prototype.samplingControl = function (sampling) {\r\n        var _a;\r\n        return ((_a = this.core) === null || _a === void 0 ? void 0 : _a.sampleData.isHit) && samplingControl(sampling / this.core.sampleData.core);\r\n    };\r\n    BaseCollect.prototype.baseCollect = function (data) {\r\n        if (!this.core) {\r\n            consoleWarn(\"110,\".concat(this.key));\r\n        }\r\n        else if (this.isHit) {\r\n            var value_1 = data.value || {};\r\n            value_1 = Object.keys(value_1)\r\n                .filter(function (key) { return value_1[key] !== null && value_1[key] !== undefined; })\r\n                .reduce(function (acc, key) {\r\n                var _a;\r\n                return (__assign(__assign({}, acc), (_a = {}, _a[key] = value_1[key], _a)));\r\n            }, {});\r\n            this.core.collect(data.key || this.key, __assign(__assign({}, data.dimension), { sample_rate: this.sampling, event_client_timestamp: handleNumber(Date.now()), collect_version: this.version, collect_name: this.name }), value_1);\r\n        }\r\n        else {\r\n            consoleWarn(\"105,\".concat(this.key, \"\\uFF1A\").concat(this.sampling));\r\n        }\r\n    };\r\n    return BaseCollect;\r\n}());\n\n// TODO下面这个暂时不能这么用，因为计量方式和perfirmanceTiming不一样\r\n// export default performanceNavigationTiming || performanceTiming || null;\r\nfunction navigationTiming() {\r\n    var perf = typeof window !== 'undefined' ? window.performance : null;\r\n    if (perf && perf.timing) {\r\n        if (typeof perf.timing.toJSON === 'function') {\r\n            var performanceTiming = perf.timing.toJSON();\r\n            if (performanceTiming && !performanceTiming.redirectStart) {\r\n                performanceTiming.redirectStart = performanceTiming.navigationStart;\r\n            }\r\n            return performanceTiming;\r\n        }\r\n        return perf.timing;\r\n    }\r\n    return null;\r\n}\n\nfunction perfMapTiming(perfMap, timing) {\r\n    var allPerf = {};\r\n    // 批量处理日志生成\r\n    Object.keys(perfMap).forEach(function (k) {\r\n        var key = k;\r\n        var value = calculate(key, perfMap, timing);\r\n        // 可能存在一些值取不到的情况，取不到的话就不上报\r\n        if (value != null) {\r\n            allPerf[key] = value;\r\n        }\r\n    });\r\n    return allPerf;\r\n}\r\nfunction calculate(key, perfMap, timing) {\r\n    var perf = perfMap[key];\r\n    if (!perf) {\r\n        throw new Error(\"\\u3010Radar Util\\u3011 perf key \".concat(key, \" is unexpected!\"));\r\n    }\r\n    // 当资源有缓存时，好多数据为 0，不进行无意义的上报\r\n    if (perf.cachedSkip) {\r\n        var cached = calculate('cached', perfMap, timing);\r\n        if (cached)\r\n            return;\r\n    }\r\n    if (typeof perf.custom === 'function') {\r\n        var value_1 = perf.custom(key, timing);\r\n        return value_1;\r\n    }\r\n    var end = perf.end, start = perf.start;\r\n    // 由于webview数据上报的时候 不会带上performance.time导致timing['fmp']之类的数据为NaN无法计算\r\n    // 计算webview指标时 timing[end as keyof PerfTime] 可能为undefined 故兼容一下\r\n    // @ts-ignore\r\n    var endPoint = +timing[end] || 0;\r\n    // @ts-ignore\r\n    var startPoint = +timing[start] || 0;\r\n    var value = endPoint - startPoint;\r\n    // 如果有一个节点是undefined，且不收集undefined的情况，则不上报\r\n    if (perf.notCatchIfUndefined &&\r\n        (timing[end] === undefined || timing[start] === undefined)) {\r\n        return;\r\n    }\r\n    return value;\r\n}\r\nfunction handleNumber(value) {\r\n    if (typeof value === 'number') {\r\n        return value.toFixed();\r\n    }\r\n    return value;\r\n}\n\n/**\r\n * 事件监听兼容处理\r\n * @param {*} evtTarget  事件监听目标\r\n * @param {*} evtName   事件名\r\n * @param {*} callback  回调函数\r\n * @param {*} options  相关参数设置\r\n */\r\nfunction addMonitor(evtTarget, evtName, callback, options) {\r\n    if ('attachEvent' in evtTarget) {\r\n        return evtTarget.attachEvent('on' + evtName, callback);\r\n    }\r\n    return evtTarget.addEventListener(evtName, callback, options);\r\n}\r\n/**\r\n * 事件监听解绑兼容处理\r\n * @param {*} evtTarget  事件监听目标\r\n * @param {*} evtName   事件名\r\n * @param {*} callback  事件回调\r\n */\r\nfunction removeMonitor(evtTarget, evtName, callback, options) {\r\n    if ('attachEvent' in evtTarget) {\r\n        return evtTarget.detachEvent('on' + evtName, callback);\r\n    }\r\n    return evtTarget.removeEventListener(evtName, callback, options);\r\n}\n\nvar reProtocol = /^(https?:)?\\/\\//;\r\nfunction isInURLWhiteList(url, ignoreList) {\r\n    if (!url)\r\n        return false;\r\n    var domainPath = url.replace(reProtocol, '');\r\n    return ignoreList.some(function (whiteURL) {\r\n        return domainPath.indexOf(whiteURL.replace(reProtocol, '')) >= 0;\r\n    });\r\n}\r\n/**\r\n * 判断后缀\r\n * @param name\r\n * @returns\r\n */\r\nfunction suffix(name) {\r\n    if (typeof name !== 'string') {\r\n        return '';\r\n    }\r\n    try {\r\n        var index = name.lastIndexOf('.');\r\n        return name.substr(index + 1);\r\n    }\r\n    catch (_a) {\r\n        return '';\r\n    }\r\n}\r\nfunction hasFmp() {\r\n    return performance.timing.radarFmp > 0;\r\n}\r\nfunction isAllNumber(data) {\r\n    if (typeof data !== 'object')\r\n        return false;\r\n    return Object.keys(data).every(function (item) { return typeof data[item] === 'number'; });\r\n}\r\nfunction isAllString(data) {\r\n    if (typeof data !== 'object')\r\n        return false;\r\n    return Object.keys(data).every(function (item) { return typeof data[item] === 'string'; });\r\n}\r\nvar getUAList = function () {\r\n    var ua = window.navigator.userAgent;\r\n    var uaList = {};\r\n    ua.split(' ').map(function (item) {\r\n        var arr = item.split('/');\r\n        uaList[arr[0]] = arr[1];\r\n    });\r\n    return uaList;\r\n};\r\n// 获取webview_type\r\nvar getWebViewType = function () {\r\n    var ua = window.navigator.userAgent;\r\n    if (ua.indexOf('Android') !== -1) {\r\n        return 'WebView';\r\n    }\r\n    if (ua.indexOf('iPhone') !== -1) {\r\n        var uaList = getUAList();\r\n        if (uaList.Yoda && uaList.WebViewType === 'WK') {\r\n            return 'YodaWKWebView';\r\n        }\r\n        if (!uaList.Yoda && uaList.WebView === 'WKWebView') {\r\n            return 'WKWebView';\r\n        }\r\n        return 'UIWebView';\r\n    }\r\n    return '';\r\n};\n\nfunction isScriptError(e) {\r\n    return e.message || e.lineno != null;\r\n}\n\nfunction getUniqueID(prefix) {\r\n    if (prefix === void 0) { prefix = ''; }\r\n    return \"__radar_\".concat(prefix).concat(Math.random().toString(36).substring(2, 8));\r\n}\r\n// 复制头部\r\nfunction convertHeaders(headers, dest) {\r\n    if (dest == null) {\r\n        dest = {};\r\n    }\r\n    switch (typeof headers) {\r\n        case 'object': {\r\n            var tempHeaders = [];\r\n            // tslint:disable-next-line:forin\r\n            for (var key in headers) {\r\n                var value = headers[key];\r\n                var name_1 = key.toLowerCase();\r\n                tempHeaders.push(\"\".concat(name_1, \":\\t\").concat(value));\r\n            }\r\n            return tempHeaders.join('\\n') + '\\n';\r\n        }\r\n        case 'string': {\r\n            var tempHeaders = headers.split('\\n');\r\n            // tslint:disable-next-line:ban-comma-operator\r\n            for (var _i = 0, _len = tempHeaders.length; _i < _len; _i++) {\r\n                var header = tempHeaders[_i];\r\n                if (/([^:]+):\\s*(.+)/.test(header)) {\r\n                    // tslint:disable-next-line:no-conditional-assignment\r\n                    var _ref = RegExp.$1;\r\n                    var name_2 = _ref != null ? _ref.toLowerCase() : void 0;\r\n                    var value = RegExp.$2;\r\n                    if (name_2 && dest[name_2] == null) {\r\n                        dest[name_2] = value;\r\n                    }\r\n                }\r\n            }\r\n            return dest;\r\n        }\r\n    }\r\n}\r\n/**\r\n *\r\n * @param beforeHook 在send时触发，可得到request\r\n * @param afterHook 在readystatechange 且 readyState = 4 时触发, 可得到request和response\r\n * @returns\r\n */\r\nfunction hookXML(beforeHook, afterHook) {\r\n    var _XMLHttpRequest = window.XMLHttpRequest;\r\n    if (!_XMLHttpRequest) {\r\n        consoleError('118');\r\n        return false;\r\n    }\r\n    window.XMLHttpRequest = function () {\r\n        var xhr = new _XMLHttpRequest();\r\n        xhr._radarRequest = Object.create(null);\r\n        xhr._radarResponse = Object.create(null);\r\n        var id = getUniqueID();\r\n        xhr._radarRequest.id = id;\r\n        var readHead = function () {\r\n            var key, name, val;\r\n            xhr._radarResponse.status = xhr.status;\r\n            xhr._radarResponse.statusText = xhr.statusText;\r\n            var _ref = convertHeaders(xhr.getAllResponseHeaders());\r\n            for (key in _ref) {\r\n                val = _ref[key];\r\n                if (xhr._radarResponse && xhr._radarResponse.headers && !xhr._radarResponse.headers[key]) {\r\n                    name = key.toLowerCase();\r\n                    xhr._radarResponse.headers[name] = val;\r\n                }\r\n            }\r\n        };\r\n        var readBody = function () {\r\n            if (!xhr.responseType || xhr.responseType === 'text') {\r\n                xhr._radarResponse.text = xhr.responseText;\r\n                xhr._radarResponse.data = xhr.responseText;\r\n                try {\r\n                    xhr._radarResponse.xml = xhr.responseXML;\r\n                }\r\n                catch (_error) {\r\n                    //\r\n                }\r\n            }\r\n            else if (xhr.responseType === 'document') {\r\n                xhr._radarResponse.xml = xhr.responseXML;\r\n                xhr._radarResponse.data = xhr.responseXML;\r\n            }\r\n            else {\r\n                xhr._radarResponse.data = xhr.response;\r\n            }\r\n            if ('responseURL' in xhr) {\r\n                xhr._radarResponse.finalUrl = xhr.responseURL;\r\n            }\r\n        };\r\n        xhr.addEventListener('readystatechange', function () {\r\n            switch (xhr.readyState) {\r\n                case 4: {\r\n                    if (typeof afterHook === 'function') {\r\n                        readHead();\r\n                        readBody();\r\n                        afterHook(xhr._radarRequest, xhr._radarResponse);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n        if (typeof xhr.open === 'function') {\r\n            var _open_1 = xhr.open;\r\n            xhr.open = function (method, url, async, user, pass) {\r\n                // eslint-disable-next-line prefer-rest-params\r\n                var args = [].slice.call(arguments);\r\n                this._radarRequest = __assign({ method: method, url: url, async: async, user: user, pass: pass }, this._radarRequest);\r\n                this._radarResponse.headers = {};\r\n                return _open_1.apply(this, args);\r\n            };\r\n        }\r\n        if (typeof xhr.send === 'function') {\r\n            var _send_1 = xhr.send;\r\n            xhr.send = function () {\r\n                // eslint-disable-next-line prefer-rest-params\r\n                var args = [].slice.call(arguments);\r\n                if (typeof beforeHook === 'function') {\r\n                    beforeHook(this._radarRequest);\r\n                }\r\n                return _send_1.apply(this, args);\r\n            };\r\n        }\r\n        return xhr;\r\n    };\r\n    ['DONE', 'HEADERS_RECEIVED', 'LOADING', 'OPENED', 'UNSENT'].forEach(function (staticPropName) {\r\n        window.XMLHttpRequest[staticPropName] = _XMLHttpRequest[staticPropName];\r\n    });\r\n    window.XMLHttpRequest.prototype = _XMLHttpRequest.prototype;\r\n    return function () {\r\n        if (_XMLHttpRequest) {\r\n            window.XMLHttpRequest = _XMLHttpRequest;\r\n        }\r\n    };\r\n}\r\n/**\r\n * 拦截fetch部分\r\n * @param beforeHook\r\n * @param afterHook\r\n * @returns\r\n */\r\nfunction hookFetch(beforeHook, afterHook) {\r\n    // @ts-ignore 兼容Worker的情况\r\n    var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';\r\n    var fetchIntercept = fetchAttach(ENVIRONMENT_IS_WORKER ? self : window);\r\n    fetchIntercept &&\r\n        fetchIntercept.register({\r\n            request: function (url, config) {\r\n                if (typeof beforeHook === 'function') {\r\n                    beforeHook(url);\r\n                }\r\n            },\r\n            response: function (response, request) {\r\n                if (typeof afterHook === 'function') {\r\n                    afterHook(request, response);\r\n                }\r\n            },\r\n            responseError: function (error, request) {\r\n                if (typeof afterHook === 'function') {\r\n                    // fetch的error是网络断开或者服务端没连上。\r\n                    // 这种情况下只会返回一个字符串，所以需要自行拼接response\r\n                    var response = {\r\n                        status: 0,\r\n                        statusText: error,\r\n                    };\r\n                    afterHook(request, response);\r\n                }\r\n            },\r\n        });\r\n    return fetchIntercept === null || fetchIntercept === void 0 ? void 0 : fetchIntercept.unRegister;\r\n}\r\nvar interceptors = [];\r\n/**\r\n * fetch的拦截器，修改原生的fetch请求，\r\n * 利用fetch返回的的promise的特性，\r\n * 将拦截器注入fetch前和fetch后\r\n */\r\nfunction interceptor(fetch) {\r\n    var nativeArgs = [];\r\n    for (var _a = 1; _a < arguments.length; _a++) {\r\n        nativeArgs[_a - 1] = arguments[_a];\r\n    }\r\n    var reversedInterceptors = interceptors.reduce(function (array, interceptor) { return [interceptor].concat(array); }, []);\r\n    var _radarRequest = typeof nativeArgs[0] === 'string' ? new Request(nativeArgs[0], nativeArgs[1]) : nativeArgs[0];\r\n    _radarRequest.id = getUniqueID();\r\n    reversedInterceptors.forEach(function (_a) {\r\n        var request = _a.request;\r\n        _radarRequest = request(_radarRequest) || _radarRequest;\r\n    });\r\n    // Register fetch call\r\n    // @ts-ignore\r\n    var promise = fetch.apply(void 0, __spreadArray([], __read(nativeArgs), false));\r\n    var _radarResponse;\r\n    return promise\r\n        .then(function (res) {\r\n        res = res.clone();\r\n        _radarResponse = res;\r\n        var contentType = res.headers.get('content-type');\r\n        if (contentType &&\r\n            (contentType.indexOf('application/json') > -1 || contentType.indexOf('text/html') > -1)) {\r\n            return res.clone().text();\r\n        }\r\n        // 只处理了text类型和json类型\r\n        return '[object Object]';\r\n    })\r\n        .then(function (res) {\r\n        var responseClone = _radarResponse.clone();\r\n        // @ts-ignore\r\n        responseClone.data = res;\r\n        reversedInterceptors.forEach(function (_a) {\r\n            var response = _a.response;\r\n            if (response) {\r\n                responseClone = response(responseClone, _radarRequest) || responseClone;\r\n            }\r\n        });\r\n        return _radarResponse.clone();\r\n    }, function (error) {\r\n        reversedInterceptors.forEach(function (_a) {\r\n            var responseError = _a.responseError;\r\n            if (responseError) {\r\n                error = responseError(error, _radarRequest) || error;\r\n            }\r\n        });\r\n        throw error;\r\n    });\r\n}\r\nfunction fetchAttach(env) {\r\n    // Make sure fetch is available in the given environment\r\n    if (typeof env.fetch !== 'function') {\r\n        return null;\r\n    }\r\n    var nativeFetch = env.fetch;\r\n    // replace fetch in env (window)\r\n    env.fetch = (function (fetch) {\r\n        return function () {\r\n            var args = [];\r\n            for (var _a = 0; _a < arguments.length; _a++) {\r\n                args[_a] = arguments[_a];\r\n            }\r\n            return interceptor.apply(void 0, __spreadArray([fetch], __read(args), false));\r\n        };\r\n    })(env.fetch);\r\n    return {\r\n        register: function (interceptor) {\r\n            interceptors.push(interceptor);\r\n            // return unregister function\r\n            return function () {\r\n                var index = interceptors.indexOf(interceptor);\r\n                if (index >= 0) {\r\n                    interceptors.splice(index, 1);\r\n                }\r\n            };\r\n        },\r\n        clear: function () {\r\n            interceptors = [];\r\n        },\r\n        unRegister: function () {\r\n            if (nativeFetch) {\r\n                env.fetch = nativeFetch;\r\n            }\r\n        },\r\n    };\r\n}\n\nvar DEFAULT_IGNORE_LIST = [\r\n    '//wlog.kuaishou.com/rest/n/log/web/collect',\r\n    // v3\r\n    '/rest/wd/common/log/collect/misc2',\r\n    // v3 radar\r\n    '/rest/wd/common/log/collect/radar',\r\n    // v2\r\n    '/rest/kd/log/collect',\r\n];\n\nvar RadarKey = [RADAR_KEY.LOAD, RADAR_KEY.RES, RADAR_KEY.API, RADAR_KEY.ERROR, RADAR_KEY.EVENT];\r\nvar LOAD_EVENT_NAME;\r\n(function (LOAD_EVENT_NAME) {\r\n    LOAD_EVENT_NAME[\"RADAR_INIT\"] = \"radar_init\";\r\n    LOAD_EVENT_NAME[\"H5_LOAD\"] = \"h5_load\";\r\n    LOAD_EVENT_NAME[\"FMP\"] = \"fmp\";\r\n    LOAD_EVENT_NAME[\"MAIN_API\"] = \"main_api\";\r\n    LOAD_EVENT_NAME[\"H5_CUSTOM_METRIC\"] = \"h5_custom_metric\";\r\n})(LOAD_EVENT_NAME || (LOAD_EVENT_NAME = {}));\r\nvar LoadEventName = [\r\n    LOAD_EVENT_NAME.FMP,\r\n    LOAD_EVENT_NAME.H5_LOAD,\r\n    LOAD_EVENT_NAME.MAIN_API,\r\n    LOAD_EVENT_NAME.RADAR_INIT,\r\n    LOAD_EVENT_NAME.H5_CUSTOM_METRIC,\r\n];\r\n/**\r\n * 验证 Load 类型\r\n * 每个 load 类型都需要有 event_name 的上报，才能清洗\r\n * 不同的event_name有不同的内容需要验证，！！ 这里的验证只是挑一些关键的指标进行验证，不全面 ！！\r\n * value里的内容需要都是 string 类型的，保证精度\r\n * todo event_name 为 main_api 的验证\r\n * @param data 日志内容\r\n * @returns boolean 是否验证通过\r\n */\r\nfunction verifyLoad(data) {\r\n    var dimension = data.dimension, value = data.value;\r\n    var event_name = dimension.event_name;\r\n    // 判断是不是指定的 event_name\r\n    if (LoadEventName.indexOf(event_name) < 0) {\r\n        return false;\r\n    }\r\n    // 判断 value 是否是字符串\r\n    var isAllValueNumber = isAllNumber(value);\r\n    if (!isAllValueNumber) {\r\n        return false;\r\n    }\r\n    switch (event_name) {\r\n        case 'fmp': {\r\n            var fmp_time = value.fmp_time, fmp = value.fmp;\r\n            if (!fmp || !fmp_time) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        case 'h5_load': {\r\n            var total = value.total, load_event_time = value.load_event_time;\r\n            if (!load_event_time || !total) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        case 'h5_custom_metric': {\r\n            var custom_metric_timestamp = value.custom_metric_timestamp;\r\n            var custom_metric_name = dimension.custom_metric_name;\r\n            if (!custom_metric_name || !custom_metric_timestamp) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * 验证 Api 类型\r\n * custom_failed,api,duration,status,res_type,protocol,cached,size 存在，且类型合适\r\n * value是字符串\r\n * @param data 日志内容\r\n * @returns boolean 是否验证通过\r\n */\r\nfunction verifyApi(data) {\r\n    var dimension = data.dimension, value = data.value;\r\n    var custom_failed = dimension.custom_failed, api = dimension.api, status = dimension.status, res_type = dimension.res_type, protocol = dimension.protocol, cached = dimension.cached;\r\n    var duration = value.duration, size = value.size;\r\n    if (typeof custom_failed !== 'boolean' ||\r\n        typeof api !== 'string' ||\r\n        typeof status !== 'number' ||\r\n        typeof res_type !== 'string' ||\r\n        typeof protocol !== 'string' ||\r\n        typeof cached !== 'boolean' ||\r\n        typeof duration !== 'number' ||\r\n        typeof size !== 'number') {\r\n        return false;\r\n    }\r\n    return isAllNumber(value);\r\n}\r\n/**\r\n * 验证 Error 类型\r\n * error部分需要验证的是 error_type, error_cons_type, msg 这三个字段\r\n * 三个字段都要存在且是 string 类型\r\n * col line 不必须存在，但是存在的话需要是 number 类型\r\n * 其他的dimension里的内容都需要是 string 类型\r\n * @param data 日志内容\r\n * @returns boolean 是否验证通过\r\n */\r\nfunction verifyError(data) {\r\n    var dimension = data.dimension;\r\n    var error_type = dimension.error_type, error_cons_type = dimension.error_cons_type, msg = dimension.msg;\r\n    // error_type, error_cons_type, msg 必须存在\r\n    if (!error_cons_type || !error_type || !msg) {\r\n        return false;\r\n    }\r\n    var col = dimension.col, line = dimension.line; dimension.sample_rate; var restDimension = __rest(dimension, [\"col\", \"line\", \"sample_rate\"]);\r\n    // col 和 line 需要是 number 类型\r\n    if ((col && typeof col !== 'number') || (line && typeof line !== 'number')) {\r\n        return false;\r\n    }\r\n    // 其他字段需要是 string 类型\r\n    return isAllString(restDimension);\r\n}\r\n/**\r\n * 验证 Resource 类型\r\n * failed是否存在\r\n * failed 为 true 时，验证 file 和 res_path 存在且为 string 类型\r\n * failed 为 false 时，验证 value 中是否都是字符串, dimension 中的 file 也是 string\r\n * @param data 日志内容\r\n * @returns boolean 是否验证通过\r\n */\r\nfunction verifyResource(data) {\r\n    var dimension = data.dimension, value = data.value;\r\n    var failed = dimension.failed;\r\n    if (typeof failed !== 'boolean') {\r\n        return false;\r\n    }\r\n    if (failed) {\r\n        var res_path = dimension.res_path, file = dimension.file;\r\n        if (typeof file !== 'string' || typeof res_path !== 'string') {\r\n            return false;\r\n        }\r\n    }\r\n    if (!failed) {\r\n        var file = dimension.file;\r\n        if (typeof file !== 'string') {\r\n            return false;\r\n        }\r\n        return isAllNumber(value);\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * 验证 Event 类型\r\n * event只需要验证 value 的内容是 string 类型。todo name 必须存在，且是128个字符以内的 string 类型\r\n * @param data 日志内容\r\n * @returns boolean 是否验证通过\r\n */\r\nfunction verifyEvent(data) {\r\n    var value = data.value, name = data.dimension.name;\r\n    var isAllValueNumber = value === undefined || isAllNumber(value);\r\n    if (!isAllValueNumber || !name) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nvar verifyFnList = {\r\n    load: verifyLoad,\r\n    api: verifyApi,\r\n    resource: verifyResource,\r\n    error: verifyError,\r\n    event: verifyEvent,\r\n};\r\nfunction verify(data) {\r\n    if (!data) {\r\n        consoleError(\"116\");\r\n        return false;\r\n    }\r\n    if (RadarKey.indexOf(data.key) < 0) {\r\n        consoleError(\"117\");\r\n        return false;\r\n    }\r\n    return verifyFnList[data.key](data);\r\n}\n\nfunction eventFactory() {\r\n    var handlers = [];\r\n    function off(handler) {\r\n        var index = handlers.indexOf(handler);\r\n        if (index !== -1) {\r\n            handlers.splice(index, 1);\r\n        }\r\n    }\r\n    function on(handler) {\r\n        handlers.push(handler);\r\n        return off.bind(undefined, handler);\r\n    }\r\n    function once(handler) {\r\n        var off = on(function (event) {\r\n            handler(event);\r\n            off();\r\n        });\r\n        return off;\r\n    }\r\n    function emit(event) {\r\n        handlers.forEach(function (callback) { return callback(event); });\r\n    }\r\n    return { on: on, off: off, once: once, emit: emit };\r\n}\n\nfunction setMainJsStart(timestamp) {\r\n    var _a;\r\n    if ((_a = window.__RADAR_PERFORMANCE_TIMING_) === null || _a === void 0 ? void 0 : _a.radar_main_js_start) {\r\n        consoleWarn('112');\r\n        return;\r\n    }\r\n    if (timestamp) {\r\n        if (typeof timestamp === 'number') {\r\n            if (timestamp < performance.timing.navigationStart) {\r\n                consoleError('111');\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            consoleError('111');\r\n            return;\r\n        }\r\n    }\r\n    if (window.__RADAR_PERFORMANCE_TIMING_) {\r\n        window.__RADAR_PERFORMANCE_TIMING_.radar_main_js_start = timestamp || Date.now();\r\n    }\r\n    else {\r\n        window.__RADAR_PERFORMANCE_TIMING_ = {\r\n            radar_main_js_start: timestamp || Date.now(),\r\n        };\r\n    }\r\n}\n\nfunction deepClone(data) {\r\n    return JSON.parse(JSON.stringify(data));\r\n}\r\n/**\r\n * 获取 localStorage 缓存\r\n */\r\nfunction getLocalStorageItem(key) {\r\n    try {\r\n        if (window && window.localStorage) {\r\n            var value = window.localStorage.getItem(key);\r\n            if (value) {\r\n                try {\r\n                    return JSON.parse(value);\r\n                }\r\n                catch (err) {\r\n                    return value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    catch (err) {\r\n        return null;\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * 设置 localStorage 缓存\r\n */\r\nfunction setLocalStorageItem(key, value) {\r\n    try {\r\n        if (window && window.localStorage) {\r\n            window.localStorage.setItem(key, JSON.stringify(value));\r\n            return true;\r\n        }\r\n    }\r\n    catch (err) {\r\n        return false;\r\n    }\r\n    return false;\r\n}\r\n// 自增 id 最大值\r\nvar maxId = 1e8;\r\nvar genDeviceIncreaseId = function (key) {\r\n    try {\r\n        if (window && window.localStorage && typeof Storage !== 'undefined' && window.localStorage instanceof Storage) {\r\n            var id = Number(getLocalStorageItem(key)) || 0;\r\n            if (id + 1 > maxId) {\r\n                id = 0;\r\n            }\r\n            setLocalStorageItem(key, id + 1);\r\n            return id;\r\n        }\r\n    }\r\n    catch (err) {\r\n        //\r\n    }\r\n};\r\n// 如果没有 localStorage 则使用运行时自增 id，用于非浏览器场景，比如 React Native\r\nvar runtimeIdMap = {};\r\nvar genSessionIncreaseId = function (key) {\r\n    if (!runtimeIdMap[key]) {\r\n        runtimeIdMap[key] = 0;\r\n    }\r\n    return runtimeIdMap[key]++;\r\n};\r\nvar radarWarnLog = function (type) {\r\n    var value = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        value[_i - 1] = arguments[_i];\r\n    }\r\n    var query = parseQueryString(location.search.slice(1));\r\n    if (+query.debug === 1) {\r\n        consoleWarn.apply(void 0, __spreadArray([\"[radar] \".concat(type, \": \")], __read(value), false));\r\n    }\r\n};\r\nfunction parseQueryString(queryString) {\r\n    var e_1, _a;\r\n    var result = {};\r\n    var queries = queryString.split('&');\r\n    try {\r\n        for (var queries_1 = __values(queries), queries_1_1 = queries_1.next(); !queries_1_1.done; queries_1_1 = queries_1.next()) {\r\n            var query = queries_1_1.value;\r\n            var _b = __read(query.split('='), 2), key = _b[0], value = _b[1];\r\n            if (!(key in result)) {\r\n                result[key] = value;\r\n                continue;\r\n            }\r\n            if (result[key] instanceof Array) {\r\n                result[key].push(value);\r\n                continue;\r\n            }\r\n            result[key] = [result[key], value];\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (queries_1_1 && !queries_1_1.done && (_a = queries_1.return)) _a.call(queries_1);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return result;\r\n}\n\nexport { BaseCollect, DEFAULT_IGNORE_LIST, MiddlewareManager, RADAR_KEY, addMonitor, consoleError, consoleLog, consoleWarn, deepClone, eventFactory, genDeviceIncreaseId, genSessionIncreaseId, getLocalStorageItem, getUAList, getWebViewType, handleNumber, hasFmp, hookFetch, hookXML, isInURLWhiteList, isScriptError, navigationTiming, parseQueryString, perfMapTiming, radarWarnLog, removeMonitor, samplingControl, setLocalStorageItem, setMainJsStart, suffix, verify };\n","import { BaseCollect, RADAR_KEY, RadarCore } from '@ks-radar/radar-util'\nimport { PluginConfig, ReportedMetrics, PageMainElMap } from './type'\n\nexport default class RadarSpaFmpCollect extends BaseCollect {\n  /** 数据上报的key */\n  static key = RADAR_KEY.EVENT\n\n  /** 是否打印数据 */\n  private isDebugger?: boolean\n  /** 传入的vue-router */\n  public VueRouterInstance?: any\n  /** 每个页面核心模块的css query */\n  public pageMainElMap: PageMainElMap\n  /** 进入router beforeEach的时间戳 */\n  private routerBeforeachTimestamp: number | null\n  /** 页面核心模块渲染完成的时间戳 */\n  private contentRendedTimestamp: number | null\n  /** 页面mounted的时间戳 */\n  private sffpTimestamp: number | null\n  /** 记录浏览器第一次打开时的页面route path */\n  public firstRoutePath: string\n  /** 记录页面是否已经切换过 */\n  public pageSwitched: boolean\n  /** 记录已上报的核心指标 */\n  public reportedMetrics: ReportedMetrics\n  /** 雷达load插件 */\n  private navCollectInstance: any\n  /** 是否上报RPV */\n  private enableReportRpv?: boolean\n\n  constructor(data: {\n    core?: RadarCore\n    navCollect?: any\n    sampling?: number\n    router?: any\n    config: PluginConfig\n  }) {\n    super({\n      name: 'radarSpaFmpSdk', // 采集器名称\n      core: data.core,\n      sampling: data.sampling, // 采样率\n      key: RADAR_KEY.EVENT, // 数据上报到具体表\n      version: process.env.VERSION // 采集器版本\n    })\n    this.pageMainElMap = data?.config?.pageMainElMap || {}\n    this.VueRouterInstance = data?.router\n    this.isDebugger = data?.config?.isDebugger || false\n    this.enableReportRpv = data?.config?.enableReportRpv || false\n    this.routerBeforeachTimestamp = null\n    this.contentRendedTimestamp = null\n    this.sffpTimestamp = null\n    this.navCollectInstance = data?.navCollect\n\n    this.firstRoutePath = ''\n    this.pageSwitched = false\n    this.reportedMetrics = {\n      sfmp: {},\n      sffp: {},\n      fmp: {},\n      ffp: {}\n    }\n\n    this.init()\n  }\n\n  /**\n   * 更新依赖的外部实例\n   */\n  public updateDependence(params: { core?: RadarCore; navCollect?: any }) {\n    if (params.navCollect) {\n      this.navCollectInstance = params?.navCollect\n    }\n    if (params.core) {\n      this.updateCore(params.core)\n    }\n  }\n\n  /** 初始化采集器 */\n  private init() {\n    try {\n      if (this.VueRouterInstance) {\n        this.VueRouterInstance.beforeEach((to: any, from: any, next: any) => {\n          try {\n            this.metricReportInit(to.path)\n          } finally {\n            next()\n          }\n        })\n        this.VueRouterInstance.afterEach((to: any, from: any, failure?: any) => {\n          if (failure) return\n          // 限制只有path不同的情况下才认为是页面跳转\n          if (!from.path || to.path === from.path) return\n          this.enableReportRpv && this.reportRpv()\n        })\n      }\n    } catch (error) {\n      console.error('RadarSpaFmpCollect---->插件初始化错误', error)\n    }\n  }\n\n  /**\n   * route改动调用的api，未传入router时可用\n   * 若没有在router改变时调用该方法，会引起fmp/sfmp/pv等获取不准确，谨慎使用\n   * @param routePath 当前页面的路由\n   */\n  public routeChange(routePath: string) {\n    if (!this.VueRouterInstance) {\n      this.metricReportInit(routePath)\n    } else {\n      console.warn('RadarSpaFmpCollect---->已初始化router，routeChange方法不可用')\n    }\n  }\n\n  /**\n   * 上报spa的路由改变次数，rpv\n   * @param extendInfo extra_info\n   */\n  public reportRpv(extendInfo = {}) {\n    this.baseCollect({\n      key: RadarSpaFmpCollect.key,\n      dimension: {\n        name: 'radar_spa_pv', // 必填\n        src: window.location.href, // 【可选】\n        extra_info: extendInfo // 【可选】\n      },\n      value: {}\n    })\n    if (this.isDebugger) {\n      console.log('RadarSpaFmpCollect---->RPV上报成功')\n    }\n  }\n\n  /**\n   * 进入页面前初始化\n   * @param currentRoutePath 当前页面的路由path\n   */\n  private metricReportInit = (currentRoutePath: string) => {\n    this.routerBeforeachTimestamp = Date.now()\n    if (!this.firstRoutePath) {\n      this.firstRoutePath = currentRoutePath // 记录浏览器第一次打开时的页面routeName\n    }\n    this.checkPageSwitched(currentRoutePath)\n    if (!this.reportedMetrics) {\n      this.reportedMetrics = {\n        // 已上报的指标\n        sfmp: {},\n        sffp: {},\n        fmp: {},\n        ffp: {}\n      }\n    }\n  }\n\n  /**\n   * 上报spa的指标：fmp、sfmp、ffp、sffp\n   * @param currentRoutePath 当前页面路由path\n   * @param extendInfo 雷达extra_info字段\n   */\n  public spa = (currentRoutePath: string = 'UNKNOWN', extendInfo = {}) => {\n    if (!this.core?.collect) {\n      console.error('RadarSpaFmpCollect---->未找到core包中的collect方法')\n      return\n    }\n    this.ffp(currentRoutePath, extendInfo)\n    this.sffp(currentRoutePath, extendInfo)\n    this.checkPageRendered(currentRoutePath, () => {\n      this.fmp(currentRoutePath)\n      this.sfmp(currentRoutePath, extendInfo)\n    })\n  }\n\n  /**\n   * 上报FMP\n   * @param currentRoutePath 当前页面的路由path\n   * @param timestamp 用户自定义的发生fmp时的时间戳\n   */\n  public fmp = (currentRoutePath = 'UNKNOWN', timestamp = Date.now()) => {\n    // 页面上报过一次就不再上报\n    if (\n      !this.baseCollect ||\n      this.pageSwitched ||\n      (this.reportedMetrics.fmp && this.reportedMetrics.fmp[currentRoutePath])\n    ) {\n      return\n    }\n    const _fmpTimestamp = typeof timestamp === 'number' && timestamp > 0 ? timestamp : Date.now()\n    if (!this.navCollectInstance || !this.navCollectInstance.fmp) {\n      console.error('请传入navCollect参数')\n      return\n    }\n    this.navCollectInstance.fmp(_fmpTimestamp) // 上报fmp性能指标\n\n    const _fmp = _fmpTimestamp - performance.timing.navigationStart\n    if (this.reportedMetrics.fmp) {\n      this.reportedMetrics.fmp[currentRoutePath] = _fmp\n    }\n    if (this.isDebugger) {\n      console.log('RadarSpaFmpCollect---->FMP上报成功:', _fmp, 'ms')\n    }\n  }\n\n  /**\n   * 上报SFMP\n   * @param currentRoutePath 当前页面的路由path\n   * @param extendInfo 雷达extra_info字段\n   * @param timestamp 外部自定义发生sfmp的时间戳\n   */\n  public sfmp = (currentRoutePath = 'UNKNOWN', extendInfo = {}, timestamp = Date.now()) => {\n    // 页面上报过一次就不再上报\n    if (\n      !this.baseCollect ||\n      (currentRoutePath && this.reportedMetrics.sfmp && this.reportedMetrics.sfmp[currentRoutePath])\n    ) {\n      return\n    }\n    this.contentRendedTimestamp =\n      typeof timestamp === 'number' && timestamp > 0 ? timestamp : Date.now()\n    if (!this.contentRendedTimestamp || !this.routerBeforeachTimestamp) {\n      console.warn(\n        'RadarSpaFmpCollect---->contentRendedTimestamp或者routerBeforeachTimestamp内部打点出现问题'\n      )\n      return\n    }\n    const duration = this.contentRendedTimestamp - this.routerBeforeachTimestamp // sfmp耗时\n    if (!duration || duration < 0) {\n      console.warn('RadarSpaFmpCollect---->sfmp的值小于0')\n      return\n    }\n\n    this.baseCollect({\n      key: RadarSpaFmpCollect.key,\n      dimension: {\n        name: 'radar_spa_sfmp', // 必填\n        src: window.location.href, // 【可选】\n        extra_info: extendInfo // 【可选】\n      },\n      value: {\n        duration\n      }\n    })\n    // 清空进入路由的时间戳，防止一次路由跳转后上报多个sfmp\n    this.routerBeforeachTimestamp = null\n    if (this.reportedMetrics.sfmp) {\n      this.reportedMetrics.sfmp[currentRoutePath] = duration\n    }\n    if (this.isDebugger) {\n      console.log('RadarSpaFmpCollect---->SFMP上报成功:', duration, 'ms')\n    }\n  }\n\n  /**\n   * 上报FFP\n   * @param currentRoutePath 当前页面的路由path\n   * @param extendInfo 雷达extra_info字段\n   */\n  public ffp = (currentRoutePath = 'UNKNOWN', extendInfo = {}) => {\n    // 页面上报过一次就不再上报\n    if (\n      !this.baseCollect ||\n      this.pageSwitched ||\n      (this.reportedMetrics.ffp && this.reportedMetrics.ffp[currentRoutePath])\n    ) {\n      return\n    }\n    const _ffp = performance.now()\n    this.baseCollect({\n      key: RadarSpaFmpCollect.key,\n      dimension: {\n        name: 'radar_spa_ffp', // 必填\n        src: window.location.href, // 【可选】\n        extra_info: extendInfo // 【可选】\n      },\n      value: {\n        duration: _ffp\n      }\n    })\n    if (this.reportedMetrics.ffp) {\n      this.reportedMetrics.ffp[currentRoutePath] = _ffp\n    }\n    if (this.isDebugger) {\n      console.log('RadarSpaFmpCollect---->FFP上报成功:', _ffp, 'ms')\n    }\n  }\n\n  /**\n   * 上报SFFP\n   * @param currentRoutePath 当前页面的路由path\n   * @param extendInfo 雷达extra_info字段\n   */\n  public sffp = (currentRoutePath: string, extendInfo = {}) => {\n    // 页面上报过一次就不再上报\n    if (\n      !this.baseCollect ||\n      (currentRoutePath && this.reportedMetrics.ffp && this.reportedMetrics.sffp[currentRoutePath])\n    ) {\n      return\n    }\n    if (!this.routerBeforeachTimestamp) {\n      console.warn('RadarSpaFmpCollect---->routerBeforeachTimestamp内部打点出现问题')\n      return\n    }\n    this.sffpTimestamp = Date.now()\n    const duration = this.sffpTimestamp - this.routerBeforeachTimestamp // sffp耗时\n    if (!duration || duration < 0) {\n      console.warn('RadarSpaFmpCollect---->sffp的值小于0')\n      return\n    }\n    this.baseCollect({\n      key: RadarSpaFmpCollect.key,\n      dimension: {\n        name: 'radar_spa_sffp', // 必填\n        src: window.location.href, // 【可选】\n        extra_info: extendInfo // 【可选】\n      },\n      value: {\n        duration\n      }\n    })\n\n    if (this.reportedMetrics.sffp) {\n      this.reportedMetrics.sffp[currentRoutePath] = duration\n    }\n    if (this.isDebugger) {\n      console.log('RadarSpaFmpCollect---->SFFP上报成功:', duration, 'ms')\n    }\n  }\n\n  /**\n   * 检测页面是否切换过\n   * @param currentRoutePath 当前页面的路由path\n   */\n  private checkPageSwitched = (currentRoutePath: string) => {\n    if (this.pageSwitched) {\n      // 页面已经切换过\n      return\n    }\n    if (currentRoutePath !== this.firstRoutePath) {\n      this.pageSwitched = true\n    }\n  }\n\n  /**\n   * 检测页面是否渲染完成\n   * @param currentRoutePath 当前页面的路由path\n   */\n  public checkPageRendered = (currentRoutePath: string, callback: () => void) => {\n    const elQuery = this.pageMainElMap[currentRoutePath]\n    if (!elQuery) {\n      return\n    }\n    const _el = document.querySelector(elQuery)\n    if (!_el) {\n      console.warn(`RadarSpaFmpCollect---->未找到MutationObserver元素${elQuery}`)\n      return\n    }\n    this.domObserve(_el, callback)\n  }\n\n  //\n  /**\n   * 监听el元素是否渲染完\n   * @param el 需要监听的元素\n   * @param callback 元素渲染完成后回调函数\n   */\n  public domObserve = (el: Element, callback: (mutationsList: MutationRecord[]) => void) => {\n    const observer = new MutationObserver((mutationsList: MutationRecord[]) => {\n      observer.disconnect()\n      callback(mutationsList)\n    })\n    observer.observe(el, {\n      childList: true, // 观察直接子节点\n      subtree: true, // 及其更低的后代节点\n      characterDataOldValue: false // 将旧的数据传递给回调\n    })\n  }\n}\n"],"names":["__assign","__read"],"mappings":"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"}