/*
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

#pragma once

#ifdef __APPLE__
#include <functional>
#endif

namespace facebook {
namespace react {
namespace ReactMarker {

enum ReactMarkerId {
  NATIVE_REQUIRE_START,
  NATIVE_REQUIRE_STOP,
  RUN_JS_BUNDLE_START,
  RUN_JS_BUNDLE_STOP,
  CREATE_REACT_CONTEXT_STOP,
  JS_BUNDLE_STRING_CONVERT_START,
  JS_BUNDLE_STRING_CONVERT_STOP,
  NATIVE_MODULE_SETUP_START,
  NATIVE_MODULE_SETUP_STOP,
  REGISTER_JS_SEGMENT_START,
  REGISTER_JS_SEGMENT_STOP
};

#ifdef __APPLE__
using LogTaggedMarker = std::function<void(const ReactMarkerId, const char* tag)>;
using LogMarkerWithUniqueId = std::function<void(const ReactMarkerId,
                                                 const char* tag,
                                                 const int uniqueId)>;
#else
typedef void(*LogTaggedMarker)(const ReactMarkerId, const char* tag);
typedef void(*LogMarkerWithUniqueId)(const ReactMarkerId,
                                     const char* tag,
                                     const int uniqueId);
#endif

#ifndef RN_EXPORT
#define RN_EXPORT __attribute__((visibility("default")))
#endif

extern RN_EXPORT LogTaggedMarker logTaggedMarker;
//extern RN_EXPORT LogTMMMarker logTMMMarker;

extern RN_EXPORT void logMarker(const ReactMarkerId markerId);

extern RN_EXPORT LogMarkerWithUniqueId logMarkerWithUniqueId;
extern RN_EXPORT void logMarker(const ReactMarkerId markerId,
                                const char* tag,
                                const int uniqueId);
}
}
}

#define MARK_TMM(moduleName, methodName, id) do { \
  if (facebook::react::ReactMarker::logTMMMarker) { \
    facebook::react::ReactMarker::logTMMMarker(__func__, moduleName, methodName, id); \
  } \
} while (false)
