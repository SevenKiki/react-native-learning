package com.krn.react.exception;

import java.util.Set;
import java.util.concurrent.CopyOnWriteArraySet;

import com.facebook.react.bridge.ReactApplicationContext;

public final class KrnExceptionsManager {

  private final Set<KrnExceptionListener> mKrnExceptionListeners = new CopyOnWriteArraySet<>();

  private KrnExceptionsManager() {}

  private static final class Holder {
    private static final KrnExceptionsManager sInstance = new KrnExceptionsManager();
  }

  public static KrnExceptionsManager get() {
    return KrnExceptionsManager.Holder.sInstance;
  }

  public boolean addKrnExceptionListener(KrnExceptionListener exceptionListener) {
    if (exceptionListener != null) {
      return mKrnExceptionListeners.add(exceptionListener);
    }
    return false;
  }

  public boolean removeKrnExceptionListener(KrnExceptionListener exceptionListener) {
    if (exceptionListener != null) {
      return mKrnExceptionListeners.remove(exceptionListener);
    }
    return false;
  }

  public void dispatchException(ReactApplicationContext reactApplicationContext, boolean isFatal,
    String jsStackTrace, String extraDataAsJson) {
    if (mKrnExceptionListeners.size() <= 0) {
      return;
    }

    for (KrnExceptionListener listener : mKrnExceptionListeners) {
      listener.dispatchException(reactApplicationContext, isFatal, jsStackTrace, extraDataAsJson);
    }
  }

}
