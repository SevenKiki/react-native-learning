/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 * <p>
 * This source code is licensed under the MIT license found in the LICENSE file in the root
 * directory of this source tree.
 */
package com.facebook.v8.reactexecutor;

import com.facebook.react.bridge.DebuggableJavaScriptExecutor;
import java.util.TimeZone;

import com.facebook.react.bridge.JavaScriptExecutor;
import com.facebook.react.bridge.JavaScriptExecutorFactory;

public class V8ExecutorFactory implements JavaScriptExecutorFactory, DebuggableJavaScriptExecutor {

  private static final String TAG = "V8";
  private final String mTraceFilePath;
  private final boolean mEnableStartupTrace;
  private boolean mIsSampling;

  public V8ExecutorFactory() {
    mTraceFilePath = "";
    mEnableStartupTrace = false;
    mIsSampling = false;
  }

  public V8ExecutorFactory(final String traceFilePath, boolean enableStartupTrace) {
    mTraceFilePath = traceFilePath;
    mEnableStartupTrace = enableStartupTrace;
    if (mEnableStartupTrace) {
      mIsSampling = true;
    }
  }

  @Override
  public JavaScriptExecutor create() {
    return new V8Executor(getTimezoneId(), mTraceFilePath, mEnableStartupTrace);
  }

  @Override
  public void startSamplingProfiler() {
    V8Executor.startTracing("");
    mIsSampling = true;
  }

  @Override
  public void stopSamplingProfiler(String filename) {
    V8Executor.stopTracing();
    mIsSampling = false;
  }

  @Override
  public boolean getIsSampling() {
    return mIsSampling;
  }

  @Override
  public String getTraceFilePath() {
    return mTraceFilePath;
  }

  @Override
  public String toString() {
    return "JSIExecutor+V8Runtime";
  }

  private String getTimezoneId() {
    return TimeZone.getDefault().getID();
  }
}
