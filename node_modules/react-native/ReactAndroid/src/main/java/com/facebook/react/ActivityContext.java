package com.facebook.react;

import java.lang.ref.WeakReference;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import android.app.Activity;

class ActivityContext {

  private List<WeakReference<Activity>> mForegroundActivityStack = new ArrayList<>();
  private List<WeakReference<Activity>> mActivityStack = new ArrayList<>();

  public void onActivityResumed(Activity activity) {
    checkAndCreateActivityReference(activity);
  }

  public void onActivityPaused(Activity activity) {
    removeForegroundActivityReference(activity);
  }

  public void onActivityDestroyed(Activity activity) {
    removeForegroundActivityReference(activity);
    removeActivityReference(activity);
  }

  public Activity getCurrentForegroundActivity() {
    for (int i = mForegroundActivityStack.size() - 1; i >= 0; --i) {
      WeakReference<Activity> weakReference = mForegroundActivityStack.get(i);
      if (weakReference.get() != null) {
        return weakReference.get();
      }
    }

    return null;
  }

  public boolean hasActivity() {
    removeActivityReference(null);

    return !mActivityStack.isEmpty();
  }

  public void reset() {
    mForegroundActivityStack.clear();
  }

  private void checkAndCreateActivityReference(Activity activity) {
    for (WeakReference<Activity> weakReference : mForegroundActivityStack) {
      if (weakReference.get() == activity) {
        return;
      }
    }
    mForegroundActivityStack.add(new WeakReference<>(activity));

    for (WeakReference<Activity> weakReference : mActivityStack) {
      if (weakReference.get() == activity) {
        return;
      }
    }
    mActivityStack.add(new WeakReference<>(activity));
  }

  private void removeForegroundActivityReference(Activity targetActivity) {
    removeActivityReferenceInStack(mForegroundActivityStack, targetActivity);
  }

  private void removeActivityReference(Activity targetActivity) {
    removeActivityReferenceInStack(mActivityStack, targetActivity);
  }

  private void removeActivityReferenceInStack(List<WeakReference<Activity>> stack,
    Activity targetActivity) {
    Iterator<WeakReference<Activity>> iterator = stack.iterator();
    while (iterator.hasNext()) {
      WeakReference<Activity> weakReference = iterator.next();
      if (weakReference != null) {
        Activity activity = weakReference.get();
        if (activity == targetActivity || activity == null) {
          iterator.remove();
        }
      }
    }
  }
}
