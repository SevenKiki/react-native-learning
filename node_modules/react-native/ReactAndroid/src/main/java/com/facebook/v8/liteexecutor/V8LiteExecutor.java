/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the LICENSE
 * file in the root directory of this source tree.
 */
package com.facebook.v8.liteexecutor;

import com.facebook.jni.HybridData;
import com.facebook.react.bridge.JavaScriptExecutor;
import com.facebook.soloader.SoLoader;

public class V8LiteExecutor extends JavaScriptExecutor {
  private static final Object TRACE_LOCK = new Object();
  private static final int VERSION_UNINITIALIZED = -1;
  private static int sCachedDataVersion = VERSION_UNINITIALIZED;
  private static int sV8Version = VERSION_UNINITIALIZED;

  static {
    SoLoader.loadLibrary("kwai-v8-lite-executor");
  }

  V8LiteExecutor(final String timezoneId) {
    super(initHybrid(timezoneId, "", false));
  }

  V8LiteExecutor(final String timezoneId, final String traceFilename, boolean enableStartupTrace) {
    super(initHybrid(timezoneId, traceFilename, enableStartupTrace));
  }

  public static void startTracing(final String categories) {
    synchronized (TRACE_LOCK) {
      jniStartTracing(categories);
    }
  }

  public static void stopTracing() {
    synchronized (TRACE_LOCK) {
      jniStopTracing();
    }
  }

  @Override
  public String getName() {
    return "V8LiteExecutor";
  }

  public static boolean supportCodeCache() {
    return true;
  }

  public static boolean isValidCodeCacheVersion(int cachedDataVersion, int v8Version) {
    return getCachedDataVersion() == cachedDataVersion && v8Version == getRuntimeVersion();
  }

  public static int getCachedDataVersion() {
    if (sCachedDataVersion == VERSION_UNINITIALIZED) {
      sCachedDataVersion = jniGetCachedDataVersion();
    }
    return sCachedDataVersion;
  }

  public static int getRuntimeVersion() {
    if (sV8Version == VERSION_UNINITIALIZED) {
      sV8Version = jniGetV8Version();
    }
    return sV8Version;
  }

  private static native HybridData initHybrid(String timezoneId, String traceFilename, boolean enableStartupTrace);
  private static native void jniStartTracing(String categories);
  private static native void jniStopTracing();
  private static native int jniGetCachedDataVersion();
  private static native int jniGetV8Version();
}
