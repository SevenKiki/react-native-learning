#include <jni.h>

#include "V8Runtime.h"
#include "v8-inspector.h"

class V8Inspector : public v8_inspector::V8InspectorClient,
                    public v8_inspector::V8Inspector::Channel {
 public:
  V8Inspector(JNIEnv* env, jobject java_peer, facebook::V8Runtime* runtime);
  ~V8Inspector();

  void DispatchMessage(const uint16_t* data, size_t length);
  void ResetSession();

  static bool RegisterJNI(JNIEnv* env);

  void StartInspector(const char* url, const char* uuid);
  void StopInspector();
 private:
  void sendResponse(int callId,
                    std::unique_ptr<v8_inspector::StringBuffer> message) override;
  void sendNotification(std::unique_ptr<v8_inspector::StringBuffer> message) override;
  void flushProtocolNotifications() override;

  void runMessageLoopOnPause(int contextGroupId) override;
  void quitMessageLoopOnPause() override;

  void InjectApi();

  JavaVM* vm_;
  JNIEnv* env_;
  jobject java_peer_;
  facebook::V8Runtime* runtime_;
  std::unique_ptr<v8_inspector::V8Inspector> inspector_;
  std::unique_ptr<v8_inspector::V8InspectorSession> session_;
};
