#include "V8InspectorAgent.h"

#include <v8.h>
#include "V8Runtime.h"
#include <unistd.h>

namespace {

static jlong Create(JNIEnv* env, jobject java_peer) {
  return reinterpret_cast<jlong>(new V8InspectorAgent(env, java_peer));
}

static void Destroy(JNIEnv* env, jobject java_peer, jlong agent) {
  delete reinterpret_cast<V8InspectorAgent*>(agent);
}

static jmethodID g_onV8RuntimeCreatedMethod = nullptr;

static jmethodID g_onV8RuntimeDestroyedMethod = nullptr;

}

V8InspectorAgent::V8InspectorAgent(JNIEnv* env, jobject java_peer) {
  env->GetJavaVM(&vm_);
  env_ = env;
  java_peer_ = env->NewGlobalRef(java_peer);
}

V8InspectorAgent::~V8InspectorAgent() {
  env_->DeleteGlobalRef(java_peer_);  
}

bool V8InspectorAgent::RegisterJNI(JNIEnv* env) {
  jclass clazz = env->FindClass("com/facebook/v8/inspector/V8InspectorAgent");
  if (!clazz)
    return false;

  JNINativeMethod methods[] = {
    { "nativeCreate", "()J", (void*)Create },
    { "nativeDestroy", "(J)V", (void*)Destroy },
  };

  if (env->RegisterNatives(clazz, methods, sizeof(methods) / sizeof(methods[0])) < 0) {
    return false;
  }

  g_onV8RuntimeCreatedMethod = env->GetMethodID(clazz, "onV8RuntimeCreated", "(J)V");
  if (g_onV8RuntimeCreatedMethod == nullptr)
    return false;

  g_onV8RuntimeDestroyedMethod = env->GetMethodID(clazz, "onV8RuntimeDestroyed", "(J)V");
  if (g_onV8RuntimeDestroyedMethod == nullptr)
    return false;
  return true;
}

void V8InspectorAgent::OnV8RuntimeCreated(facebook::V8Runtime* runtime) {
  JNIEnv* env = nullptr;
  if (vm_->AttachCurrentThread(&env, nullptr) < 0)
    return;

  if (env->PushLocalFrame(16) < 0)
    return;

  jobject java_peer = env->NewLocalRef(java_peer_);
  env->CallVoidMethod(java_peer,
                      g_onV8RuntimeCreatedMethod,
                      reinterpret_cast<jlong>(runtime));
  env->DeleteLocalRef(java_peer);
  env->PopLocalFrame(nullptr);
}

void V8InspectorAgent::OnV8RuntimeDestroyed(facebook::V8Runtime* runtime) {
  JNIEnv* env = nullptr;
  if (vm_->AttachCurrentThread(&env, nullptr) < 0)
    return;

  if (env->PushLocalFrame(16) < 0)
    return;

  jobject java_peer = env->NewLocalRef(java_peer_);
  env->CallVoidMethod(java_peer,
                      g_onV8RuntimeDestroyedMethod,
                      reinterpret_cast<jlong>(runtime));
  env->DeleteLocalRef(java_peer);
  env->PopLocalFrame(nullptr);
}
