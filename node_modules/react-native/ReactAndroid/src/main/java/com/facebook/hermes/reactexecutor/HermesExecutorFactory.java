/*
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

package com.facebook.hermes.reactexecutor;

import com.facebook.hermes.instrumentation.HermesSamplingProfiler;
import com.facebook.react.bridge.DebuggableJavaScriptExecutor;
import com.facebook.react.bridge.JavaScriptExecutor;
import com.facebook.react.bridge.JavaScriptExecutorFactory;
import java.io.File;
import java.io.IOException;

public class HermesExecutorFactory implements JavaScriptExecutorFactory,
    DebuggableJavaScriptExecutor {
  private static final String TAG = "Hermes";

  private final RuntimeConfig mConfig;
  private boolean mIsSampling = false;
  private String mTraceFilePath = "";

  public HermesExecutorFactory() {
    this(null);
  }

  public HermesExecutorFactory(RuntimeConfig config) {
    mConfig = config;
  }

  @Override
  public JavaScriptExecutor create() {
    return new HermesExecutor(mConfig);
  }

  @Override
  public void startSamplingProfiler() {
    HermesSamplingProfiler.enable();
    mIsSampling = true;
  }

  @Override
  public void stopSamplingProfiler(String filename) {
    try {
      new File(filename).createNewFile();
    } catch (IOException e) {
      throw new UnsupportedOperationException();
    }
    HermesSamplingProfiler.dumpSampledTraceToFile(filename);
    HermesSamplingProfiler.disable();
    mIsSampling = false;
    mTraceFilePath = filename;
  }

  @Override
  public boolean getIsSampling() {
    return mIsSampling;
  }

  @Override
  public String getTraceFilePath() {
    return mTraceFilePath;
  }

  @Override
  public String toString() {
    return "JSIExecutor+HermesRuntime";
  }
}
