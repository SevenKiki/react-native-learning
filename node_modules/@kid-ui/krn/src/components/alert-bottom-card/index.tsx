import React from 'react';
import { Dimensions, Platform } from 'react-native';
import { isIphoneX } from 'react-native-iphone-x-helper';
import { DialogShow, DialogProps } from '../dialog';
import { KidIcon } from '../icon';
import { DialogComponent } from '../alert/dialog-component';
import { renderBigButton } from '../alert/alert-component';
import { BottomCardProps, SheetProps, wrapFuc } from '../alert/common';
import { rem } from '../../utils';

const isX = isIphoneX();
const isIos = Platform.OS === 'ios';
const windowWidth = Dimensions.get('window').width;

export const AlertBottomCard = (arg: BottomCardProps = {}) => {
  const {
    kid,
    popupSet,
    topIconKid,
    confirmText = '我知道了',
    onConfirm = () => { },
    ...rest
  } = arg;
  const bigButtonProps: BottomCardProps = {
    confirmText,
    onConfirm: () => {
      onConfirm();
      alert.close();
    },
  };

  let defaultProps: SheetProps = {
    descTextStyle: { maxWidth: rem(328) },
    showButton: false,
    renderButton: wrapFuc(renderBigButton, bigButtonProps as DialogProps),
    renderCloseIcon: () => <KidIcon kid={'common_dialog_colse_normal'} size={20}></KidIcon>,
    renderTop: () =>
      topIconKid ? <KidIcon kid={topIconKid} style={{ marginTop: rem(32) }} size={20}></KidIcon> : null,
    onPressCloseIcon: () => {
      alert.close();
    },
    position: 'bottom',
    animate: 'slider',
    popupStyle: {
      width: windowWidth,
      paddingHorizontal: rem(11),
      backgroundColor: 'rgba(0,0,0,0)',
      bottom: isIos ? (isX ? rem(48) : rem(32)) : rem(16),
    },
    maskBgColor: 'rgba(0,0,0,0.3)',
    popupSet,
    ...popupSet,
    borderRadius: rem(32),
    width: '100%',
  };
  const alert = DialogShow({ ...(defaultProps as any), ...rest }, DialogComponent);
  return {
    close: () => {
      alert.close();
    },
    update: (props: BottomCardProps) => {
      const updateProps = { ...defaultProps, ...rest, ...props };
      alert.update(updateProps as DialogProps)
    },
  };
};
