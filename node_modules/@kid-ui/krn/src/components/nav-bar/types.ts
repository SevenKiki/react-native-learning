import { StyleProp, ViewStyle, TextStyle, ImageStyle, Animated } from 'react-native';
import { ButtonProps } from '../button';

export interface EndsConfigProps {
  text?: string; // 文字
  iconKid?: string; // 图标的token
  iconKidConfig?: (number | string)[]; // 图标的token web
  btn?: ButtonProps;
  activeOpacity?: number; // 点击时的透明度
  wrapStyle?: StyleProp<ViewStyle>; // 外层的容器的样式
  style?: StyleProp<TextStyle> | StyleProp<ImageStyle> | StyleProp<ViewStyle>; // 文字/图标的样式
  onPress?: () => void // 点击文字/图标的回调
}

export interface NavBarBothEndsProps {
  style?: StyleProp<ViewStyle>; // 导航栏左/右侧最外层容器的样式
  config?: Array<EndsConfigProps>; // 左/右侧内容配置
  isCapsule?: boolean; // 是否是胶囊样式
}

export interface NavBarProps {
  height?: number; // 导航栏的高度
  backgroundColor?: string; // 导航栏的背景色
  style?: StyleProp<ViewStyle>; // 导航栏最外层容器的样式
  title?: string; // 中间标题
  renderMiddle?: (scrollY?: Animated.Value) => React.ReactNode
  numberOfLines?: number; // 中间标题文案的行数，默认1
  ellipsizeMode?: "head" | "middle" | "tail" | "clip"; // 标题文案的截断方式
  titleTextStyle?: StyleProp<TextStyle>; // 标题文案样式
  left?: NavBarBothEndsProps;
  renderLeft?: (scrollY?: Animated.Value) => React.ReactNode;
  right?: NavBarBothEndsProps;
  renderRight?: (scrollY?: Animated.Value) => React.ReactNode;
  // 渐变相关
  scrollY?: Animated.Value;
  isAnimatedGradient?: boolean;
  maxScrollHeight?: number;
  startBgc?: string;
  endBgc?: string;
  startTextColor?: string;
  endTextColor?: string;
  startIconTintColor?: string;
  endIconTintColor?: string;
}