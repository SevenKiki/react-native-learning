import { Dimensions } from 'react-native';
import { DialogProps, DialogShow } from '../dialog';
import { DialogComponent } from '../alert/dialog-component';
import { AlertListComponent, AlertListProps } from '../alert/alert-list-component';
import { SheetProps, wrapFuc } from '../alert/common';

const windowWidth = Dimensions.get('window').width;

export const AlertSheet = (arg: SheetProps = {}) => {
    const {
        message,
        kid,
        onPress = () => {
            alert.close();
        },
        optionHeight,
        warnColor,
        uselessColor,
        normalColor,
        defaultBackgroundColor,
        activeBackgroundColor,
        borderBottomLineHeight,
        borderBottomLineColor,
        activeOpacity,
        optionStyle,
        listContainerStyle,
        listTopContainerStyle,
        listBottomContainerStyle,
        hasCustomCancel,
        customCancelMessage,
        popupSet,
        ...rest
    } = arg;
    const alertListProps: AlertListProps = {
        message,
        onPress,
        optionHeight,
        warnColor,
        uselessColor,
        normalColor,
        defaultBackgroundColor,
        activeBackgroundColor,
        borderBottomLineHeight,
        borderBottomLineColor,
        activeOpacity,
        optionStyle,
        listContainerStyle,
        listTopContainerStyle,
        listBottomContainerStyle,
        hasCustomCancel,
        customCancelMessage,
    };
    let defaultProps: SheetProps = {
        position: 'bottom',
        animate: 'slider',
        popupStyle: {
            width: windowWidth,
            backgroundColor: 'rgba(0,0,0,0)',
        },
        maskBgColor: 'rgba(0,0,0,0.3)',
        popupSet,
        ...popupSet,
        width: '100%',
        showButton: false,
        showTitle: false,
        showDesc: false,
        renderContent: wrapFuc(AlertListComponent, alertListProps),
    };
    const alert = DialogShow(
        { ...(defaultProps as any), ...rest },
        DialogComponent,
    );
    return {
        close: () => {
            alert.close();
        },
        update: (props: SheetProps) => {
            const updateProps = { ...defaultProps, ...rest, ...props };
            alert.update(updateProps as DialogProps)
        },
    };
};
