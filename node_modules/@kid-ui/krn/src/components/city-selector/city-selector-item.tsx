import React from 'react';
import { Text, View, TouchableOpacity, Platform, StyleSheet } from 'react-native';
import { getKidColor, getThemeValue, rem } from '../../utils';
import { citySelecterItemObjectT } from './index'

export const itemHeight = rem(30);
export const itemMarginBottom = rem(8);
export const itemWrapperMarginTop = rem(8);
export const itemWrapperMarginBottom = rem(12);

const getActiveStyle = (active: boolean) => {
    return StyleSheet.create({
        items: {
            borderColor: active ? getThemeValue({
                light: '#222222',
                dark: '#FFFFFF'
            }) : getKidColor('cs_common_text_primary')
        },
        text: {
            fontWeight: active ? (Platform.OS === 'ios' ? '600' : 'bold'): (Platform.OS === 'ios' ? '400' : 'normal'),
            color: getKidColor( active ? 'cs_common_text_title' : 'cs_common_text_primary' )
        }
    });
}

interface PropsT {
    item: string[] | citySelecterItemObjectT[];
    onChange: (cityName: string | citySelecterItemObjectT) => void;
    cityName: string;
}
export default function CitySelectorItem(props: PropsT) {
    const cityItems = props.item.map((item) => {
        const itemCityName = typeof item === 'string' ? item : item.text;
        const activeStyle = getActiveStyle(itemCityName === props.cityName);
        return (
            <TouchableOpacity
                style={[
                    style.items,
                    activeStyle.items
                ]}
                key={itemCityName}
                onPress={() => props.onChange(item)}
            >
                <Text
                    style={[
                        style.text,
                        activeStyle.text
                    ]}
                >
                    {itemCityName}
                </Text>
            </TouchableOpacity>
        )
    });
    return <View style={style.wrapContainer}>{cityItems}</View>;
}

const style = StyleSheet.create({
    wrapContainer: {
        flexDirection: 'row',
        flexWrap: 'wrap',
        marginTop: itemWrapperMarginTop,
        marginBottom: itemWrapperMarginBottom
    },
    items: {
        alignItems: 'center',
        justifyContent: 'center',
        paddingHorizontal: rem(12),
        height: itemHeight,
        marginRight: rem(8),
        borderRadius: rem(8),
        borderWidth: rem(0.5),
        marginBottom: itemMarginBottom
    },
    text: {
        fontSize: rem(14),
        transform: [{translateY: Platform.OS === 'android' ? rem(-1) : 0}],
        fontFamily: 'PingFangSC-Regular',
    },
});
