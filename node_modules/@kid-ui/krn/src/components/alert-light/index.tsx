import React from 'react';
import { DialogShow, DialogProps } from '../dialog';
import { DialogComponent } from '../alert/dialog-component';
import { renderInput, renderPassword, Checkbox } from '../alert/alert-component';
import { AlertProps, wrapFuc } from '../alert/common'

export const Alert = (arg: AlertProps = {}) => {
    const {
        showInput = false,
        onInputChange = () => null,
        inputPlaceholder = '默认文案',
        inputAutoFocus = false,
        inputMaxLength,
        showPassword = false,
        showCheckbox = false,
        password,
        message,
        single,
        checkboxDefaultValue,
        kid,
        popupSet,
        checkboxItemsWrapStyle,
        checkboxItemStyle,
        checkboxItemOptionStyle,
        iconSelectedColor,
        iconUnSelectedColor,
        iconSize,
        iconStyle,
        selectedIconKid,
        selectedIconKidConfig,
        unSelectedIconKid,
        unSelectedIconKidConfig,
        renderCheckboxIcon,
        ...rest
    } = arg;

    let defaultProps: AlertProps = {
        onConfirm: () => {
            alert.close();
        },
        onCancel: () => {
            alert.close();
        },
        maskBgColor: 'rgba(0,0,0,0.3)',
        popupStyle: {
            backgroundColor: 'rgba(0,0,0,0)',
        },
        popupSet,
        ...popupSet,
        cancelText: '辅助操作',
        renderContent:
            ((showPassword &&
                wrapFuc(renderPassword, {password: password!})) ||
                (showInput &&
                    wrapFuc(renderInput, {
                        onInputChange,
                        placeholder: inputPlaceholder,
                        autoFocus: inputAutoFocus,
                        maxLength: inputMaxLength
                    })) ||
                (showCheckbox &&
                    wrapFuc(Checkbox, {
                        message,
                        onInputChange,
                        single,
                        defaultValue: checkboxDefaultValue,
                        checkboxItemsWrapStyle,
                        checkboxItemStyle,
                        checkboxItemOptionStyle,
                        iconSelectedColor,
                        iconUnSelectedColor,
                        iconSize,
                        iconStyle,
                        selectedIconKid,
                        selectedIconKidConfig,
                        unSelectedIconKid,
                        unSelectedIconKidConfig,
                        renderCheckboxIcon,
                    }))) as () => React.ReactNode,
    };
    const alert = DialogShow(
        { ...(defaultProps as any), ...rest },
        DialogComponent,
    );
    return {
        close: () => {
            alert.close();
        },
        update: (props: AlertProps) => {
            const updateProps = { ...defaultProps, ...rest, ...props };
            alert.update(updateProps as DialogProps)
        },
    };
};
