import type { StyleProp, TextStyle, ViewProps, ViewStyle } from "react-native";

export type ICheckboxValue = string | number | undefined;

export type ICheckboxGroupOnChangeHandler = (value: ICheckboxValue[]) => void;

export interface ICheckboxProps extends ViewProps {
  /**
   * If true, the checkbox will be checked. You'll need to pass onChange to update it's value (since it's now controlled).
   */
  checked?: boolean;
  /**
   * 	If true, the checkbox will be disabled
   */
  disabled?: boolean;
  onChange?: (isSelected: boolean) => void;
  /**
   * 复选框label的位置
   */
  labelPosition?: 'left' | 'right';
  /**
   * 复选框value
   */
  value?: ICheckboxValue;
  /**
   * 复选框icon是线性or面性
   */
  variant?: 'linear' | 'facet';

  containerStyle?: StyleProp<ViewStyle>;

  wrapStyle?: StyleProp<ViewStyle>;


  labelStyle?: StyleProp<TextStyle>;

  iconSize?: number;
}

export interface ICheckboxGroupProps extends ViewProps {
  /**
   * The value of the checkobox group.
   */
  value?: ICheckboxValue[];
  /**
   * The initial value of the checkbox group.
   */
  defaultValue?: ICheckboxValue[];
  /**
   * The callback fired when any children checkbox is checked or unchecked.
   */
  onChange?: ICheckboxGroupOnChangeHandler;
  variant?: 'linear' | 'facet';
  iconSize?: number;
}
export interface ICheckboxContext {
  value?: ICheckboxValue[];
  onChange?: ICheckboxGroupOnChangeHandler;
  variant?: 'linear' | 'facet';
  iconSize?: number;
}

export interface IconProps {
  size?: number,
  color?: string,
  backgroundColor?: string,
}
