import React from 'react';
import { render, fireEvent } from '@testing-library/react-native';
import { Checkbox } from '../index';


describe('testing CheckboxGroup', () => {
  it('props: defaultValue', () => {
    const { getByTestId } = render(
      <Checkbox.Group defaultValue={['box1']}>
        <Checkbox value='box1'>复选框1</Checkbox>
      </Checkbox.Group>
    );
    const icon = getByTestId('CheckboxCheckIcon');
    expect(icon.props.style[1][1].opacity).toEqual(1);
  })

  it('props: value', async () => {
    const gchange = jest.fn();
    const { findAllByTestId } = render(
      <Checkbox.Group onChange={gchange} value={['box2']}>
        <Checkbox value='box1'>复选框1</Checkbox>
        <Checkbox value='box2'>复选框1</Checkbox>
      </Checkbox.Group>
    );
    const boxes = await findAllByTestId('CheckboxCheckIcon');
    fireEvent(boxes[0], 'onPress');
    expect(gchange).toHaveBeenCalledTimes(1);
    expect(gchange).toHaveBeenCalledWith(['box2', 'box1']);
  })

  it('events: onChange', () => {
    const gchange = jest.fn();
    const change = jest.fn();
    const { getByTestId } = render(
      <Checkbox.Group onChange={gchange} defaultValue={[]}>
        <Checkbox onChange={change} value='box1'>复选框1</Checkbox>
      </Checkbox.Group>
    );
    const box = getByTestId('CheckboxCheckIcon');
    fireEvent(box, 'onPress');
    expect(gchange).toHaveBeenCalledTimes(1);
    expect(change).toHaveBeenCalledTimes(0);
    expect(gchange).toHaveBeenCalledWith(['box1']);
    fireEvent(box, 'onPress');
    expect(gchange).toHaveBeenCalledTimes(2);
    expect(change).toHaveBeenCalledTimes(0);
    expect(gchange).toHaveBeenCalledWith([]);
  })
})
