import React from 'react';
import { render, fireEvent } from '@testing-library/react-native';
import { Checkbox } from '../checkbox';

describe('testing Checkbox', () => {
  it('props: disabled', () => {
    const change = jest.fn();
    const { getByTestId, toJSON } = render(<Checkbox disabled={true} onChange={change}>复选框</Checkbox>);
    const box = getByTestId('CheckboxTouchBox');
    fireEvent(box, 'onPress');
    expect(change).toHaveBeenCalledTimes(0);
    expect(toJSON()).toMatchSnapshot();
  })

  it('props: disabled checked', () => {
    const { toJSON } = render(<Checkbox disabled={true} checked>复选框</Checkbox>);
    expect(toJSON()).toMatchSnapshot();
  })

  it('props: variant', () => {

    const { toJSON:  toJSONChecked } = render(<Checkbox checked >复选框</Checkbox>);
    expect(toJSONChecked()).toMatchSnapshot();

    const { toJSON: toJSONLinear } = render(<Checkbox variant='linear' >复选框</Checkbox>);
    expect(toJSONLinear()).toMatchSnapshot();

    const { toJSON:  toJSONLinearChecked } = render(<Checkbox variant='linear' checked >复选框</Checkbox>);
    expect(toJSONLinearChecked()).toMatchSnapshot();
  })

  it('props: labelPosition left', () => {
    const { getByTestId, toJSON } = render(<Checkbox labelPosition='left'>复选框</Checkbox>);
    const center = getByTestId('CheckboxCenter');
    expect(center.props.children[0].props.children).toEqual('复选框');
    expect(toJSON()).toMatchSnapshot();
  })

  it('props: labelPosition right', () => {
    const { getByTestId, toJSON } = render(<Checkbox labelPosition='right'>复选框</Checkbox>);
    const center = getByTestId('CheckboxCenter');
    expect(center.props.children[2].props.children).toEqual('复选框');
    expect(toJSON()).toMatchSnapshot();
  })

  it('props: checked true', () => {
    const { getByTestId, toJSON } = render(<Checkbox checked={true}>复选框</Checkbox>);
    const icon = getByTestId('CheckboxCheckIcon');
    expect(icon.props.style[1][1].opacity).toEqual(1);
    expect(toJSON()).toMatchSnapshot();
  })

  it('props: checked false', () => {
    const { getByTestId, toJSON } = render(<Checkbox checked={false}>复选框</Checkbox>);
    const icon = getByTestId('CheckboxCheckIcon');
    expect(icon.props.style[1][1].opacity).toEqual(0);
    expect(toJSON()).toMatchSnapshot();
  })

  it('props: onChange', () => {
    const change = jest.fn();
    const { getByTestId } = render(<Checkbox onChange={change}>复选框</Checkbox>);
    const box = getByTestId('CheckboxTouchBox');
    fireEvent(box, 'onPress');
    expect(change).toHaveBeenCalledTimes(1);
  })
})
