import { useContext, useEffect, useMemo } from 'react';
import { ContextType, DropAreaContext } from './context';
import { DragAndDropRootContext } from './context';
import { LayoutRectangle } from 'react-native';
import { IDnDSubject } from './DragAndDropRoot';

export function useDrop(context: ContextType) {
  const dndStore = useContext(DragAndDropRootContext);
  // dropArea的Context只能有一个。Draggable才可以允许有多个。
  const subjects = useMemo(() => {
    return dndStore.subjects[context];
  }, [context, dndStore.subjects]);

  useEffect(() => {
    dndStore.initContext(context);
  }, []);

  return {
    subjects,
  };
}

export interface IUseDragContext {
  subjects: IDnDSubject;
  poi: LayoutRectangle;
  key: string;
}

export function useDrag(context?: ContextType) {
  const dndStore = useContext(DragAndDropRootContext);
  const dndContext = context ?? useContext(DropAreaContext);
  const contexts = useMemo(
    () => (Array.isArray(dndContext) ? dndContext : [dndContext]),
    [dndContext],
  );
  const memoContext = useMemo(() => {
    return contexts
      .map((context) => {
        return {
          subjects: dndStore.subjects[context],
          poi: dndStore.poiMap[context],
          key: context,
        } as IUseDragContext;
      })
      .filter((i) => !!i.subjects && !!i.poi);
  }, [contexts, dndStore.subjects, dndStore.poiMap]);
  return memoContext;
}

export function useDndSubject(context: ContextType) {
  const dndStore = useContext(DragAndDropRootContext);
  const subjects = useMemo(() => dndStore.subjects[context], [dndStore.subjects]);
  return {
    subjects,
  };
}
