import type { FC } from 'react';
import React from 'react';
import type { StyleProp, TextStyle, TextProps } from 'react-native';
import { StyleSheet, Text } from 'react-native';
import MaskedView from './mask-view';
import type { LinearGradientProps } from 'react-native-linear-gradient';
import LinearGradient from 'react-native-linear-gradient';
import { ThemeValue, useThemeValues } from '../../theme/useThemeValue';
import { rem } from '../../utils';

const styles = StyleSheet.create({
    defaultText: {
        color: '#FFF',
    },
    innerText: {
        opacity: 0,
    },
});

export interface LinearGradientTextProps extends Omit<LinearGradientProps, 'colors'>, Omit<TextProps, 'style'> {
    colors?: ThemeValue<string>[];
    text?: string;
    textFont?: number;
    textStyle?: StyleProp<TextStyle>; 
};

const LinearGradientText: FC<LinearGradientTextProps> = ({
    children,
    text,
    textFont,
    textStyle,
    colors,
    start,
    end,
    locations,
    useAngle,
    angleCenter,
    angle,
    onPress,
    onLongPress,
    onLayout,
    //@ts-ignore
    onTextLayout,
    ...props
}) => {
    const renderText = text || children;

    const gradientColours = useThemeValues(colors!);

    const innerTextStyle = [
        { fontSize: textFont },
        styles.defaultText,
        textStyle,
    ];

    return (
        <MaskedView
            {...props}
            maskElement={(
                <Text style={innerTextStyle} {...props} >
                    {renderText}
                </Text>
            )}
        >
            <LinearGradient
                colors={gradientColours}
                start={start}
                end={end}
                locations={locations}
                useAngle={useAngle}
                angleCenter={angleCenter}
                angle={angle}
            >
                <Text
                    testID='LinearGradientTextText'
                    style={
                        [
                            innerTextStyle,
                            styles.innerText
                        ]
                    }
                    {...props}
                    onPress={onPress}
                    onLongPress={onLongPress}
                    onLayout={onLayout}
                    //@ts-ignore
                    onTextLayout={onTextLayout}
                >
                    {renderText}
                </Text>
            </LinearGradient>
        </MaskedView>
    )
};

LinearGradientText.defaultProps = {
    textFont: rem(14),
    colors: [
        { normal: '#ff4906', dark: '#ff4906' },
        { normal: '#FE3666', dark: '#FE3666' },
    ],
};

export default LinearGradientText;
export {
    LinearGradientText
}
