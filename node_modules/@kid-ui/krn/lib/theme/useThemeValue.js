import { useContext } from 'react';
import ThemeContext from './context';
export const useThemeValue = (kidKey, customTheme) => {
    var _a, _b, _c;
    const theme = useContext(ThemeContext);
    if (!kidKey || typeof kidKey !== 'object') {
        return kidKey;
    }
    return ((_c = (_b = (_a = kidKey[customTheme || theme]) !== null && _a !== void 0 ? _a : kidKey[theme]) !== null && _b !== void 0 ? _b : kidKey.normal) !== null && _c !== void 0 ? _c : kidKey);
};
export const useThemeValues = (kidKeys, customThemes) => {
    const theme = useContext(ThemeContext);
    return kidKeys.map((kidKey, index) => {
        var _a, _b, _c;
        if (!kidKey || typeof kidKey !== 'object') {
            return kidKey;
        }
        return ((_c = (_b = (_a = kidKey[(customThemes === null || customThemes === void 0 ? void 0 : customThemes[index]) || theme]) !== null && _a !== void 0 ? _a : kidKey[theme]) !== null && _b !== void 0 ? _b : kidKey.normal) !== null && _c !== void 0 ? _c : kidKey);
    });
};
export default useThemeValue;
