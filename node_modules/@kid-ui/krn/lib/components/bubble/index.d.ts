import React from 'react';
import { StyleProp, ViewStyle, TextStyle, GestureResponderEvent } from 'react-native';
import type { ThemeValue } from '../../theme/useThemeValue';
import type { ShadowProps } from '@kds/react-native-shadow-2';
export interface TextBubbleProps {
    isVisible?: boolean;
    fromRect?: {
        x: number;
        y: number;
        width: number;
        height: number;
    };
    text?: string;
    textFont?: number;
    textColor?: ThemeValue<string>;
    textWeight?: TextStyle["fontWeight"];
    numberOfLine?: number;
    width?: number | string;
    height?: number | string;
    arrowDirection?: number;
    arrowWidth?: number;
    arrowHeight?: number;
    arrowCornerRadius?: number;
    arrowBorderWidth?: number;
    arroweBorderColor?: string;
    bubbleOffsetX?: number;
    bubbleOffsetY?: number;
    bubbleStyle?: StyleProp<ViewStyle>;
    withOverlay?: boolean;
    overlayColor?: string;
    bubbleContentOffsetX?: number;
    bubbleCornerRadius?: number;
    bgColor?: ThemeValue<string>;
    shadowColor?: ThemeValue<string>;
    style?: StyleProp<ViewStyle>;
    onOpen?: () => void;
    onClose?: () => void;
    onToggle?: () => void;
    onClick?: (e: GestureResponderEvent) => void;
    children?: React.ReactNode;
    content?: React.ReactNode;
    isJustBubble?: boolean;
    bubbleShadow?: ShadowProps;
    isFitContentSize?: boolean;
    widthToFixFit?: number;
    isUseInnerFromRect?: boolean;
}
export declare const KidTextBubble: React.FC<TextBubbleProps & import("../../utils").KidProps>;
