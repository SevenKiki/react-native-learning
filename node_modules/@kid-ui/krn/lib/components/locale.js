//@ts-nocheck
import { createContext, useContext } from 'react';
import { deepAssign, get, isFunction } from '@kid-ui/shared';
import defaultMessages from '@kid-ui/locale/dist/zh-CN';
import En from '@kid-ui/locale/dist/en-US';
import Hant from '@kid-ui/locale/dist/zh-HK';
const defaultLang = 'zh-CN';
const LocaleContext = createContext(defaultLang);
const messages = {
    [defaultLang]: defaultMessages,
};
const Locale = {
    lang: defaultLang,
    cb: null,
    use(newLang, newMessages) {
        Locale.lang = newLang;
        this.add({ [newLang]: newMessages });
        if (Locale.cb) {
            Locale.cb(newLang);
        }
    },
    onLangChange(cb) {
        Locale.cb = cb;
    },
    add(newMessages = {}) {
        deepAssign(messages, newMessages);
    },
};
function useTranslate(name = '') {
    const prefix = name + '.';
    const lang = useContext(LocaleContext) || defaultLang;
    return function (path, ...args) {
        const message = messages[lang];
        const result = name ? get(message, prefix + path) || get(message, path) : get(message, path);
        return isFunction(result) ? result(...args) : result;
    };
}
const engLang = 'en';
const hantLang = 'zh-Hant'; // 繁体中文
const _messages = {
    [engLang]: En,
    [hantLang]: Hant,
};
Locale.add(_messages);
export { Locale, LocaleContext, useTranslate };
