import { View } from 'react-native';
import React from 'react';
import { createKidComponent } from '../../utils';
// Import Swiper React components
import { Swiper, SwiperSlide } from 'swiper/react';
import SwiperCore, { Autoplay, Pagination } from 'swiper';
// Import Swiper styles
import 'swiper/css';
import 'swiper/css/pagination';
// 引入自己的样式
import './style.css';
SwiperCore.use([Autoplay, Pagination]);
const Carousel = (props) => {
    const { carouselWidth, carouselHeight, loop, autoplay, borderRadius, showsPagination, autoplayTimeout, dotType, paginationPosition, onIndexChanged = () => { }, horizontal, scrollEnabled, itemStyle } = props;
    const SwiperProps = {
        autoplay: autoplay ? { delay: autoplayTimeout * 1000, disableOnInteraction: false } : autoplay,
        pagination: showsPagination ? { clickable: true } : showsPagination,
        spaceBetween: 0,
        centeredSlides: true,
        loop,
        onSlideChange: (swiper) => { onIndexChanged(swiper.realIndex); },
        direction: horizontal ? 'horizontal' : 'vertical',
        slidesPerView: 'auto',
        autoHeight: true,
        allowTouchMove: scrollEnabled
    };
    const dir = horizontal ? 'x' : 'y';
    const getClassName = (type, pos) => {
        let className = 'mySwiper ';
        // 处理 dot 的样式
        if (type === 'circle') {
            className += " " + dir + "_circleSwiper";
        }
        else if (type === 'bar') {
            className += " " + dir + "_barSwiper";
        }
        else if (type === 'ellipse') {
            className += " " + dir + "_ellipseSwiper";
        }
        // 处理 pagination 的位置。
        if (pos === "center") {
            className += " " + dir + "_centerSwiper";
        }
        else if (pos === "left") {
            className += " " + dir + "_leftSwiper";
        }
        else if (pos === 'right') {
            className += " " + dir + "_rightSwiper";
        }
        return className;
    };
    return (<View style={{ width: carouselWidth }}> 
      <Swiper className={getClassName(dotType, paginationPosition)} {...SwiperProps}>
        {React.Children.map(props.children, (c) => {
            return (<SwiperSlide>
              <View style={[{ height: carouselHeight, borderRadius: borderRadius, overflow: 'hidden' }, itemStyle]}>{c}</View>
            </SwiperSlide>);
        })}
      </Swiper>
    </View>);
};
Carousel.defaultProps = {
    carouselWidth: '100%',
    carouselHeight: 250,
    loop: false,
    autoplay: false,
    showsPagination: true,
    borderRadius: 10,
    autoplayTimeout: 2.5,
    horizontal: true,
    dotType: 'ellipse',
    paginationPosition: 'right',
    scrollEnabled: true
};
export const KidCarousel = createKidComponent(Carousel);
