import { StyleProp, ImageStyle, ViewStyle } from 'react-native';
import React from 'react';
import type { DialogProps } from '../dialog';
import type { ThemeValue } from '../../theme/useThemeValue';
declare type Data = {
    title: string;
    id: string;
};
interface CheckboxIconProps {
    iconSelectedColor?: ThemeValue<string>;
    iconUnSelectedColor?: ThemeValue<string>;
    iconSize?: number;
    iconStyle?: StyleProp<ImageStyle>;
    selectedIconKid?: string;
    selectedIconKidConfig?: (number | string)[];
    unSelectedIconKid?: string;
    unSelectedIconKidConfig?: (number | string)[];
    renderCheckboxIcon?: (selected: boolean) => React.ReactNode;
}
export interface CheckboxProps extends CheckboxIconProps {
    message?: Data[];
    optionColor?: ThemeValue<string>;
    single?: boolean;
    defaultValue?: string | string[];
    checkboxItemsWrapStyle?: StyleProp<ViewStyle>;
    checkboxItemStyle?: StyleProp<ViewStyle>;
    checkboxItemOptionStyle?: StyleProp<ViewStyle>;
    onInputChange?: (val: string[]) => void;
}
export declare const Checkbox: React.FC<CheckboxProps>;
interface InputProps {
    onInputChange?: (val: string) => void;
    placeholder?: string;
    autoFocus?: boolean;
    maxLength?: number;
}
export declare const renderInput: React.FC<InputProps>;
export declare const renderPassword: React.FC<{
    password: string;
}>;
export declare const renderBigButton: React.FC<DialogProps>;
export {};
