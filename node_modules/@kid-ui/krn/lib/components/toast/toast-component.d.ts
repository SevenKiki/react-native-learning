import React, { Component } from 'react';
import { Animated, StyleProp, ViewStyle, TextStyle } from 'react-native';
interface ToastProgressProps {
    type?: string;
    percent?: number;
    size?: number;
    style?: StyleProp<ViewStyle>;
}
export declare class ToastComponent extends Component<ToastProgressProps> {
    offset: Animated.Value;
    animation?: Animated.CompositeAnimation;
    constructor(props: ToastProgressProps);
    UNSAFE_componentWillReceiveProps(nextProps: ToastProgressProps): void;
    componentDidMount(): void;
    onPropsChange(nextProps: ToastProgressProps): void;
    shouldComponentUpdate(nextProps: ToastProgressProps): boolean;
    render(): JSX.Element;
}
export interface ToastProps {
    toastStyle?: ViewStyle;
    textStyle?: TextStyle;
    kid?: '' | 'style_toast_text' | 'style_toast_success' | 'style_toast_failed' | 'style_toast_download';
    text?: string;
    percent?: number;
    duration?: number;
    getPercentText?: (percent: number) => string;
}
export declare const KidToastComponent: React.FC<ToastProps>;
export {};
