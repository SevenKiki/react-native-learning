export declare type PromisableCallback<E = unknown, T = undefined> = (err: E, data: T) => void;
declare type PromisifyResult<T extends (...args: any) => void> = Parameters<T> extends [
    ...infer params,
    (err: any, data: infer results) => void
] ? (...args: params) => Promise<results> : (...args: any) => Promise<any>;
export declare const promisify: <T extends (...args: any) => any>(original: T) => PromisifyResult<T>;
export {};
