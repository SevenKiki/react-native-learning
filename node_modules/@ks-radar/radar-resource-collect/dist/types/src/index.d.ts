import { BaseCollect, RadarCore, ResourceLog } from '@ks-radar/radar-util';
export interface ResourceHookData {
    file: string;
    cached: boolean;
    protocol: string;
    res_type: string;
    failed: boolean;
}
export interface ResourceHookResData {
    intercept_report: boolean;
}
export declare class RadarResourceCollect extends BaseCollect {
    private ignoreList;
    private observer;
    broadcastJs: {
        off(handler: (event: ResourceLog) => void): void;
        on(handler: (event: ResourceLog) => void): () => void;
        once(handler: (event: ResourceLog) => void): () => void;
        emit(event: ResourceLog): void;
    };
    private resourceHook?;
    constructor(data: {
        core?: RadarCore;
        sampling?: number;
        ignoreList?: string[];
        resourceHook?: (data: ResourceHookData) => ResourceHookResData;
    });
    init(): void;
    private parseSeedLog;
    /**
     * 劫持 window.addEventListener('error')
     * @param e
     */
    private onResError;
    /**
     * 处理PerformanceObserverEntry中的资源
     * @param perf
     */
    private observeResource;
    collect(data: any, comDimension?: {
        [key: string]: any;
    }): void;
    destroy(): void;
}
