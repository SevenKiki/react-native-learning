/**
 * v2、v3 PB 相同部分
 */
export declare namespace Base {
    interface IdentityPackage {
        device_id?: string;
        user_id?: string | number;
        iu_id?: string;
        global_id?: string;
        union_id?: string;
        open_id?: string;
    }
    interface DevicePackage {
        os_version?: string;
        model?: string;
        ua?: string;
    }
    interface NetworkPackage {
        type?: number;
        isp?: string;
        ip?: string;
        ipv6?: string;
    }
    interface LocationPackage {
        country: string;
        province: string;
        city: string;
        county: string;
        street: string;
        latitude: number;
        longitude: number;
    }
    interface Experiment {
        name: string;
        value: string;
    }
    interface AdditionalSeqIdPackage {
        channel: number;
        channel_seq_id: number;
        custom_type: string;
        custom_seq_id: number;
    }
    interface AppPackage {
        product?: number;
        platform?: number;
        language?: string;
        channel?: string;
        version_name?: string;
        version_code?: number;
        package_name?: string;
        product_name?: string;
        hotfix_patch_version?: string;
        container?: string;
    }
    interface CommonPackage {
        identity_package: IdentityPackage;
        app_package: AppPackage;
        device_package: DevicePackage;
        network_package: NetworkPackage;
        location_package?: LocationPackage;
        experiment?: Experiment[];
        sdk_version?: string;
        service_name?: string;
        safety_id?: string;
        sub_biz?: string;
        style_type?: string;
        additional_seq_id_package?: AdditionalSeqIdPackage;
        need_encrypt?: boolean;
        global_attr?: {
            [key: string]: any;
        };
        h5_extra_attr: {
            [key: string]: any;
        };
    }
    interface UrlPackage {
        page: string;
        params: string;
        identity: string;
        page_type?: number;
        toJSON: () => any;
    }
    enum ElementStatus {
        UNKNOWN_STATUS = 0,
        CHECKED = 1,
        UNCHECKED = 2
    }
    interface ElementPackage {
        action?: string;
        action2?: string;
        index?: number;
        value?: number;
        status?: ElementStatus;
        params: string;
    }
    enum PageShowAction {
        UNKNOWN_ACTION = 0,
        ENTER = 1,
        LEAVE = 2,
        RESUME = 3
    }
    enum ActionStatus {
        UNKNOWN_STATUS = 0,
        SUCCESS = 1,
        FAIL = 2
    }
    enum ActionType {
        UNKNOWN_ACTION_TYPE = 0,
        CLICK = 1,
        LEFT_PULL = 2,
        RIGHT_PULL = 3,
        UP_PULL = 4,
        DOWN_PULL = 5
    }
    enum SubAction {
        UNKNOWN_SUB_ACTION = 0,
        PAGE_ENTER = 1,
        PAGE_LEAVE = 2,
        PAGE_RESUME = 3,
        PAGE_PAUSE = 4
    }
    enum Direction {
        UNKNOWN2 = 0,
        UP = 1,
        DOWN = 2,
        LEFT = 3,
        RIGHT = 4
    }
    /**
     * 染色参数
     *  page_name: 页面标识，
     *  element_action: 元素标识，
     *  stid：策略id（格式由小分队提供），
     *  pos：位置信息1，
     *  params:{元素参数1}
     */
    interface EntryTagType {
        page_name: string;
        element_action: string;
        stid?: string;
        pos?: number;
        params?: {
            [prop: string]: any;
        };
    }
    interface Event {
        url_package?: UrlPackage;
        refer_url_package?: UrlPackage;
        element_package?: ElementPackage;
        refer_element_package?: ElementPackage;
    }
    interface ShowEvent extends Event {
        action?: PageShowAction;
        type?: number;
        status?: ActionStatus;
        action_type?: number;
        show_type?: number;
        time_cost?: number;
        stay_length?: number;
        url_package: UrlPackage;
        sub_page?: boolean;
        first_load?: boolean;
        sub_action?: SubAction;
    }
    enum TaskStatus {
        UNKNOWN_STATUS = 0,
        START = 1,
        RETRY = 2,
        PAUSE = 3,
        RESUME = 4,
        PENDING = 5,
        PROCESSING = 6,
        SUCCESS = 7,
        FAIL = 8,
        CANCEL = 9,
        FINISH = 10
    }
    enum OperationType {
        UNKNOWN_OPERATION = 0,
        CLICK = 1,
        DOUBLE_CLICK = 2,
        TRIPLE_CLICK = 3,
        LONG_PRESS = 4,
        PULL = 5,
        DRAG = 6,
        SCALE = 7,
        PULL_DOWN = 8,
        PULL_UP = 9,
        RIGHT_CLICK = 10,
        AUTO = 11
    }
    interface TaskEvent extends Event {
        status: TaskStatus;
        session_id?: string;
        operation_type?: OperationType;
        operation_direction?: Direction;
        url_package: UrlPackage;
        element_package: ElementPackage;
    }
    interface CustomEvent {
        key: string;
        value: string;
    }
}
