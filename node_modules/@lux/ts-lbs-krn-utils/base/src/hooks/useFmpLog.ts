import { useCallback, useRef, useEffect } from 'react';
import { NativeModules } from 'react-native';

const useFmpLog = (rootTag: any, onCreateTimestamp: any, extra?: any) => {
    useEffect(() => {
        // 上报 t1
        console.log('=== reprot T1');
        NativeModules?.RootViewPageBridge?.rootViewDidMountWith(rootTag, {});
    }, [rootTag]);

    const t2 = useRef<number>(0);
    const t3 = useRef<number>(0);
    // 白屏时间（T1）

    // 第一个API返回的时间(T2)
    const handleT2 = useCallback(() => {
        // 接口获取完上报
        if (t2.current) {
            return;
        }
        console.log('=== reprot T2');
        t2.current = Date.now() - onCreateTimestamp;
    }, [onCreateTimestamp]);

    // 首屏时间（T3）
    const handleT3 = useCallback(() => {
        // 渲染完成上报
        if (t3.current) {
            return;
        }
        console.log('=== reprot T3');
        t3.current = Date.now() - onCreateTimestamp;
        if (t2.current > 0 && t3.current > 0 && t3.current >= t2.current) {
            // 上报 t2 t3
            NativeModules?.RootViewPageBridge?.reportPageRenderTime(
                rootTag,
                t2.current,
                t3.current,
                extra,
            );
        }
    }, [rootTag, onCreateTimestamp, extra]);

    return { handleT2, handleT3 };
};

export default useFmpLog;
