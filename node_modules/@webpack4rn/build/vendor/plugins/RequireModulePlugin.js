/**
 * require指定模块，在dll底部插入require表达式
 * @author linjinying
 */
const Compilation = require('webpack/lib/Compilation');
const { ConcatSource } = require('webpack-sources');

class RequireModulePlugin {
  constructor(options) {
    this.options = options;
  }
  apply(compiler) {
    const { modules: executeModules, dllName } = this.options;
    compiler.hooks.compilation.tap('RequireModulePlugin', (compilation) => {
      compilation.hooks.processAssets.tap(
        {
          name: 'RequireModulePlugin',
          stage: Compilation.PROCESS_ASSETS_STAGE_ADDITIONS,
        },
        () => {
          const chunkGraph = compilation.chunkGraph;
          for (const chunk of compilation.chunks) {
            const modules = compilation.chunkGraph.getChunkModules(chunk);
            for (const file of chunk.files) {
              executeModules.forEach((request) => {
                const moduleMathed = modules.find((m) => {
                  return m && m.userRequest && m.userRequest.includes(request);
                });
                if (moduleMathed) {
                  compilation.updateAsset(
                    file,
                    (old) =>
                      new ConcatSource(
                        old,
                        '\n',
                        `${dllName}('${chunkGraph.getModuleId(moduleMathed)}')`
                      )
                  );
                }
              });
            }
          }
        }
      );
    });
  }
}

module.exports.RequireModulePlugin = RequireModulePlugin;
