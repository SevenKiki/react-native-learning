import * as webpack from 'webpack';
import { HookMap, SyncHook } from 'tapable';
/**
 * {@link AssetResolver} configuration options.
 */
export interface AssetResolverConfig {
    /**
     * Override default test RegExp. If the asset matches the `test` RegExp, it will be process
     * by the custom React Native asset resolver. Otherwise, the resolution will process normally and
     * the asset will be handled by Webpack.
     */
    test?: RegExp;
    /** Target application platform. */
    platform: string;
}
interface CollectedScales {
    [key: string]: {
        platform: string;
        name: string;
    };
}
interface CollectOptions {
    name: string;
    platform: string;
    type: string;
}
declare type Resolver = webpack.Compiler['resolverFactory']['hooks']['resolver'] extends HookMap<infer H> ? H extends SyncHook<infer S> ? S extends any[] ? S[0] : never : never : never;
export declare class AssetResolver {
    readonly config: AssetResolverConfig;
    private compiler;
    static DEFAULT_TEST: RegExp;
    static collectScales(files: string[], { name, type, platform }: CollectOptions): CollectedScales;
    constructor(config: AssetResolverConfig, compiler: webpack.Compiler);
    apply(resolver: Resolver): void;
}
export declare class AssetResolverPlugin {
    private config;
    constructor(config: AssetResolverConfig);
    apply(compiler: webpack.Compiler): void;
}
export {};
