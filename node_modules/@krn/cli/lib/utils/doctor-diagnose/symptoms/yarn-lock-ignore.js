"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.YarnLockIgnore = void 0;
const utils_1 = require("./../utils");
const base_1 = require("./base");
const fs = require("fs-extra");
const matchReg = /(^|\n)[\/]?yarn\.lock\s*?/;
class YarnLockIgnore extends base_1.Symptom {
    constructor() {
        super(...arguments);
        this.desc = 'yarn.lock 文件已提交';
        this.advice = '请从 .gitignore 文件中删除 yarn.lcok';
        this.level = 'error';
    }
    async check() {
        const filename = (0, utils_1.searchFileUntilRoot)('.gitignore');
        if (!filename) {
            return true;
        }
        const content = fs.readFileSync(filename, {
            encoding: 'utf-8',
        });
        return !content.match(matchReg);
    }
    async fix() {
        const filename = (0, utils_1.searchFileUntilRoot)('.gitignore');
        if (!filename) {
            return false;
        }
        const content = fs.readFileSync(filename, {
            encoding: 'utf-8',
        });
        fs.writeFileSync(filename, content.replace(matchReg, ''));
        return true;
    }
}
exports.YarnLockIgnore = YarnLockIgnore;
const yarnLockIgnore = new YarnLockIgnore();
exports.default = yarnLockIgnore;
