interface BundleStatsOptions {
    bundleId: string;
    version: number;
    entry: string;
    outputDirPath: string;
    bundleDirPath: string;
    bundleFilePath: string;
    tmpDirPath: string;
    internalPath: string;
    webpackAssetsDirPath: string;
    sourcemapPath: string;
    sourceMapFilename: string;
    bundleSize: number;
}
type Package = {
    name: string;
    value: number;
    duplicateCount: number;
    version: string;
};
type KidComponent = {
    name: string;
    value: number;
    version: string;
    dir: string;
};
type BundleStats = {
    packages: Array<Package>;
    kidComponents: Array<KidComponent>;
    summary: {
        zipSize: number;
        totalSize: number;
        jsSize: number;
        imgSize: number;
        otherSize: number;
        packageSize: number;
        packagesCount: number;
        assetsCount: number;
        duplicatePackagesCount: number;
    };
};
export declare const bundleStats: ({ outputDirPath, sourcemapPath, bundleSize, bundleFilePath, bundleDirPath, version, }: BundleStatsOptions) => Promise<BundleStats>;
export {};
