"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const check_version_1 = require("./../utils/check-version");
const utils_1 = require("./../utils");
const command_1 = require("@oclif/command");
const command_2 = require("./command");
const fs = require("fs-extra");
const path = require("path");
class Doctor extends command_2.default {
    getFlags() {
        const { flags } = this.parse(Doctor);
        return flags;
    }
    async run() {
        const flags = this.getFlags();
        await super.run();
        if (!fs.existsSync(path.resolve('krn.config.json'))) {
            utils_1.Logger.error('当前目录不存在 krn.config.json，请在存在此文件的打包目录运行此命令');
            return;
        }
        // 检查新版本
        await (0, check_version_1.checkNewVersion)();
        await (0, utils_1.diagnose)(flags.fix);
        this.runAnalytics(Object.assign(Object.assign({ id: this.id }, flags), { CLIVersion: this.config.version }));
    }
}
exports.default = Doctor;
Doctor.hidden = false;
Doctor.description = '诊断修复工具';
Doctor.examples = [`krn doctor`];
Doctor.flags = {
    fix: command_1.flags.boolean({
        description: '是否进行修复',
        default: false,
        required: false,
    }),
};
