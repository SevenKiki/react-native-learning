{"version":3,"file":"ConsoleReporter.js","names":["DARK_BLOCK_CHAR","LIGHT_BLOCK_CHAR","MAX_PROGRESS_BAR_CHAR_WIDTH","singleLog","singleLineLog","process","stdout","formatLogTimestamp","date","chalk","dim","toDateString","toLocaleTimeString","hour12","String","getMilliseconds","padEnd","ConsoleReporter","constructor","config","internalReporter","isWorker","asJson","JsonConsoleReporter","InteractiveConsoleReporter","log","flush","stop","console","JSON","stringify","IS_SYMBOL_SUPPORTED","platform","env","CI","TERM","SYMBOLS","debug","colorette","gray","info","blue","warn","yellow","error","red","progress","green","FALLBACK_SYMBOLS","requestBuffer","level","type","firstMessage","message","processProgress","normalizedLog","normalizeLog","write","prettifyLog","throttle","value","percentage","Math","floor","filledBar","phase","localPath","path","relative","KRN_ENTRY","bundleTypeColor","bgGreen","repeat","bgWhite","white","bold","output","Date","timestamp","inverse","toUpperCase","reset","dirname","basename","issuer","push","msg","reqId","req","res","rest","bufferedReq","request","statusCode","method","url","Array","isArray","Object","keys","length","issuerOverride","undefined","body","colorizeText","toString","statusText","status","util","inspect","colors","depth","toISOString","split","logType","text"],"sources":["../../../src/logging/reporters/ConsoleReporter.ts"],"sourcesContent":["import util from 'util';\nimport path from 'path';\nimport colorette from 'colorette';\nimport throttle from 'lodash.throttle';\nimport chalk from 'chalk';\n// @ts-ignore\nimport singleLineLog from 'single-line-log';\nimport type { LogEntry, LogType, Reporter } from '../types';\n\nconst DARK_BLOCK_CHAR = '\\u2593';\nconst LIGHT_BLOCK_CHAR = '\\u2591';\nconst MAX_PROGRESS_BAR_CHAR_WIDTH = 16;\nconst singleLog = singleLineLog(process.stdout);\n\nconst formatLogTimestamp = (date: Date) => {\n  return chalk.dim(\n    `[${date.toDateString()} ${date.toLocaleTimeString('en-US', {\n      hour12: false,\n    })}.${String(date.getMilliseconds()).padEnd(3, '0')}] `\n  );\n};\n\nexport interface ConsoleReporterConfig {\n  asJson?: boolean;\n  level?: 'silent' | 'normal' | 'verbose';\n  isWorker?: boolean;\n}\n\nexport class ConsoleReporter implements Reporter {\n  private internalReporter: Reporter;\n\n  constructor(private config: ConsoleReporterConfig) {\n    this.internalReporter =\n      this.config.isWorker || this.config.asJson\n        ? new JsonConsoleReporter(this.config)\n        : new InteractiveConsoleReporter(this.config);\n  }\n\n  process(log: LogEntry) {\n    this.internalReporter.process(log);\n  }\n\n  flush() {\n    this.internalReporter.flush();\n  }\n\n  stop() {\n    this.internalReporter.stop();\n  }\n}\n\nclass JsonConsoleReporter implements Reporter {\n  constructor(private config: ConsoleReporterConfig) {}\n\n  process(log: LogEntry) {\n    console.log(JSON.stringify(log));\n  }\n\n  flush() {\n    // NOOP\n  }\n\n  stop() {\n    // NOOP\n  }\n}\n\nconst IS_SYMBOL_SUPPORTED =\n  process.platform !== 'win32' ||\n  process.env.CI ||\n  process.env.TERM === 'xterm-256color';\n\nconst SYMBOLS: Record<LogType | 'progress', string> = {\n  debug: colorette.gray('?'),\n  info: colorette.blue('ℹ'),\n  warn: colorette.yellow('⚠'),\n  error: colorette.red('✖'),\n  progress: colorette.green('⇢'),\n};\n\nconst FALLBACK_SYMBOLS: Record<LogType | 'progress', string> = {\n  debug: colorette.gray('?'),\n  info: colorette.blue('i'),\n  warn: colorette.yellow('!'),\n  error: colorette.red('x'),\n  progress: colorette.green('->'),\n};\n\nclass InteractiveConsoleReporter implements Reporter {\n  private requestBuffer: Record<string, Object> = {};\n\n  constructor(private config: ConsoleReporterConfig) {}\n\n  process(log: LogEntry) {\n    // Do not log anything in silent mode\n    if (this.config.level === 'silent') {\n      return;\n    }\n\n    // Do not log debug messages in non-verbose mode\n    if (log.type === 'debug' && this.config.level !== 'verbose') {\n      return;\n    }\n\n    const [firstMessage] = log.message;\n    if (typeof firstMessage === 'object' && 'progress' in firstMessage) {\n      this.processProgress(log);\n      return;\n    }\n\n    const normalizedLog = this.normalizeLog(log);\n    if (normalizedLog) {\n      process.stdout.write(\n        `${\n          IS_SYMBOL_SUPPORTED ? SYMBOLS[log.type] : FALLBACK_SYMBOLS[log.type]\n        } ${this.prettifyLog(normalizedLog)}\\n`\n      );\n    }\n  }\n\n  private processProgress = throttle((log: LogEntry) => {\n    const {\n      progress: { value, message, platform },\n    } = log.message[0] as {\n      progress: {\n        value: number;\n        label: string;\n        message: string;\n        platform: string;\n      };\n    };\n\n    const percentage = Math.floor(value * 100);\n    const filledBar = Math.floor(value * MAX_PROGRESS_BAR_CHAR_WIDTH);\n    const phase = value < 1 ? 'in_progress' : 'done';\n    const localPath = path.relative('.', process.env.KRN_ENTRY || '');\n    const bundleTypeColor = phase === 'done' ? chalk.green : chalk.yellow;\n    const progress =\n      phase === 'in_progress'\n        ? chalk.green.bgGreen(DARK_BLOCK_CHAR.repeat(filledBar)) +\n          chalk.bgWhite.white(\n            LIGHT_BLOCK_CHAR.repeat(MAX_PROGRESS_BAR_CHAR_WIDTH - filledBar)\n          ) +\n          chalk.bold(` ${percentage}% `) +\n          chalk.dim(`(${message || ''})`)\n        : '';\n    const output =\n      formatLogTimestamp(new Date(log.timestamp)) +\n      chalk.blue.bold(` ${platform} `) +\n      bundleTypeColor.inverse.bold(` ${'BUNDLE'.toUpperCase()} `) +\n      chalk.reset.dim(` ${path.dirname(localPath)}/`) +\n      chalk.bold(path.basename(localPath)) +\n      ' ' +\n      progress +\n      '\\n';\n    singleLog(output);\n  }, 200);\n\n  private normalizeLog(log: LogEntry): LogEntry | undefined {\n    const message = [];\n    let issuer = log.issuer;\n\n    for (const value of log.message) {\n      if (\n        typeof value === 'string' ||\n        typeof value === 'boolean' ||\n        typeof value === 'number'\n      ) {\n        message.push(value);\n      } else if (\n        'msg' in value &&\n        (value as { msg: string }).msg === 'incoming request'\n      ) {\n        // Incoming dev server request\n        const { reqId, req } = value as any as { reqId: string; req: Object };\n        // Save req object, so that we can extract data when request gets completed\n        this.requestBuffer[reqId] = req;\n      } else if (\n        'msg' in value &&\n        (value as { msg: string }).msg === 'request completed'\n      ) {\n        // Dev server response\n        const { reqId, res, msg, ...rest } = value as {\n          reqId: string;\n          res: Object;\n          msg: string | string[];\n        };\n        const bufferedReq = this.requestBuffer[reqId];\n        if (bufferedReq) {\n          message.push({\n            request: {\n              statusCode: (res as any).statusCode,\n              method: (bufferedReq as any).method,\n              url: (bufferedReq as any).url,\n            },\n          });\n        }\n\n        if (msg) {\n          message.push(...(Array.isArray(msg) ? msg : [msg]));\n        }\n\n        if (Object.keys(rest).length) {\n          message.push(rest);\n        }\n      } else if ('msg' in value) {\n        const {\n          msg,\n          issuer: issuerOverride,\n          ...rest\n        } = value as { msg: string | string[]; issuer?: string };\n        issuer = issuerOverride || issuer;\n        message.push(...(Array.isArray(msg) ? msg : [msg]), rest);\n      } else {\n        message.push(value);\n      }\n    }\n\n    // Ignore empty logs\n    if (!message.length) {\n      return undefined;\n    }\n\n    return {\n      timestamp: log.timestamp,\n      type: log.type,\n      issuer,\n      message,\n    };\n  }\n\n  private prettifyLog(log: LogEntry) {\n    let body = '';\n\n    for (const value of log.message) {\n      if (\n        typeof value === 'string' ||\n        typeof value === 'boolean' ||\n        typeof value === 'number'\n      ) {\n        // Colorize and concat primitive values\n        body += colorizeText(log.type, value.toString());\n        body += ' ';\n      } else if ('request' in value) {\n        // Colorize and concat dev server req/res object\n        const { request } = value as {\n          request: { method: string; statusCode: number; url: string };\n        };\n        let statusText = `${request.method} ${request.statusCode}`;\n\n        let status = colorette.green(statusText);\n        if (request.statusCode >= 500) {\n          status = colorette.red(statusText);\n        } else if (request.statusCode >= 400) {\n          status = colorette.yellow(statusText);\n        }\n\n        body += `${status} ${colorette.gray(request.url)}`;\n        body += ' ';\n      } else if (Object.keys(value).length) {\n        // Colorize and concat generic object\n        body +=\n          util.inspect(value, {\n            colors: true,\n            depth: 3,\n          }) + ' ';\n      }\n    }\n\n    return (\n      colorette.gray(\n        `[${new Date(log.timestamp).toISOString().split('T')[1]}]`\n      ) +\n      colorette.bold(`[${log.issuer}]`) +\n      ` ${body}`\n    );\n  }\n\n  flush() {\n    // NOOP\n  }\n\n  stop() {\n    // NOOP\n  }\n}\n\n/**\n * Apply ANSI colors to given text.\n *\n * @param logType Log type for the text, based on which different colors will be applied.\n * @param text Text to apply the color onto.\n * @returns Text wrapped in ANSI color sequences.\n *\n * @internal\n */\nfunction colorizeText(logType: LogType, text: string) {\n  if (logType === 'warn') {\n    return colorette.yellow(text);\n  } else if (logType === 'error') {\n    return colorette.red(text);\n  }\n\n  return text;\n}\n"],"mappings":"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"}