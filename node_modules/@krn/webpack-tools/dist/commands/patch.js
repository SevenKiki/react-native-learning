"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable unicorn/prefer-module */
const core_1 = require("@oclif/core");
const fs = require("fs-extra");
const defaultPackages = [
    {
        name: '@kid-ui/krn',
    },
    {
        name: 'react-native-svg',
        sideEffects: ['./src/elements/TSpan.tsx', './lib/module/elements/TSpan.js'],
    },
    {
        name: '@kds/react-native-svg',
        sideEffects: ['./src/elements/TSpan.tsx', './lib/module/elements/TSpan.js'],
    },
    {
        name: '@kds/react-native-svg',
    },
    {
        name: '@es/rtx-api',
    },
    {
        name: '@es/request',
    },
];
class Patch extends core_1.Command {
    sideEffects(name, value) {
        try {
            const pkgPath = require.resolve(`${name}/package.json`, {
                paths: [process.cwd()],
            });
            if (fs.existsSync(pkgPath)) {
                const pkg = fs.readJsonSync(pkgPath);
                pkg.sideEffects = value;
                fs.writeJsonSync(pkgPath, pkg, { spaces: 2 });
            }
            // 解析失败说明没有安装，可以跳过
        }
        catch {
            // ignore
        }
    }
    async run() {
        const { args } = await this.parse(Patch);
        const packages = [...new Set([...defaultPackages.map(item => item.name), ...(args.packages ? args.packages.split(',').map((item) => item.trim()) : [])])];
        this.log(`将要 patch 的 npm 包：${packages.join(',')}`);
        for (const packageName of packages) {
            try {
                const customPackage = defaultPackages.find(item => item.name === packageName);
                this.sideEffects(packageName, (customPackage === null || customPackage === void 0 ? void 0 : customPackage.sideEffects) || false);
                this.log(`${packageName} patched`);
            }
            catch (error) {
                this.log(`${packageName} patch 失败：${error}`);
            }
        }
    }
}
exports.default = Patch;
Patch.description = '项目依赖安装完成后修复某些依赖项使其在 webpack 打包时 tree shaking 生效';
Patch.examples = [
    `$ krn-webpack patch
`,
];
Patch.args = [{ name: 'packages', description: '额外需要 patch  的 npm 包，多个包名中以英文逗号分隔', required: false }];
