import { liveRnBridgeExecute } from '../utils/liveRnBridgeExecute';
import type {
    IAcceptPKInvitationParams,
    ILineInvitationParam,
    ILiveLineInvitee,
    INotifyAddFansPriceChanged,
    IRejectPKInvitationParams,
    IStartPKInvitation,
    IStartSpecificLineMatchParam,
    ISuspendLineInvitationParam,
    IPKInviteInfo,
    IPKMagicFaceInfo,
    IPKCurrentMagicFaceResult,
} from './interface';
import { IStartMultiPK } from './interface';
import { ILiveBridgeResult } from '../liveCommon';

/**
 * 主播端接受连线邀请 </br>
 * 支持版本: 9.9.10+ </br>
 * 主播端接到邀请，在H5上点击接受邀请，端上调用接口（/rest/n/live/lineChat/accept）</br>
 * @param params
 */
export function acceptLineInvitation(
    params: ILineInvitationParam,
): Promise<object> {
    return liveRnBridgeExecute('acceptLineInvitation', params);
}

/**
 * 主播端拒绝连线邀请 </br>
 * 支持版本: 9.9.10+ </br>
 * 主播端接到邀请，在H5上点击拒绝邀请，端上调用接口（/rest/n/live/lineChat/reject）</br>
 * @param params
 */
export function rejectLineInvitation(
    params: ILineInvitationParam,
): Promise<object> {
    return liveRnBridgeExecute('rejectLineInvitation', params);
}

/**
 * 主播发起邀请 </br>
 * 支持版本: 9.9.10+ </br>
 * web将数据透传到端上，端上发起邀请请求（/rest/n/live/lineChat/invite）
 * @param params
 */
export function startSpecificLineMatch(
    params: IStartSpecificLineMatchParam,
): Promise<object> {
    return liveRnBridgeExecute('startSpecificLineMatch', params);
}

/**
 * 主播端接到邀请 </br>
 * 支持版本: 9.9.10+ </br>
 * 在H5上点击稍后再接邀请，端上调用接口（/rest/n/live/lineChat/acceptLater）</br>
 * @param params
 */
export function suspendLineInvitation(
    params: ISuspendLineInvitationParam,
): Promise<object> {
    return liveRnBridgeExecute('suspendLineInvitation', params);
}

/**
 * 通知客户端主播涨粉单价设置完毕</br>
 * 支持版本: 9.4.30+ </br>
 * @param params
 */
export function notifyAddFansPriceChanged(
    params: INotifyAddFansPriceChanged,
): Promise<object> {
    return liveRnBridgeExecute('notifyAddFansPriceChanged', { param: params });
}

/**
 * 接受PK邀请 </br>
 * 支持版本: 10.2.30+ </br>
 * @param params
 */
export function acceptPKInvitation(
    params: IAcceptPKInvitationParams,
): Promise<object> {
    return liveRnBridgeExecute('acceptPKInvitation', params);
}

/**
 * 拒绝PK邀请 </br>
 * 支持版本: 10.2.30+ </br>
 * @param params
 */
export function rejectPKInvitation(
    params: IRejectPKInvitationParams,
): Promise<object> {
    return liveRnBridgeExecute('rejectPKInvitation', params);
}

/**
 * 发起PK邀请 </br>
 * 支持版本: 10.2.30+ </br>
 * @param params
 */
export function startPKInvitation(params: IStartPKInvitation): Promise<object> {
    return liveRnBridgeExecute('startPKInvitation', params);
}

/**
 * 获得主播当前佩戴的魔表Id </br>
 * 支持版本: 10.3.20+ </br>
 */
export function getCurrentMagicFaceId(): Promise<
    IPKCurrentMagicFaceResult<IPKMagicFaceInfo>
    > {
    return liveRnBridgeExecute('getCurrentMagicFaceId', null);
}

/**
 * 穿戴魔表 </br>
 * 支持版本: 10.3.20+ </br>
 * @param params
 */
export function applyMagicFace(params: IPKMagicFaceInfo): Promise<object> {
    return liveRnBridgeExecute('applyMagicFace', {
        magicFaceId: params.magicFaceId,
    });
}

/**
 * 卸下魔表 </br>
 * 支持版本: 10.3.20+ </br>
 * @param params
 */
export function removeMagicFace(params: IPKMagicFaceInfo): Promise<object> {
    return liveRnBridgeExecute('removeMagicFace', {
        magicFaceId: params.magicFaceId,
    });
}

/*
 * 发起多人PK
 * @param params 多人PK发起参数
 */
export function startMultiPK(
    params: IStartMultiPK,
): Promise<ILiveBridgeResult<any>> {
    return liveRnBridgeExecute('startMultiPK', params);
}

export type {
    IAcceptPKInvitationParams,
    ILineInvitationParam,
    ILiveLineInvitee,
    INotifyAddFansPriceChanged,
    IRejectPKInvitationParams,
    IStartPKInvitation,
    IStartSpecificLineMatchParam,
    ISuspendLineInvitationParam,
    IPKInviteInfo,
};
