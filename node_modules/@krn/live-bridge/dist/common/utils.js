import { NativeModules, Platform } from 'react-native';
import { bridgeCenterExecute } from '../utils/bridgeCenterExecute';
/**
 * 市场上常用 App 的包名
 */
export const APP_PKG_NAME_MAP = {
    WECHAT: Platform.select({
        android: 'com.tencent.mm',
        ios: 'wechat',
    }),
    QQ: Platform.select({
        android: 'com.tencent.mobileqq',
        ios: 'mqq',
    }),
    ALIPAY: Platform.select({
        android: 'com.eg.android.AlipayGphone',
        ios: 'alipay',
    }),
};
/**
 * 判断是否安装某个 APP
 * @param pkgName {@link APP_PKG_NAME_MAP}
 */
export function hasInstalledApp(pkgName) {
    return new Promise((resolve, reject) => {
        if (typeof NativeModules?.KRNBasic?.hasInstalledApp === 'function') {
            // @ts-ignore
            NativeModules.KRNBasic.hasInstalledApp(pkgName, (result) => {
                if (result.result === 1) {
                    resolve(true);
                }
                else {
                    resolve(false);
                }
            });
        }
        else {
            reject(new Error(' NativeModules.KRNBasic.hasInstalledApp not function'));
        }
    });
}
/**
 * 打开页面
 * @param url
 * @param callback
 */
export function open(url, callback) {
    return new Promise((resolve, reject) => {
        if (typeof NativeModules?.KRNBasic?.open === 'function') {
            NativeModules.KRNBasic.open(url, callback || ((r) => { }));
        }
        else {
            reject(new Error(' NativeModules.KRNBasic.open not function'));
        }
    });
}
/**
 * 页面跳转
 * @param params
 * @param callback
 */
export function openWithInfo(params) {
    return new Promise((resolve, reject) => {
        if (typeof NativeModules?.KRNBasic?.openWithInfo === 'function') {
            NativeModules.KRNBasic.openWithInfo(params);
        }
        else {
            reject(new Error(' NativeModules.KRNBasic.open not function'));
        }
    });
}
/**
 * 获取一键登录信息
 * https://docs.corp.kuaishou.com/k/home/VIeHQqc-L2PU/fcADhAQXiOv6yTYsms8_5cJGN
 */
export function mobileQuickLoginInfo() {
    return bridgeCenterExecute('social', 'mobileQuickLoginInfo');
}
