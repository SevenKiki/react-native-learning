import { NativeModules } from 'react-native';
import { logError } from '../utils/logger';
import { getInitData } from '../init';
/**
 * KDS 可用性测试埋点, 对应 KRN 埋点规范的 T1 埋点 </br>
 * [埋点规范](https://kds.corp.kuaishou.com/kds-react/document/tutorial/03-performance.html)
 * @param extra
 */
export function reportAppDidMount(extra) {
    const { rootTag } = getInitData();
    try {
        if (typeof NativeModules?.RootViewPageBridge?.rootViewDidMountWith !==
            'function') {
            throw new Error('NativeModules.RootViewPageBridge.rootViewDidMountWith not function');
        }
        else {
            NativeModules.RootViewPageBridge.rootViewDidMountWith(rootTag, extra);
        }
    }
    catch (e) {
        // @ts-ignore
        logError('common', 'reportAppDidMount', e);
    }
}
/**
 * KDS 可用性测试埋点, 对应 KRN 埋点规范的 T2 和 T3 埋点 </br>
 * [埋点规范](https://kds.corp.kuaishou.com/kds-react/document/tutorial/03-performance.html)
 * @param rootTag React rootTag
 * @param onCreateTimestamp 启动参数中的容器创建时间 {@link IInitAPPProps.onCreateTimestamp}
 * @param fetchDoneTime 首屏数据请求完成
 * @param didUpdateTime 数据和渲染完毕，可在 componentDidUpdate 触发；
 * @param extra 额外参数，业务自己可以传一些自己的业务参数信息
 */
export function reportPageRenderTime(fetchDoneTime, didUpdateTime, extra) {
    const { rootTag } = getInitData();
    const { onCreateTimestamp } = getInitData();
    if (!(onCreateTimestamp > 0)) {
        // 兼容低版本本地 server 没有值的情况
        return;
    }
    try {
        if (typeof NativeModules?.RootViewPageBridge?.reportPageRenderTime !==
            'function') {
            throw new Error('NativeModules.RootViewPageBridge.reportPageRenderTime not function');
        }
        else {
            const t2 = fetchDoneTime - onCreateTimestamp;
            const t3 = didUpdateTime - onCreateTimestamp;
            if (t2 > 0 && t3 > 0 && t3 >= t2) {
                NativeModules.RootViewPageBridge.reportPageRenderTime(rootTag, t2, t3, extra);
            }
            else {
                throw new Error(`脏数据： t2: ${t2} t3: ${t3}`);
            }
        }
    }
    catch (e) {
        // @ts-ignore
        logError('common', 'reportPageRenderTime', e);
    }
}
