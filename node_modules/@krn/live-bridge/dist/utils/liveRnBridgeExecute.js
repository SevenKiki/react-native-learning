import { NativeModules } from 'react-native';
import { getInitData } from '../init';
function parseResult(result) {
    // 和客户端 @dengmin 约定如下逻辑
    let resultData;
    if (result === null) {
        resultData = {};
    }
    else if (typeof result === 'object') {
        resultData = result;
    }
    else {
        try {
            resultData = JSON.parse(result);
        }
        catch (e) {
            resultData = {};
        }
        if (typeof resultData !== 'object') {
            resultData = {};
        }
    }
    return resultData;
}
export function liveRnBridgeExecute(command, params) {
    const { liveId, pageId } = getInitData();
    if (typeof NativeModules?.LiveRnBridge?.execute !== 'function') {
        return Promise.reject(new Error('NativeModules.LiveRnBridge.execute not function'));
    }
    return new Promise((resolve, reject) => {
        NativeModules.LiveRnBridge.execute({
            command,
            params,
            containerParams: {
                liveId,
                pageId,
            },
        })
            .then((res) => {
            resolve(parseResult(res));
        })
            .catch((e) => {
            reject(e);
        });
    });
}
