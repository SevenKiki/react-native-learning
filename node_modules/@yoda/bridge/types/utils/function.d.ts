import type { Func } from './types';
export declare const identity: <T>(x: T) => T;
export declare const isFunction: <A extends any[] = any, R = any>(arg: unknown) => arg is Func<A, R>;
export declare const delay: (timeout: number) => Promise<void>;
export declare const memoize: <A extends any[], R>(func: Func<A, R>, resolver?: Func<A, unknown>) => Func<A, R>;
