import type { YodaBridges, InvocationParams, InvocationConfig } from './types';
export declare type BridgeErrorContext<T extends keyof YodaBridges> = T extends unknown ? {
    bridge: T;
    params: InvocationParams<T>;
} : never;
export declare class BridgeError<T extends keyof YodaBridges> extends Error {
    name: string;
    message: string;
    code: number;
    context: BridgeErrorContext<T>;
    constructor(message: string, code: number, config: InvocationConfig<T>);
    toJSON(): {
        name: string;
        message: string;
        code: number;
        context: BridgeErrorContext<T>;
    };
}
export declare const isBridgeError: (err: unknown) => err is BridgeError<keyof YodaBridges>;
