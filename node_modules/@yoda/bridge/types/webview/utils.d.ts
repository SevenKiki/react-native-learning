/**
 *
 * 生成唯一的id
 * @export
 * @returns
 */
export declare function generateUUID(rc?: boolean): string;
/**
 *
 * 生成临时唯一的方法挂接到window上，给客户端回调用
 * @name generateUUCallbackFunction
 * @private
 * @param {function} callback 回调函数，客户端方法执行完后会执行该方法
 * @param {boolean} notDelete 是否删除当前回调，留在当前页面的内存中
 * @param {string} bridge 的命名空间和方法名，方便后续问题排查
 * @param {string} 回调方法对应的唯一ID
 * @returns
 */
export declare function generateUUCallbackFunction(callback: Function, notDelete: boolean, callbackName: string): string;
export declare function transformFuncToURL(btn: any, callbackName: string): any;
export declare function generateHandlerFunction(callback: Function, bridge: string): string;
/**
 * Bridge 调用参数预处理，针对几类特定 bridge 进行处理
 * @name bridgeParamsHandler
 * @private
 * @param {string} namespace 命名空间
 * @param {string} bridge 桥名
 * @param {Object} 调用参数
 * @param {function} bridge 本身调用的回调
 */
export declare function bridgeParamsHandler(namespace: string, bridgeName: string, params: any, invokeCallback: Function): any;
