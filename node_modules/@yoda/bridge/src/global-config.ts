import type { BridgeError } from './bridge-error';
import { console } from './loggers';
import { getCurrentMode, setCurrentMode, type Mode } from './mode';
import type { YodaBridges } from './types';
import { version } from './version';

export interface GlobalConfig {
    mode: Mode;
    timeout?: number;
    errorHandler?: (err: BridgeError<keyof YodaBridges>) => void;
}

export const globalConfig: GlobalConfig = {
    get mode() {
        return getCurrentMode();
    },
    set mode(mode: Mode) {
        setCurrentMode(mode);

        console.info(`You're currently running version ${version} in ${mode} mode.`);
    },
};

export const setGlobalConfig = (nextGlobalConfig: Partial<GlobalConfig>): void => {
    Object.assign(globalConfig, nextGlobalConfig);
};
