import * as bridge from '../bridge';
import { NAMESPACE_2_GLOBALVAR } from '../webview/constant';

const apiSet: Set<string> = new Set();

export const invokeAndroid9920 = async (callData: {
    namespace: string;
    name: string;
    params: unknown;
    multiCallback: boolean;
    callback: ((data: unknown) => void) | undefined;
}) => {
    const { namespace, name, params, multiCallback, callback } = callData;

    if (!apiSet.size) {
        const apiListRes = await bridge.invoke({
            namespace: 'tool',
            name: 'getApiList',
            params: {},
        }) as { result: number; apiList: { namespace: string; name: string }[] };

        if (apiListRes.result === 1 && Array.isArray(apiListRes.apiList)) {
            apiListRes.apiList.forEach(({ namespace, name }) => apiSet.add(`${namespace}.${name}`));
        }
    }

    const canUse = apiSet.has(`${NAMESPACE_2_GLOBALVAR[namespace] ?? namespace}.${name}`);

    return new Promise(resolve => {
        if (canUse) {
            void bridge.invoke({
                namespace,
                name,
                params,
                multiCallback,
                callback,
            }).then(resolve);
        } else {
            const result404 = { result: 125004 };

            callback?.(result404);
            resolve(result404);
        }
    });
};
