import { memoize } from './function';

export type Platform =
    | 'Yoda'
    // 快手|快手极速版
    | 'Kwai|ksNebula'
    // 快手直播伴侣
    | 'livemate';

const compareVersion = (leftSemVer: string, rightSemVer: string): number => {
    if (!leftSemVer || !rightSemVer) {
        return Number.NaN;
    }

    const leftVersions = leftSemVer.split('.').map(version => +version);
    const rightVersions = rightSemVer.split('.').map(version => +version);

    for (let i = 0; i < Math.min(leftVersions.length, rightVersions.length); i += 1) {
        if (Number.isNaN(leftVersions[i]) || Number.isNaN(rightVersions[i])) {
            return Number.NaN;
        }

        if (leftVersions[i] !== rightVersions[i]) {
            return leftVersions[i] - rightVersions[i];
        }
    }

    return 0;
};

export const getPlatformVersion = memoize((platform: Platform): string =>
    new RegExp(`(?:${platform})\\/([\\d+.]+)`)
        .exec(typeof navigator === 'undefined' ? '' : navigator.userAgent)?.[1] ?? '');

export const compareYodaVersion = (version: string): number =>
    compareVersion(getPlatformVersion('Yoda'), version);

export const compareKwaiAppVersion = (version: string): number =>
    compareVersion(getPlatformVersion('Kwai|ksNebula'), version);
