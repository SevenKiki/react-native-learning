export class Deferred<T = void> {
    resolve!: (value: T | PromiseLike<T>) => void;

    reject!: (reason?: unknown) => void;

    readonly promise: Promise<T>;

    constructor() {
        this.promise = new Promise<T>((resolve, reject) => {
            this.resolve = resolve;
            this.reject = reject;
        });
    }
}
