(function (global, factory) {
typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
typeof define === 'function' && define.amd ? define(['exports'], factory) :
(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.KSYoda = {}));
})(this, (function (exports) { 'use strict';

function ownKeys$2(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _regeneratorRuntime() {
  _regeneratorRuntime = function () {
    return exports;
  };
  var exports = {},
    Op = Object.prototype,
    hasOwn = Op.hasOwnProperty,
    $Symbol = "function" == typeof Symbol ? Symbol : {},
    iteratorSymbol = $Symbol.iterator || "@@iterator",
    asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator",
    toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
  function define(obj, key, value) {
    return Object.defineProperty(obj, key, {
      value: value,
      enumerable: !0,
      configurable: !0,
      writable: !0
    }), obj[key];
  }
  try {
    define({}, "");
  } catch (err) {
    define = function (obj, key, value) {
      return obj[key] = value;
    };
  }
  function wrap(innerFn, outerFn, self, tryLocsList) {
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,
      generator = Object.create(protoGenerator.prototype),
      context = new Context(tryLocsList || []);
    return generator._invoke = function (innerFn, self, context) {
      var state = "suspendedStart";
      return function (method, arg) {
        if ("executing" === state) throw new Error("Generator is already running");
        if ("completed" === state) {
          if ("throw" === method) throw arg;
          return doneResult();
        }
        for (context.method = method, context.arg = arg;;) {
          var delegate = context.delegate;
          if (delegate) {
            var delegateResult = maybeInvokeDelegate(delegate, context);
            if (delegateResult) {
              if (delegateResult === ContinueSentinel) continue;
              return delegateResult;
            }
          }
          if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) {
            if ("suspendedStart" === state) throw state = "completed", context.arg;
            context.dispatchException(context.arg);
          } else "return" === context.method && context.abrupt("return", context.arg);
          state = "executing";
          var record = tryCatch(innerFn, self, context);
          if ("normal" === record.type) {
            if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue;
            return {
              value: record.arg,
              done: context.done
            };
          }
          "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg);
        }
      };
    }(innerFn, self, context), generator;
  }
  function tryCatch(fn, obj, arg) {
    try {
      return {
        type: "normal",
        arg: fn.call(obj, arg)
      };
    } catch (err) {
      return {
        type: "throw",
        arg: err
      };
    }
  }
  exports.wrap = wrap;
  var ContinueSentinel = {};
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}
  var IteratorPrototype = {};
  define(IteratorPrototype, iteratorSymbol, function () {
    return this;
  });
  var getProto = Object.getPrototypeOf,
    NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);
  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function (method) {
      define(prototype, method, function (arg) {
        return this._invoke(method, arg);
      });
    });
  }
  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if ("throw" !== record.type) {
        var result = record.arg,
          value = result.value;
        return value && "object" == typeof value && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) {
          invoke("next", value, resolve, reject);
        }, function (err) {
          invoke("throw", err, resolve, reject);
        }) : PromiseImpl.resolve(value).then(function (unwrapped) {
          result.value = unwrapped, resolve(result);
        }, function (error) {
          return invoke("throw", error, resolve, reject);
        });
      }
      reject(record.arg);
    }
    var previousPromise;
    this._invoke = function (method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function (resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }
      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
    };
  }
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (undefined === method) {
      if (context.delegate = null, "throw" === context.method) {
        if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel;
        context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method");
      }
      return ContinueSentinel;
    }
    var record = tryCatch(method, delegate.iterator, context.arg);
    if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel;
    var info = record.arg;
    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel);
  }
  function pushTryEntry(locs) {
    var entry = {
      tryLoc: locs[0]
    };
    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);
  }
  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal", delete record.arg, entry.completion = record;
  }
  function Context(tryLocsList) {
    this.tryEntries = [{
      tryLoc: "root"
    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);
  }
  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) return iteratorMethod.call(iterable);
      if ("function" == typeof iterable.next) return iterable;
      if (!isNaN(iterable.length)) {
        var i = -1,
          next = function next() {
            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;
            return next.value = undefined, next.done = !0, next;
          };
        return next.next = next;
      }
    }
    return {
      next: doneResult
    };
  }
  function doneResult() {
    return {
      value: undefined,
      done: !0
    };
  }
  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) {
    var ctor = "function" == typeof genFun && genFun.constructor;
    return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name));
  }, exports.mark = function (genFun) {
    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun;
  }, exports.awrap = function (arg) {
    return {
      __await: arg
    };
  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
    return this;
  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    void 0 === PromiseImpl && (PromiseImpl = Promise);
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
      return result.done ? result.value : iter.next();
    });
  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () {
    return this;
  }), define(Gp, "toString", function () {
    return "[object Generator]";
  }), exports.keys = function (object) {
    var keys = [];
    for (var key in object) keys.push(key);
    return keys.reverse(), function next() {
      for (; keys.length;) {
        var key = keys.pop();
        if (key in object) return next.value = key, next.done = !1, next;
      }
      return next.done = !0, next;
    };
  }, exports.values = values, Context.prototype = {
    constructor: Context,
    reset: function (skipTempReset) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);
    },
    stop: function () {
      this.done = !0;
      var rootRecord = this.tryEntries[0].completion;
      if ("throw" === rootRecord.type) throw rootRecord.arg;
      return this.rval;
    },
    dispatchException: function (exception) {
      if (this.done) throw exception;
      var context = this;
      function handle(loc, caught) {
        return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught;
      }
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i],
          record = entry.completion;
        if ("root" === entry.tryLoc) return handle("end");
        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc"),
            hasFinally = hasOwn.call(entry, "finallyLoc");
          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);
            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);
          } else {
            if (!hasFinally) throw new Error("try statement without catch or finally");
            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
          }
        }
      }
    },
    abrupt: function (type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }
      finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);
      var record = finallyEntry ? finallyEntry.completion : {};
      return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);
    },
    complete: function (record, afterLoc) {
      if ("throw" === record.type) throw record.arg;
      return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;
    },
    finish: function (finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;
      }
    },
    catch: function (tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if ("throw" === record.type) {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }
      throw new Error("illegal catch attempt");
    },
    delegateYield: function (iterable, resultName, nextLoc) {
      return this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      }, "next" === this.method && (this.arg = undefined), ContinueSentinel;
    }
  }, exports;
}
function _typeof(obj) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, _typeof(obj);
}
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator(fn) {
  return function () {
    var self = this,
      args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(undefined);
    });
  };
}
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return _setPrototypeOf(o, p);
}
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function _construct(Parent, args, Class) {
  if (_isNativeReflectConstruct()) {
    _construct = Reflect.construct.bind();
  } else {
    _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) _setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }
  return _construct.apply(null, arguments);
}
function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}
function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;
  _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !_isNativeFunction(Class)) return Class;
    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);
      _cache.set(Class, Wrapper);
    }
    function Wrapper() {
      return _construct(Class, arguments, _getPrototypeOf(this).constructor);
    }
    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return _setPrototypeOf(Wrapper, Class);
  };
  return _wrapNativeSuper(Class);
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function _possibleConstructorReturn(self, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized(self);
}
function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn(this, result);
  };
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }
  return _arr;
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

var check = function (it) {
  return it && it.Math == Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global$t =
  // eslint-disable-next-line es/no-global-this -- safe
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  // eslint-disable-next-line no-restricted-globals -- safe
  check(typeof self == 'object' && self) ||
  check(typeof commonjsGlobal == 'object' && commonjsGlobal) ||
  // eslint-disable-next-line no-new-func -- fallback
  (function () { return this; })() || Function('return this')();

var shared$4 = {exports: {}};

var global$s = global$t;

// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty$a = Object.defineProperty;

var defineGlobalProperty$3 = function (key, value) {
  try {
    defineProperty$a(global$s, key, { value: value, configurable: true, writable: true });
  } catch (error) {
    global$s[key] = value;
  } return value;
};

var global$r = global$t;
var defineGlobalProperty$2 = defineGlobalProperty$3;

var SHARED = '__core-js_shared__';
var store$3 = global$r[SHARED] || defineGlobalProperty$2(SHARED, {});

var sharedStore = store$3;

var store$2 = sharedStore;

(shared$4.exports = function (key, value) {
  return store$2[key] || (store$2[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.25.5',
  mode: 'global',
  copyright: '© 2014-2022 Denis Pushkarev (zloirock.ru)',
  license: 'https://github.com/zloirock/core-js/blob/v3.25.5/LICENSE',
  source: 'https://github.com/zloirock/core-js'
});

var fails$w = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};

var fails$v = fails$w;

var functionBindNative = !fails$v(function () {
  // eslint-disable-next-line es/no-function-prototype-bind -- safe
  var test = (function () { /* empty */ }).bind();
  // eslint-disable-next-line no-prototype-builtins -- safe
  return typeof test != 'function' || test.hasOwnProperty('prototype');
});

var NATIVE_BIND$3 = functionBindNative;

var FunctionPrototype$2 = Function.prototype;
var call$i = FunctionPrototype$2.call;
var uncurryThisWithBind = NATIVE_BIND$3 && FunctionPrototype$2.bind.bind(call$i, call$i);

var functionUncurryThisRaw = function (fn) {
  return NATIVE_BIND$3 ? uncurryThisWithBind(fn) : function () {
    return call$i.apply(fn, arguments);
  };
};

var uncurryThisRaw$1 = functionUncurryThisRaw;

var toString$d = uncurryThisRaw$1({}.toString);
var stringSlice$6 = uncurryThisRaw$1(''.slice);

var classofRaw$2 = function (it) {
  return stringSlice$6(toString$d(it), 8, -1);
};

var classofRaw$1 = classofRaw$2;
var uncurryThisRaw = functionUncurryThisRaw;

var functionUncurryThis = function (fn) {
  // Nashorn bug:
  //   https://github.com/zloirock/core-js/issues/1128
  //   https://github.com/zloirock/core-js/issues/1130
  if (classofRaw$1(fn) === 'Function') return uncurryThisRaw(fn);
};

// we can't use just `it == null` since of `document.all` special case
// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec
var isNullOrUndefined$8 = function (it) {
  return it === null || it === undefined;
};

var isNullOrUndefined$7 = isNullOrUndefined$8;

var $TypeError$g = TypeError;

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
var requireObjectCoercible$8 = function (it) {
  if (isNullOrUndefined$7(it)) throw $TypeError$g("Can't call method on " + it);
  return it;
};

var requireObjectCoercible$7 = requireObjectCoercible$8;

var $Object$4 = Object;

// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
var toObject$b = function (argument) {
  return $Object$4(requireObjectCoercible$7(argument));
};

var uncurryThis$u = functionUncurryThis;
var toObject$a = toObject$b;

var hasOwnProperty$1 = uncurryThis$u({}.hasOwnProperty);

// `HasOwnProperty` abstract operation
// https://tc39.es/ecma262/#sec-hasownproperty
// eslint-disable-next-line es/no-object-hasown -- safe
var hasOwnProperty_1 = Object.hasOwn || function hasOwn(it, key) {
  return hasOwnProperty$1(toObject$a(it), key);
};

var uncurryThis$t = functionUncurryThis;

var id$2 = 0;
var postfix = Math.random();
var toString$c = uncurryThis$t(1.0.toString);

var uid$3 = function (key) {
  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString$c(++id$2 + postfix, 36);
};

var documentAll$2 = typeof document == 'object' && document.all;

// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot
var IS_HTMLDDA = typeof documentAll$2 == 'undefined' && documentAll$2 !== undefined;

var documentAll_1 = {
  all: documentAll$2,
  IS_HTMLDDA: IS_HTMLDDA
};

var $documentAll$1 = documentAll_1;

var documentAll$1 = $documentAll$1.all;

// `IsCallable` abstract operation
// https://tc39.es/ecma262/#sec-iscallable
var isCallable$o = $documentAll$1.IS_HTMLDDA ? function (argument) {
  return typeof argument == 'function' || argument === documentAll$1;
} : function (argument) {
  return typeof argument == 'function';
};

var global$q = global$t;
var isCallable$n = isCallable$o;

var aFunction = function (argument) {
  return isCallable$n(argument) ? argument : undefined;
};

var getBuiltIn$8 = function (namespace, method) {
  return arguments.length < 2 ? aFunction(global$q[namespace]) : global$q[namespace] && global$q[namespace][method];
};

var getBuiltIn$7 = getBuiltIn$8;

var engineUserAgent = getBuiltIn$7('navigator', 'userAgent') || '';

var global$p = global$t;
var userAgent$3 = engineUserAgent;

var process$3 = global$p.process;
var Deno$1 = global$p.Deno;
var versions = process$3 && process$3.versions || Deno$1 && Deno$1.version;
var v8 = versions && versions.v8;
var match, version$1;

if (v8) {
  match = v8.split('.');
  // in old Chrome, versions of V8 isn't V8 = Chrome / 10
  // but their correct versions are not interesting for us
  version$1 = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
}

// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
// so check `userAgent` even if `.v8` exists, but 0
if (!version$1 && userAgent$3) {
  match = userAgent$3.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent$3.match(/Chrome\/(\d+)/);
    if (match) version$1 = +match[1];
  }
}

var engineV8Version = version$1;

/* eslint-disable es/no-symbol -- required for testing */

var V8_VERSION$3 = engineV8Version;
var fails$u = fails$w;

// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
var symbolConstructorDetection = !!Object.getOwnPropertySymbols && !fails$u(function () {
  var symbol = Symbol();
  // Chrome 38 Symbol has incorrect toString conversion
  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
  return !String(symbol) || !(Object(symbol) instanceof Symbol) ||
    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !Symbol.sham && V8_VERSION$3 && V8_VERSION$3 < 41;
});

/* eslint-disable es/no-symbol -- required for testing */

var NATIVE_SYMBOL$1 = symbolConstructorDetection;

var useSymbolAsUid = NATIVE_SYMBOL$1
  && !Symbol.sham
  && typeof Symbol.iterator == 'symbol';

var global$o = global$t;
var shared$3 = shared$4.exports;
var hasOwn$e = hasOwnProperty_1;
var uid$2 = uid$3;
var NATIVE_SYMBOL = symbolConstructorDetection;
var USE_SYMBOL_AS_UID$1 = useSymbolAsUid;

var WellKnownSymbolsStore = shared$3('wks');
var Symbol$2 = global$o.Symbol;
var symbolFor = Symbol$2 && Symbol$2['for'];
var createWellKnownSymbol = USE_SYMBOL_AS_UID$1 ? Symbol$2 : Symbol$2 && Symbol$2.withoutSetter || uid$2;

var wellKnownSymbol$n = function (name) {
  if (!hasOwn$e(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {
    var description = 'Symbol.' + name;
    if (NATIVE_SYMBOL && hasOwn$e(Symbol$2, name)) {
      WellKnownSymbolsStore[name] = Symbol$2[name];
    } else if (USE_SYMBOL_AS_UID$1 && symbolFor) {
      WellKnownSymbolsStore[name] = symbolFor(description);
    } else {
      WellKnownSymbolsStore[name] = createWellKnownSymbol(description);
    }
  } return WellKnownSymbolsStore[name];
};

var wellKnownSymbol$m = wellKnownSymbol$n;

var TO_STRING_TAG$3 = wellKnownSymbol$m('toStringTag');
var test = {};

test[TO_STRING_TAG$3] = 'z';

var toStringTagSupport = String(test) === '[object z]';

var objectDefineProperty = {};

var fails$t = fails$w;

// Detect IE8's incomplete defineProperty implementation
var descriptors = !fails$t(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
});

var isCallable$m = isCallable$o;
var $documentAll = documentAll_1;

var documentAll = $documentAll.all;

var isObject$j = $documentAll.IS_HTMLDDA ? function (it) {
  return typeof it == 'object' ? it !== null : isCallable$m(it) || it === documentAll;
} : function (it) {
  return typeof it == 'object' ? it !== null : isCallable$m(it);
};

var global$n = global$t;
var isObject$i = isObject$j;

var document$3 = global$n.document;
// typeof document.createElement is 'object' in old IE
var EXISTS$1 = isObject$i(document$3) && isObject$i(document$3.createElement);

var documentCreateElement$2 = function (it) {
  return EXISTS$1 ? document$3.createElement(it) : {};
};

var DESCRIPTORS$f = descriptors;
var fails$s = fails$w;
var createElement$1 = documentCreateElement$2;

// Thanks to IE8 for its funny defineProperty
var ie8DomDefine = !DESCRIPTORS$f && !fails$s(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(createElement$1('div'), 'a', {
    get: function () { return 7; }
  }).a != 7;
});

var DESCRIPTORS$e = descriptors;
var fails$r = fails$w;

// V8 ~ Chrome 36-
// https://bugs.chromium.org/p/v8/issues/detail?id=3334
var v8PrototypeDefineBug = DESCRIPTORS$e && fails$r(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(function () { /* empty */ }, 'prototype', {
    value: 42,
    writable: false
  }).prototype != 42;
});

var isObject$h = isObject$j;

var $String$3 = String;
var $TypeError$f = TypeError;

// `Assert: Type(argument) is Object`
var anObject$f = function (argument) {
  if (isObject$h(argument)) return argument;
  throw $TypeError$f($String$3(argument) + ' is not an object');
};

var NATIVE_BIND$2 = functionBindNative;

var call$h = Function.prototype.call;

var functionCall = NATIVE_BIND$2 ? call$h.bind(call$h) : function () {
  return call$h.apply(call$h, arguments);
};

var uncurryThis$s = functionUncurryThis;

var objectIsPrototypeOf = uncurryThis$s({}.isPrototypeOf);

var getBuiltIn$6 = getBuiltIn$8;
var isCallable$l = isCallable$o;
var isPrototypeOf$5 = objectIsPrototypeOf;
var USE_SYMBOL_AS_UID = useSymbolAsUid;

var $Object$3 = Object;

var isSymbol$3 = USE_SYMBOL_AS_UID ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  var $Symbol = getBuiltIn$6('Symbol');
  return isCallable$l($Symbol) && isPrototypeOf$5($Symbol.prototype, $Object$3(it));
};

var $String$2 = String;

var tryToString$4 = function (argument) {
  try {
    return $String$2(argument);
  } catch (error) {
    return 'Object';
  }
};

var isCallable$k = isCallable$o;
var tryToString$3 = tryToString$4;

var $TypeError$e = TypeError;

// `Assert: IsCallable(argument) is true`
var aCallable$9 = function (argument) {
  if (isCallable$k(argument)) return argument;
  throw $TypeError$e(tryToString$3(argument) + ' is not a function');
};

var aCallable$8 = aCallable$9;
var isNullOrUndefined$6 = isNullOrUndefined$8;

// `GetMethod` abstract operation
// https://tc39.es/ecma262/#sec-getmethod
var getMethod$4 = function (V, P) {
  var func = V[P];
  return isNullOrUndefined$6(func) ? undefined : aCallable$8(func);
};

var call$g = functionCall;
var isCallable$j = isCallable$o;
var isObject$g = isObject$j;

var $TypeError$d = TypeError;

// `OrdinaryToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-ordinarytoprimitive
var ordinaryToPrimitive$1 = function (input, pref) {
  var fn, val;
  if (pref === 'string' && isCallable$j(fn = input.toString) && !isObject$g(val = call$g(fn, input))) return val;
  if (isCallable$j(fn = input.valueOf) && !isObject$g(val = call$g(fn, input))) return val;
  if (pref !== 'string' && isCallable$j(fn = input.toString) && !isObject$g(val = call$g(fn, input))) return val;
  throw $TypeError$d("Can't convert object to primitive value");
};

var call$f = functionCall;
var isObject$f = isObject$j;
var isSymbol$2 = isSymbol$3;
var getMethod$3 = getMethod$4;
var ordinaryToPrimitive = ordinaryToPrimitive$1;
var wellKnownSymbol$l = wellKnownSymbol$n;

var $TypeError$c = TypeError;
var TO_PRIMITIVE = wellKnownSymbol$l('toPrimitive');

// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
var toPrimitive$2 = function (input, pref) {
  if (!isObject$f(input) || isSymbol$2(input)) return input;
  var exoticToPrim = getMethod$3(input, TO_PRIMITIVE);
  var result;
  if (exoticToPrim) {
    if (pref === undefined) pref = 'default';
    result = call$f(exoticToPrim, input, pref);
    if (!isObject$f(result) || isSymbol$2(result)) return result;
    throw $TypeError$c("Can't convert object to primitive value");
  }
  if (pref === undefined) pref = 'number';
  return ordinaryToPrimitive(input, pref);
};

var toPrimitive$1 = toPrimitive$2;
var isSymbol$1 = isSymbol$3;

// `ToPropertyKey` abstract operation
// https://tc39.es/ecma262/#sec-topropertykey
var toPropertyKey$3 = function (argument) {
  var key = toPrimitive$1(argument, 'string');
  return isSymbol$1(key) ? key : key + '';
};

var DESCRIPTORS$d = descriptors;
var IE8_DOM_DEFINE$1 = ie8DomDefine;
var V8_PROTOTYPE_DEFINE_BUG$1 = v8PrototypeDefineBug;
var anObject$e = anObject$f;
var toPropertyKey$2 = toPropertyKey$3;

var $TypeError$b = TypeError;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var $defineProperty = Object.defineProperty;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor$1 = Object.getOwnPropertyDescriptor;
var ENUMERABLE = 'enumerable';
var CONFIGURABLE$1 = 'configurable';
var WRITABLE = 'writable';

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
objectDefineProperty.f = DESCRIPTORS$d ? V8_PROTOTYPE_DEFINE_BUG$1 ? function defineProperty(O, P, Attributes) {
  anObject$e(O);
  P = toPropertyKey$2(P);
  anObject$e(Attributes);
  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
    var current = $getOwnPropertyDescriptor$1(O, P);
    if (current && current[WRITABLE]) {
      O[P] = Attributes.value;
      Attributes = {
        configurable: CONFIGURABLE$1 in Attributes ? Attributes[CONFIGURABLE$1] : current[CONFIGURABLE$1],
        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
        writable: false
      };
    }
  } return $defineProperty(O, P, Attributes);
} : $defineProperty : function defineProperty(O, P, Attributes) {
  anObject$e(O);
  P = toPropertyKey$2(P);
  anObject$e(Attributes);
  if (IE8_DOM_DEFINE$1) try {
    return $defineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw $TypeError$b('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

var makeBuiltIn$2 = {exports: {}};

var DESCRIPTORS$c = descriptors;
var hasOwn$d = hasOwnProperty_1;

var FunctionPrototype$1 = Function.prototype;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getDescriptor = DESCRIPTORS$c && Object.getOwnPropertyDescriptor;

var EXISTS = hasOwn$d(FunctionPrototype$1, 'name');
// additional protection from minified / mangled / dropped function names
var PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';
var CONFIGURABLE = EXISTS && (!DESCRIPTORS$c || (DESCRIPTORS$c && getDescriptor(FunctionPrototype$1, 'name').configurable));

var functionName = {
  EXISTS: EXISTS,
  PROPER: PROPER,
  CONFIGURABLE: CONFIGURABLE
};

var uncurryThis$r = functionUncurryThis;
var isCallable$i = isCallable$o;
var store$1 = sharedStore;

var functionToString = uncurryThis$r(Function.toString);

// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
if (!isCallable$i(store$1.inspectSource)) {
  store$1.inspectSource = function (it) {
    return functionToString(it);
  };
}

var inspectSource$3 = store$1.inspectSource;

var global$m = global$t;
var isCallable$h = isCallable$o;

var WeakMap$2 = global$m.WeakMap;

var weakMapBasicDetection = isCallable$h(WeakMap$2) && /native code/.test(String(WeakMap$2));

var createPropertyDescriptor$4 = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

var DESCRIPTORS$b = descriptors;
var definePropertyModule$5 = objectDefineProperty;
var createPropertyDescriptor$3 = createPropertyDescriptor$4;

var createNonEnumerableProperty$7 = DESCRIPTORS$b ? function (object, key, value) {
  return definePropertyModule$5.f(object, key, createPropertyDescriptor$3(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

var shared$2 = shared$4.exports;
var uid$1 = uid$3;

var keys$2 = shared$2('keys');

var sharedKey$3 = function (key) {
  return keys$2[key] || (keys$2[key] = uid$1(key));
};

var hiddenKeys$5 = {};

var NATIVE_WEAK_MAP$1 = weakMapBasicDetection;
var global$l = global$t;
var isObject$e = isObject$j;
var createNonEnumerableProperty$6 = createNonEnumerableProperty$7;
var hasOwn$c = hasOwnProperty_1;
var shared$1 = sharedStore;
var sharedKey$2 = sharedKey$3;
var hiddenKeys$4 = hiddenKeys$5;

var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
var TypeError$3 = global$l.TypeError;
var WeakMap$1 = global$l.WeakMap;
var set$1, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set$1(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject$e(it) || (state = get(it)).type !== TYPE) {
      throw TypeError$3('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP$1 || shared$1.state) {
  var store = shared$1.state || (shared$1.state = new WeakMap$1());
  /* eslint-disable no-self-assign -- prototype methods protection */
  store.get = store.get;
  store.has = store.has;
  store.set = store.set;
  /* eslint-enable no-self-assign -- prototype methods protection */
  set$1 = function (it, metadata) {
    if (store.has(it)) throw TypeError$3(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    store.set(it, metadata);
    return metadata;
  };
  get = function (it) {
    return store.get(it) || {};
  };
  has = function (it) {
    return store.has(it);
  };
} else {
  var STATE = sharedKey$2('state');
  hiddenKeys$4[STATE] = true;
  set$1 = function (it, metadata) {
    if (hasOwn$c(it, STATE)) throw TypeError$3(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    createNonEnumerableProperty$6(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return hasOwn$c(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return hasOwn$c(it, STATE);
  };
}

var internalState = {
  set: set$1,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};

var fails$q = fails$w;
var isCallable$g = isCallable$o;
var hasOwn$b = hasOwnProperty_1;
var DESCRIPTORS$a = descriptors;
var CONFIGURABLE_FUNCTION_NAME$1 = functionName.CONFIGURABLE;
var inspectSource$2 = inspectSource$3;
var InternalStateModule$5 = internalState;

var enforceInternalState$2 = InternalStateModule$5.enforce;
var getInternalState$3 = InternalStateModule$5.get;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty$9 = Object.defineProperty;

var CONFIGURABLE_LENGTH = DESCRIPTORS$a && !fails$q(function () {
  return defineProperty$9(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;
});

var TEMPLATE = String(String).split('String');

var makeBuiltIn$1 = makeBuiltIn$2.exports = function (value, name, options) {
  if (String(name).slice(0, 7) === 'Symbol(') {
    name = '[' + String(name).replace(/^Symbol\(([^)]*)\)/, '$1') + ']';
  }
  if (options && options.getter) name = 'get ' + name;
  if (options && options.setter) name = 'set ' + name;
  if (!hasOwn$b(value, 'name') || (CONFIGURABLE_FUNCTION_NAME$1 && value.name !== name)) {
    if (DESCRIPTORS$a) defineProperty$9(value, 'name', { value: name, configurable: true });
    else value.name = name;
  }
  if (CONFIGURABLE_LENGTH && options && hasOwn$b(options, 'arity') && value.length !== options.arity) {
    defineProperty$9(value, 'length', { value: options.arity });
  }
  try {
    if (options && hasOwn$b(options, 'constructor') && options.constructor) {
      if (DESCRIPTORS$a) defineProperty$9(value, 'prototype', { writable: false });
    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable
    } else if (value.prototype) value.prototype = undefined;
  } catch (error) { /* empty */ }
  var state = enforceInternalState$2(value);
  if (!hasOwn$b(state, 'source')) {
    state.source = TEMPLATE.join(typeof name == 'string' ? name : '');
  } return value;
};

// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
// eslint-disable-next-line no-extend-native -- required
Function.prototype.toString = makeBuiltIn$1(function toString() {
  return isCallable$g(this) && getInternalState$3(this).source || inspectSource$2(this);
}, 'toString');

var isCallable$f = isCallable$o;
var definePropertyModule$4 = objectDefineProperty;
var makeBuiltIn = makeBuiltIn$2.exports;
var defineGlobalProperty$1 = defineGlobalProperty$3;

var defineBuiltIn$c = function (O, key, value, options) {
  if (!options) options = {};
  var simple = options.enumerable;
  var name = options.name !== undefined ? options.name : key;
  if (isCallable$f(value)) makeBuiltIn(value, name, options);
  if (options.global) {
    if (simple) O[key] = value;
    else defineGlobalProperty$1(key, value);
  } else {
    try {
      if (!options.unsafe) delete O[key];
      else if (O[key]) simple = true;
    } catch (error) { /* empty */ }
    if (simple) O[key] = value;
    else definePropertyModule$4.f(O, key, {
      value: value,
      enumerable: false,
      configurable: !options.nonConfigurable,
      writable: !options.nonWritable
    });
  } return O;
};

var TO_STRING_TAG_SUPPORT$2 = toStringTagSupport;
var isCallable$e = isCallable$o;
var classofRaw = classofRaw$2;
var wellKnownSymbol$k = wellKnownSymbol$n;

var TO_STRING_TAG$2 = wellKnownSymbol$k('toStringTag');
var $Object$2 = Object;

// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
var classof$b = TO_STRING_TAG_SUPPORT$2 ? classofRaw : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = $Object$2(it), TO_STRING_TAG$2)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw(O)
    // ES3 arguments fallback
    : (result = classofRaw(O)) == 'Object' && isCallable$e(O.callee) ? 'Arguments' : result;
};

var TO_STRING_TAG_SUPPORT$1 = toStringTagSupport;
var classof$a = classof$b;

// `Object.prototype.toString` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.tostring
var objectToString = TO_STRING_TAG_SUPPORT$1 ? {}.toString : function toString() {
  return '[object ' + classof$a(this) + ']';
};

var TO_STRING_TAG_SUPPORT = toStringTagSupport;
var defineBuiltIn$b = defineBuiltIn$c;
var toString$b = objectToString;

// `Object.prototype.toString` method
// https://tc39.es/ecma262/#sec-object.prototype.tostring
if (!TO_STRING_TAG_SUPPORT) {
  defineBuiltIn$b(Object.prototype, 'toString', toString$b, { unsafe: true });
}

var objectGetOwnPropertyDescriptor = {};

var objectPropertyIsEnumerable = {};

var $propertyIsEnumerable$1 = {}.propertyIsEnumerable;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor$5 = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor$5 && !$propertyIsEnumerable$1.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
objectPropertyIsEnumerable.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor$5(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable$1;

var uncurryThis$q = functionUncurryThis;
var fails$p = fails$w;
var classof$9 = classofRaw$2;

var $Object$1 = Object;
var split = uncurryThis$q(''.split);

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var indexedObject = fails$p(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !$Object$1('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof$9(it) == 'String' ? split(it, '') : $Object$1(it);
} : $Object$1;

// toObject with fallback for non-array-like ES3 strings
var IndexedObject$3 = indexedObject;
var requireObjectCoercible$6 = requireObjectCoercible$8;

var toIndexedObject$8 = function (it) {
  return IndexedObject$3(requireObjectCoercible$6(it));
};

var DESCRIPTORS$9 = descriptors;
var call$e = functionCall;
var propertyIsEnumerableModule$1 = objectPropertyIsEnumerable;
var createPropertyDescriptor$2 = createPropertyDescriptor$4;
var toIndexedObject$7 = toIndexedObject$8;
var toPropertyKey$1 = toPropertyKey$3;
var hasOwn$a = hasOwnProperty_1;
var IE8_DOM_DEFINE = ie8DomDefine;

// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
objectGetOwnPropertyDescriptor.f = DESCRIPTORS$9 ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject$7(O);
  P = toPropertyKey$1(P);
  if (IE8_DOM_DEFINE) try {
    return $getOwnPropertyDescriptor(O, P);
  } catch (error) { /* empty */ }
  if (hasOwn$a(O, P)) return createPropertyDescriptor$2(!call$e(propertyIsEnumerableModule$1.f, O, P), O[P]);
};

var objectGetOwnPropertyNames = {};

var ceil = Math.ceil;
var floor$2 = Math.floor;

// `Math.trunc` method
// https://tc39.es/ecma262/#sec-math.trunc
// eslint-disable-next-line es/no-math-trunc -- safe
var mathTrunc = Math.trunc || function trunc(x) {
  var n = +x;
  return (n > 0 ? floor$2 : ceil)(n);
};

var trunc = mathTrunc;

// `ToIntegerOrInfinity` abstract operation
// https://tc39.es/ecma262/#sec-tointegerorinfinity
var toIntegerOrInfinity$4 = function (argument) {
  var number = +argument;
  // eslint-disable-next-line no-self-compare -- NaN check
  return number !== number || number === 0 ? 0 : trunc(number);
};

var toIntegerOrInfinity$3 = toIntegerOrInfinity$4;

var max$3 = Math.max;
var min$4 = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
var toAbsoluteIndex$4 = function (index, length) {
  var integer = toIntegerOrInfinity$3(index);
  return integer < 0 ? max$3(integer + length, 0) : min$4(integer, length);
};

var toIntegerOrInfinity$2 = toIntegerOrInfinity$4;

var min$3 = Math.min;

// `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength
var toLength$4 = function (argument) {
  return argument > 0 ? min$3(toIntegerOrInfinity$2(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};

var toLength$3 = toLength$4;

// `LengthOfArrayLike` abstract operation
// https://tc39.es/ecma262/#sec-lengthofarraylike
var lengthOfArrayLike$a = function (obj) {
  return toLength$3(obj.length);
};

var toIndexedObject$6 = toIndexedObject$8;
var toAbsoluteIndex$3 = toAbsoluteIndex$4;
var lengthOfArrayLike$9 = lengthOfArrayLike$a;

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod$5 = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject$6($this);
    var length = lengthOfArrayLike$9(O);
    var index = toAbsoluteIndex$3(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare -- NaN check
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare -- NaN check
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

var arrayIncludes = {
  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  includes: createMethod$5(true),
  // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod$5(false)
};

var uncurryThis$p = functionUncurryThis;
var hasOwn$9 = hasOwnProperty_1;
var toIndexedObject$5 = toIndexedObject$8;
var indexOf$1 = arrayIncludes.indexOf;
var hiddenKeys$3 = hiddenKeys$5;

var push$3 = uncurryThis$p([].push);

var objectKeysInternal = function (object, names) {
  var O = toIndexedObject$5(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !hasOwn$9(hiddenKeys$3, key) && hasOwn$9(O, key) && push$3(result, key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (hasOwn$9(O, key = names[i++])) {
    ~indexOf$1(result, key) || push$3(result, key);
  }
  return result;
};

// IE8- don't enum bug keys
var enumBugKeys$3 = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];

var internalObjectKeys$1 = objectKeysInternal;
var enumBugKeys$2 = enumBugKeys$3;

var hiddenKeys$2 = enumBugKeys$2.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
// eslint-disable-next-line es/no-object-getownpropertynames -- safe
objectGetOwnPropertyNames.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys$1(O, hiddenKeys$2);
};

var objectGetOwnPropertySymbols = {};

// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
objectGetOwnPropertySymbols.f = Object.getOwnPropertySymbols;

var getBuiltIn$5 = getBuiltIn$8;
var uncurryThis$o = functionUncurryThis;
var getOwnPropertyNamesModule$1 = objectGetOwnPropertyNames;
var getOwnPropertySymbolsModule$1 = objectGetOwnPropertySymbols;
var anObject$d = anObject$f;

var concat$2 = uncurryThis$o([].concat);

// all object keys, includes non-enumerable and symbols
var ownKeys$1 = getBuiltIn$5('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule$1.f(anObject$d(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule$1.f;
  return getOwnPropertySymbols ? concat$2(keys, getOwnPropertySymbols(it)) : keys;
};

var hasOwn$8 = hasOwnProperty_1;
var ownKeys = ownKeys$1;
var getOwnPropertyDescriptorModule = objectGetOwnPropertyDescriptor;
var definePropertyModule$3 = objectDefineProperty;

var copyConstructorProperties$1 = function (target, source, exceptions) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule$3.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!hasOwn$8(target, key) && !(exceptions && hasOwn$8(exceptions, key))) {
      defineProperty(target, key, getOwnPropertyDescriptor(source, key));
    }
  }
};

var fails$o = fails$w;
var isCallable$d = isCallable$o;

var replacement = /#|\.prototype\./;

var isForced$5 = function (feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true
    : value == NATIVE ? false
    : isCallable$d(detection) ? fails$o(detection)
    : !!detection;
};

var normalize = isForced$5.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced$5.data = {};
var NATIVE = isForced$5.NATIVE = 'N';
var POLYFILL = isForced$5.POLYFILL = 'P';

var isForced_1 = isForced$5;

var global$k = global$t;
var getOwnPropertyDescriptor$4 = objectGetOwnPropertyDescriptor.f;
var createNonEnumerableProperty$5 = createNonEnumerableProperty$7;
var defineBuiltIn$a = defineBuiltIn$c;
var defineGlobalProperty = defineGlobalProperty$3;
var copyConstructorProperties = copyConstructorProperties$1;
var isForced$4 = isForced_1;

/*
  options.target         - name of the target object
  options.global         - target is the global object
  options.stat           - export as static methods of target
  options.proto          - export as prototype methods of target
  options.real           - real prototype method for the `pure` version
  options.forced         - export even if the native feature is available
  options.bind           - bind methods to the target, required for the `pure` version
  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe         - use the simple assignment of property instead of delete + defineProperty
  options.sham           - add a flag to not completely full polyfills
  options.enumerable     - export as enumerable property
  options.dontCallGetSet - prevent calling a getter on target
  options.name           - the .name of the function if it does not match the key
*/
var _export = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global$k;
  } else if (STATIC) {
    target = global$k[TARGET] || defineGlobalProperty(TARGET, {});
  } else {
    target = (global$k[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.dontCallGetSet) {
      descriptor = getOwnPropertyDescriptor$4(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced$4(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty == typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty$5(sourceProperty, 'sham', true);
    }
    defineBuiltIn$a(target, key, sourceProperty, options);
  }
};

var classof$8 = classofRaw$2;
var global$j = global$t;

var engineIsNode = classof$8(global$j.process) == 'process';

var isCallable$c = isCallable$o;

var $String$1 = String;
var $TypeError$a = TypeError;

var aPossiblePrototype$1 = function (argument) {
  if (typeof argument == 'object' || isCallable$c(argument)) return argument;
  throw $TypeError$a("Can't set " + $String$1(argument) + ' as a prototype');
};

/* eslint-disable no-proto -- safe */

var uncurryThis$n = functionUncurryThis;
var anObject$c = anObject$f;
var aPossiblePrototype = aPossiblePrototype$1;

// `Object.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
// eslint-disable-next-line es/no-object-setprototypeof -- safe
var objectSetPrototypeOf = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var CORRECT_SETTER = false;
  var test = {};
  var setter;
  try {
    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
    setter = uncurryThis$n(Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set);
    setter(test, []);
    CORRECT_SETTER = test instanceof Array;
  } catch (error) { /* empty */ }
  return function setPrototypeOf(O, proto) {
    anObject$c(O);
    aPossiblePrototype(proto);
    if (CORRECT_SETTER) setter(O, proto);
    else O.__proto__ = proto;
    return O;
  };
}() : undefined);

var defineProperty$8 = objectDefineProperty.f;
var hasOwn$7 = hasOwnProperty_1;
var wellKnownSymbol$j = wellKnownSymbol$n;

var TO_STRING_TAG$1 = wellKnownSymbol$j('toStringTag');

var setToStringTag$4 = function (target, TAG, STATIC) {
  if (target && !STATIC) target = target.prototype;
  if (target && !hasOwn$7(target, TO_STRING_TAG$1)) {
    defineProperty$8(target, TO_STRING_TAG$1, { configurable: true, value: TAG });
  }
};

var getBuiltIn$4 = getBuiltIn$8;
var definePropertyModule$2 = objectDefineProperty;
var wellKnownSymbol$i = wellKnownSymbol$n;
var DESCRIPTORS$8 = descriptors;

var SPECIES$6 = wellKnownSymbol$i('species');

var setSpecies$3 = function (CONSTRUCTOR_NAME) {
  var Constructor = getBuiltIn$4(CONSTRUCTOR_NAME);
  var defineProperty = definePropertyModule$2.f;

  if (DESCRIPTORS$8 && Constructor && !Constructor[SPECIES$6]) {
    defineProperty(Constructor, SPECIES$6, {
      configurable: true,
      get: function () { return this; }
    });
  }
};

var isPrototypeOf$4 = objectIsPrototypeOf;

var $TypeError$9 = TypeError;

var anInstance$4 = function (it, Prototype) {
  if (isPrototypeOf$4(Prototype, it)) return it;
  throw $TypeError$9('Incorrect invocation');
};

var uncurryThis$m = functionUncurryThis;
var fails$n = fails$w;
var isCallable$b = isCallable$o;
var classof$7 = classof$b;
var getBuiltIn$3 = getBuiltIn$8;
var inspectSource$1 = inspectSource$3;

var noop = function () { /* empty */ };
var empty = [];
var construct = getBuiltIn$3('Reflect', 'construct');
var constructorRegExp = /^\s*(?:class|function)\b/;
var exec$3 = uncurryThis$m(constructorRegExp.exec);
var INCORRECT_TO_STRING = !constructorRegExp.exec(noop);

var isConstructorModern = function isConstructor(argument) {
  if (!isCallable$b(argument)) return false;
  try {
    construct(noop, empty, argument);
    return true;
  } catch (error) {
    return false;
  }
};

var isConstructorLegacy = function isConstructor(argument) {
  if (!isCallable$b(argument)) return false;
  switch (classof$7(argument)) {
    case 'AsyncFunction':
    case 'GeneratorFunction':
    case 'AsyncGeneratorFunction': return false;
  }
  try {
    // we can't check .prototype since constructors produced by .bind haven't it
    // `Function#toString` throws on some built-it function in some legacy engines
    // (for example, `DOMQuad` and similar in FF41-)
    return INCORRECT_TO_STRING || !!exec$3(constructorRegExp, inspectSource$1(argument));
  } catch (error) {
    return true;
  }
};

isConstructorLegacy.sham = true;

// `IsConstructor` abstract operation
// https://tc39.es/ecma262/#sec-isconstructor
var isConstructor$3 = !construct || fails$n(function () {
  var called;
  return isConstructorModern(isConstructorModern.call)
    || !isConstructorModern(Object)
    || !isConstructorModern(function () { called = true; })
    || called;
}) ? isConstructorLegacy : isConstructorModern;

var isConstructor$2 = isConstructor$3;
var tryToString$2 = tryToString$4;

var $TypeError$8 = TypeError;

// `Assert: IsConstructor(argument) is true`
var aConstructor$1 = function (argument) {
  if (isConstructor$2(argument)) return argument;
  throw $TypeError$8(tryToString$2(argument) + ' is not a constructor');
};

var anObject$b = anObject$f;
var aConstructor = aConstructor$1;
var isNullOrUndefined$5 = isNullOrUndefined$8;
var wellKnownSymbol$h = wellKnownSymbol$n;

var SPECIES$5 = wellKnownSymbol$h('species');

// `SpeciesConstructor` abstract operation
// https://tc39.es/ecma262/#sec-speciesconstructor
var speciesConstructor$1 = function (O, defaultConstructor) {
  var C = anObject$b(O).constructor;
  var S;
  return C === undefined || isNullOrUndefined$5(S = anObject$b(C)[SPECIES$5]) ? defaultConstructor : aConstructor(S);
};

var NATIVE_BIND$1 = functionBindNative;

var FunctionPrototype = Function.prototype;
var apply$2 = FunctionPrototype.apply;
var call$d = FunctionPrototype.call;

// eslint-disable-next-line es/no-reflect -- safe
var functionApply = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND$1 ? call$d.bind(apply$2) : function () {
  return call$d.apply(apply$2, arguments);
});

var uncurryThis$l = functionUncurryThis;
var aCallable$7 = aCallable$9;
var NATIVE_BIND = functionBindNative;

var bind$7 = uncurryThis$l(uncurryThis$l.bind);

// optional / simple context binding
var functionBindContext = function (fn, that) {
  aCallable$7(fn);
  return that === undefined ? fn : NATIVE_BIND ? bind$7(fn, that) : function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};

var getBuiltIn$2 = getBuiltIn$8;

var html$2 = getBuiltIn$2('document', 'documentElement');

var uncurryThis$k = functionUncurryThis;

var arraySlice$3 = uncurryThis$k([].slice);

var $TypeError$7 = TypeError;

var validateArgumentsLength$1 = function (passed, required) {
  if (passed < required) throw $TypeError$7('Not enough arguments');
  return passed;
};

var userAgent$2 = engineUserAgent;

var engineIsIos = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent$2);

var global$i = global$t;
var apply$1 = functionApply;
var bind$6 = functionBindContext;
var isCallable$a = isCallable$o;
var hasOwn$6 = hasOwnProperty_1;
var fails$m = fails$w;
var html$1 = html$2;
var arraySlice$2 = arraySlice$3;
var createElement = documentCreateElement$2;
var validateArgumentsLength = validateArgumentsLength$1;
var IS_IOS$1 = engineIsIos;
var IS_NODE$4 = engineIsNode;

var set = global$i.setImmediate;
var clear = global$i.clearImmediate;
var process$2 = global$i.process;
var Dispatch = global$i.Dispatch;
var Function$1 = global$i.Function;
var MessageChannel = global$i.MessageChannel;
var String$1 = global$i.String;
var counter = 0;
var queue$1 = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var $location, defer, channel, port;

try {
  // Deno throws a ReferenceError on `location` access without `--location` flag
  $location = global$i.location;
} catch (error) { /* empty */ }

var run = function (id) {
  if (hasOwn$6(queue$1, id)) {
    var fn = queue$1[id];
    delete queue$1[id];
    fn();
  }
};

var runner = function (id) {
  return function () {
    run(id);
  };
};

var listener = function (event) {
  run(event.data);
};

var post = function (id) {
  // old engines have not location.origin
  global$i.postMessage(String$1(id), $location.protocol + '//' + $location.host);
};

// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!set || !clear) {
  set = function setImmediate(handler) {
    validateArgumentsLength(arguments.length, 1);
    var fn = isCallable$a(handler) ? handler : Function$1(handler);
    var args = arraySlice$2(arguments, 1);
    queue$1[++counter] = function () {
      apply$1(fn, undefined, args);
    };
    defer(counter);
    return counter;
  };
  clear = function clearImmediate(id) {
    delete queue$1[id];
  };
  // Node.js 0.8-
  if (IS_NODE$4) {
    defer = function (id) {
      process$2.nextTick(runner(id));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(runner(id));
    };
  // Browsers with MessageChannel, includes WebWorkers
  // except iOS - https://github.com/zloirock/core-js/issues/624
  } else if (MessageChannel && !IS_IOS$1) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = bind$6(port.postMessage, port);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (
    global$i.addEventListener &&
    isCallable$a(global$i.postMessage) &&
    !global$i.importScripts &&
    $location && $location.protocol !== 'file:' &&
    !fails$m(post)
  ) {
    defer = post;
    global$i.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in createElement('script')) {
    defer = function (id) {
      html$1.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {
        html$1.removeChild(this);
        run(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(runner(id), 0);
    };
  }
}

var task$1 = {
  set: set,
  clear: clear
};

var userAgent$1 = engineUserAgent;
var global$h = global$t;

var engineIsIosPebble = /ipad|iphone|ipod/i.test(userAgent$1) && global$h.Pebble !== undefined;

var userAgent = engineUserAgent;

var engineIsWebosWebkit = /web0s(?!.*chrome)/i.test(userAgent);

var global$g = global$t;
var bind$5 = functionBindContext;
var getOwnPropertyDescriptor$3 = objectGetOwnPropertyDescriptor.f;
var macrotask = task$1.set;
var IS_IOS = engineIsIos;
var IS_IOS_PEBBLE = engineIsIosPebble;
var IS_WEBOS_WEBKIT = engineIsWebosWebkit;
var IS_NODE$3 = engineIsNode;

var MutationObserver = global$g.MutationObserver || global$g.WebKitMutationObserver;
var document$2 = global$g.document;
var process$1 = global$g.process;
var Promise$1 = global$g.Promise;
// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`
var queueMicrotaskDescriptor = getOwnPropertyDescriptor$3(global$g, 'queueMicrotask');
var queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;

var flush, head, last, notify$1, toggle, node, promise, then;

// modern engines have queueMicrotask method
if (!queueMicrotask) {
  flush = function () {
    var parent, fn;
    if (IS_NODE$3 && (parent = process$1.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (error) {
        if (head) notify$1();
        else last = undefined;
        throw error;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
  // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898
  if (!IS_IOS && !IS_NODE$3 && !IS_WEBOS_WEBKIT && MutationObserver && document$2) {
    toggle = true;
    node = document$2.createTextNode('');
    new MutationObserver(flush).observe(node, { characterData: true });
    notify$1 = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (!IS_IOS_PEBBLE && Promise$1 && Promise$1.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    promise = Promise$1.resolve(undefined);
    // workaround of WebKit ~ iOS Safari 10.1 bug
    promise.constructor = Promise$1;
    then = bind$5(promise.then, promise);
    notify$1 = function () {
      then(flush);
    };
  // Node.js without promises
  } else if (IS_NODE$3) {
    notify$1 = function () {
      process$1.nextTick(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessage
  // - onreadystatechange
  // - setTimeout
  } else {
    // strange IE + webpack dev server bug - use .bind(global)
    macrotask = bind$5(macrotask, global$g);
    notify$1 = function () {
      macrotask(flush);
    };
  }
}

var microtask$1 = queueMicrotask || function (fn) {
  var task = { fn: fn, next: undefined };
  if (last) last.next = task;
  if (!head) {
    head = task;
    notify$1();
  } last = task;
};

var global$f = global$t;

var hostReportErrors$1 = function (a, b) {
  var console = global$f.console;
  if (console && console.error) {
    arguments.length == 1 ? console.error(a) : console.error(a, b);
  }
};

var perform$3 = function (exec) {
  try {
    return { error: false, value: exec() };
  } catch (error) {
    return { error: true, value: error };
  }
};

var Queue$1 = function () {
  this.head = null;
  this.tail = null;
};

Queue$1.prototype = {
  add: function (item) {
    var entry = { item: item, next: null };
    if (this.head) this.tail.next = entry;
    else this.head = entry;
    this.tail = entry;
  },
  get: function () {
    var entry = this.head;
    if (entry) {
      this.head = entry.next;
      if (this.tail === entry) this.tail = null;
      return entry.item;
    }
  }
};

var queue = Queue$1;

var global$e = global$t;

var promiseNativeConstructor = global$e.Promise;

/* global Deno -- Deno case */

var engineIsDeno = typeof Deno == 'object' && Deno && typeof Deno.version == 'object';

var IS_DENO$1 = engineIsDeno;
var IS_NODE$2 = engineIsNode;

var engineIsBrowser = !IS_DENO$1 && !IS_NODE$2
  && typeof window == 'object'
  && typeof document == 'object';

var global$d = global$t;
var NativePromiseConstructor$3 = promiseNativeConstructor;
var isCallable$9 = isCallable$o;
var isForced$3 = isForced_1;
var inspectSource = inspectSource$3;
var wellKnownSymbol$g = wellKnownSymbol$n;
var IS_BROWSER = engineIsBrowser;
var IS_DENO = engineIsDeno;
var V8_VERSION$2 = engineV8Version;

NativePromiseConstructor$3 && NativePromiseConstructor$3.prototype;
var SPECIES$4 = wellKnownSymbol$g('species');
var SUBCLASSING = false;
var NATIVE_PROMISE_REJECTION_EVENT$1 = isCallable$9(global$d.PromiseRejectionEvent);

var FORCED_PROMISE_CONSTRUCTOR$5 = isForced$3('Promise', function () {
  var PROMISE_CONSTRUCTOR_SOURCE = inspectSource(NativePromiseConstructor$3);
  var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(NativePromiseConstructor$3);
  // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
  // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
  // We can't detect it synchronously, so just check versions
  if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION$2 === 66) return true;
  // We can't use @@species feature detection in V8 since it causes
  // deoptimization and performance degradation
  // https://github.com/zloirock/core-js/issues/679
  if (!V8_VERSION$2 || V8_VERSION$2 < 51 || !/native code/.test(PROMISE_CONSTRUCTOR_SOURCE)) {
    // Detect correctness of subclassing with @@species support
    var promise = new NativePromiseConstructor$3(function (resolve) { resolve(1); });
    var FakePromise = function (exec) {
      exec(function () { /* empty */ }, function () { /* empty */ });
    };
    var constructor = promise.constructor = {};
    constructor[SPECIES$4] = FakePromise;
    SUBCLASSING = promise.then(function () { /* empty */ }) instanceof FakePromise;
    if (!SUBCLASSING) return true;
  // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test
  } return !GLOBAL_CORE_JS_PROMISE && (IS_BROWSER || IS_DENO) && !NATIVE_PROMISE_REJECTION_EVENT$1;
});

var promiseConstructorDetection = {
  CONSTRUCTOR: FORCED_PROMISE_CONSTRUCTOR$5,
  REJECTION_EVENT: NATIVE_PROMISE_REJECTION_EVENT$1,
  SUBCLASSING: SUBCLASSING
};

var newPromiseCapability$2 = {};

var aCallable$6 = aCallable$9;

var $TypeError$6 = TypeError;

var PromiseCapability = function (C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw $TypeError$6('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aCallable$6(resolve);
  this.reject = aCallable$6(reject);
};

// `NewPromiseCapability` abstract operation
// https://tc39.es/ecma262/#sec-newpromisecapability
newPromiseCapability$2.f = function (C) {
  return new PromiseCapability(C);
};

var $$u = _export;
var IS_NODE$1 = engineIsNode;
var global$c = global$t;
var call$c = functionCall;
var defineBuiltIn$9 = defineBuiltIn$c;
var setPrototypeOf$2 = objectSetPrototypeOf;
var setToStringTag$3 = setToStringTag$4;
var setSpecies$2 = setSpecies$3;
var aCallable$5 = aCallable$9;
var isCallable$8 = isCallable$o;
var isObject$d = isObject$j;
var anInstance$3 = anInstance$4;
var speciesConstructor = speciesConstructor$1;
var task = task$1.set;
var microtask = microtask$1;
var hostReportErrors = hostReportErrors$1;
var perform$2 = perform$3;
var Queue = queue;
var InternalStateModule$4 = internalState;
var NativePromiseConstructor$2 = promiseNativeConstructor;
var PromiseConstructorDetection = promiseConstructorDetection;
var newPromiseCapabilityModule$3 = newPromiseCapability$2;

var PROMISE = 'Promise';
var FORCED_PROMISE_CONSTRUCTOR$4 = PromiseConstructorDetection.CONSTRUCTOR;
var NATIVE_PROMISE_REJECTION_EVENT = PromiseConstructorDetection.REJECTION_EVENT;
var NATIVE_PROMISE_SUBCLASSING = PromiseConstructorDetection.SUBCLASSING;
var getInternalPromiseState = InternalStateModule$4.getterFor(PROMISE);
var setInternalState$4 = InternalStateModule$4.set;
var NativePromisePrototype$1 = NativePromiseConstructor$2 && NativePromiseConstructor$2.prototype;
var PromiseConstructor = NativePromiseConstructor$2;
var PromisePrototype = NativePromisePrototype$1;
var TypeError$2 = global$c.TypeError;
var document$1 = global$c.document;
var process = global$c.process;
var newPromiseCapability$1 = newPromiseCapabilityModule$3.f;
var newGenericPromiseCapability = newPromiseCapability$1;

var DISPATCH_EVENT = !!(document$1 && document$1.createEvent && global$c.dispatchEvent);
var UNHANDLED_REJECTION = 'unhandledrejection';
var REJECTION_HANDLED = 'rejectionhandled';
var PENDING = 0;
var FULFILLED = 1;
var REJECTED = 2;
var HANDLED = 1;
var UNHANDLED = 2;

var Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;

// helpers
var isThenable = function (it) {
  var then;
  return isObject$d(it) && isCallable$8(then = it.then) ? then : false;
};

var callReaction = function (reaction, state) {
  var value = state.value;
  var ok = state.state == FULFILLED;
  var handler = ok ? reaction.ok : reaction.fail;
  var resolve = reaction.resolve;
  var reject = reaction.reject;
  var domain = reaction.domain;
  var result, then, exited;
  try {
    if (handler) {
      if (!ok) {
        if (state.rejection === UNHANDLED) onHandleUnhandled(state);
        state.rejection = HANDLED;
      }
      if (handler === true) result = value;
      else {
        if (domain) domain.enter();
        result = handler(value); // can throw
        if (domain) {
          domain.exit();
          exited = true;
        }
      }
      if (result === reaction.promise) {
        reject(TypeError$2('Promise-chain cycle'));
      } else if (then = isThenable(result)) {
        call$c(then, result, resolve, reject);
      } else resolve(result);
    } else reject(value);
  } catch (error) {
    if (domain && !exited) domain.exit();
    reject(error);
  }
};

var notify = function (state, isReject) {
  if (state.notified) return;
  state.notified = true;
  microtask(function () {
    var reactions = state.reactions;
    var reaction;
    while (reaction = reactions.get()) {
      callReaction(reaction, state);
    }
    state.notified = false;
    if (isReject && !state.rejection) onUnhandled(state);
  });
};

var dispatchEvent = function (name, promise, reason) {
  var event, handler;
  if (DISPATCH_EVENT) {
    event = document$1.createEvent('Event');
    event.promise = promise;
    event.reason = reason;
    event.initEvent(name, false, true);
    global$c.dispatchEvent(event);
  } else event = { promise: promise, reason: reason };
  if (!NATIVE_PROMISE_REJECTION_EVENT && (handler = global$c['on' + name])) handler(event);
  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);
};

var onUnhandled = function (state) {
  call$c(task, global$c, function () {
    var promise = state.facade;
    var value = state.value;
    var IS_UNHANDLED = isUnhandled(state);
    var result;
    if (IS_UNHANDLED) {
      result = perform$2(function () {
        if (IS_NODE$1) {
          process.emit('unhandledRejection', value, promise);
        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      state.rejection = IS_NODE$1 || isUnhandled(state) ? UNHANDLED : HANDLED;
      if (result.error) throw result.value;
    }
  });
};

var isUnhandled = function (state) {
  return state.rejection !== HANDLED && !state.parent;
};

var onHandleUnhandled = function (state) {
  call$c(task, global$c, function () {
    var promise = state.facade;
    if (IS_NODE$1) {
      process.emit('rejectionHandled', promise);
    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);
  });
};

var bind$4 = function (fn, state, unwrap) {
  return function (value) {
    fn(state, value, unwrap);
  };
};

var internalReject = function (state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  state.value = value;
  state.state = REJECTED;
  notify(state, true);
};

var internalResolve = function (state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  try {
    if (state.facade === value) throw TypeError$2("Promise can't be resolved itself");
    var then = isThenable(value);
    if (then) {
      microtask(function () {
        var wrapper = { done: false };
        try {
          call$c(then, value,
            bind$4(internalResolve, wrapper, state),
            bind$4(internalReject, wrapper, state)
          );
        } catch (error) {
          internalReject(wrapper, error, state);
        }
      });
    } else {
      state.value = value;
      state.state = FULFILLED;
      notify(state, false);
    }
  } catch (error) {
    internalReject({ done: false }, error, state);
  }
};

// constructor polyfill
if (FORCED_PROMISE_CONSTRUCTOR$4) {
  // 25.4.3.1 Promise(executor)
  PromiseConstructor = function Promise(executor) {
    anInstance$3(this, PromisePrototype);
    aCallable$5(executor);
    call$c(Internal, this);
    var state = getInternalPromiseState(this);
    try {
      executor(bind$4(internalResolve, state), bind$4(internalReject, state));
    } catch (error) {
      internalReject(state, error);
    }
  };

  PromisePrototype = PromiseConstructor.prototype;

  // eslint-disable-next-line no-unused-vars -- required for `.length`
  Internal = function Promise(executor) {
    setInternalState$4(this, {
      type: PROMISE,
      done: false,
      notified: false,
      parent: false,
      reactions: new Queue(),
      rejection: false,
      state: PENDING,
      value: undefined
    });
  };

  // `Promise.prototype.then` method
  // https://tc39.es/ecma262/#sec-promise.prototype.then
  Internal.prototype = defineBuiltIn$9(PromisePrototype, 'then', function then(onFulfilled, onRejected) {
    var state = getInternalPromiseState(this);
    var reaction = newPromiseCapability$1(speciesConstructor(this, PromiseConstructor));
    state.parent = true;
    reaction.ok = isCallable$8(onFulfilled) ? onFulfilled : true;
    reaction.fail = isCallable$8(onRejected) && onRejected;
    reaction.domain = IS_NODE$1 ? process.domain : undefined;
    if (state.state == PENDING) state.reactions.add(reaction);
    else microtask(function () {
      callReaction(reaction, state);
    });
    return reaction.promise;
  });

  OwnPromiseCapability = function () {
    var promise = new Internal();
    var state = getInternalPromiseState(promise);
    this.promise = promise;
    this.resolve = bind$4(internalResolve, state);
    this.reject = bind$4(internalReject, state);
  };

  newPromiseCapabilityModule$3.f = newPromiseCapability$1 = function (C) {
    return C === PromiseConstructor || C === PromiseWrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };

  if (isCallable$8(NativePromiseConstructor$2) && NativePromisePrototype$1 !== Object.prototype) {
    nativeThen = NativePromisePrototype$1.then;

    if (!NATIVE_PROMISE_SUBCLASSING) {
      // make `Promise#then` return a polyfilled `Promise` for native promise-based APIs
      defineBuiltIn$9(NativePromisePrototype$1, 'then', function then(onFulfilled, onRejected) {
        var that = this;
        return new PromiseConstructor(function (resolve, reject) {
          call$c(nativeThen, that, resolve, reject);
        }).then(onFulfilled, onRejected);
      // https://github.com/zloirock/core-js/issues/640
      }, { unsafe: true });
    }

    // make `.constructor === Promise` work for native promise-based APIs
    try {
      delete NativePromisePrototype$1.constructor;
    } catch (error) { /* empty */ }

    // make `instanceof Promise` work for native promise-based APIs
    if (setPrototypeOf$2) {
      setPrototypeOf$2(NativePromisePrototype$1, PromisePrototype);
    }
  }
}

$$u({ global: true, constructor: true, wrap: true, forced: FORCED_PROMISE_CONSTRUCTOR$4 }, {
  Promise: PromiseConstructor
});

setToStringTag$3(PromiseConstructor, PROMISE, false);
setSpecies$2(PROMISE);

var iterators = {};

var wellKnownSymbol$f = wellKnownSymbol$n;
var Iterators$4 = iterators;

var ITERATOR$6 = wellKnownSymbol$f('iterator');
var ArrayPrototype$1 = Array.prototype;

// check on default Array iterator
var isArrayIteratorMethod$1 = function (it) {
  return it !== undefined && (Iterators$4.Array === it || ArrayPrototype$1[ITERATOR$6] === it);
};

var classof$6 = classof$b;
var getMethod$2 = getMethod$4;
var isNullOrUndefined$4 = isNullOrUndefined$8;
var Iterators$3 = iterators;
var wellKnownSymbol$e = wellKnownSymbol$n;

var ITERATOR$5 = wellKnownSymbol$e('iterator');

var getIteratorMethod$2 = function (it) {
  if (!isNullOrUndefined$4(it)) return getMethod$2(it, ITERATOR$5)
    || getMethod$2(it, '@@iterator')
    || Iterators$3[classof$6(it)];
};

var call$b = functionCall;
var aCallable$4 = aCallable$9;
var anObject$a = anObject$f;
var tryToString$1 = tryToString$4;
var getIteratorMethod$1 = getIteratorMethod$2;

var $TypeError$5 = TypeError;

var getIterator$1 = function (argument, usingIterator) {
  var iteratorMethod = arguments.length < 2 ? getIteratorMethod$1(argument) : usingIterator;
  if (aCallable$4(iteratorMethod)) return anObject$a(call$b(iteratorMethod, argument));
  throw $TypeError$5(tryToString$1(argument) + ' is not iterable');
};

var call$a = functionCall;
var anObject$9 = anObject$f;
var getMethod$1 = getMethod$4;

var iteratorClose$1 = function (iterator, kind, value) {
  var innerResult, innerError;
  anObject$9(iterator);
  try {
    innerResult = getMethod$1(iterator, 'return');
    if (!innerResult) {
      if (kind === 'throw') throw value;
      return value;
    }
    innerResult = call$a(innerResult, iterator);
  } catch (error) {
    innerError = true;
    innerResult = error;
  }
  if (kind === 'throw') throw value;
  if (innerError) throw innerResult;
  anObject$9(innerResult);
  return value;
};

var bind$3 = functionBindContext;
var call$9 = functionCall;
var anObject$8 = anObject$f;
var tryToString = tryToString$4;
var isArrayIteratorMethod = isArrayIteratorMethod$1;
var lengthOfArrayLike$8 = lengthOfArrayLike$a;
var isPrototypeOf$3 = objectIsPrototypeOf;
var getIterator = getIterator$1;
var getIteratorMethod = getIteratorMethod$2;
var iteratorClose = iteratorClose$1;

var $TypeError$4 = TypeError;

var Result = function (stopped, result) {
  this.stopped = stopped;
  this.result = result;
};

var ResultPrototype = Result.prototype;

var iterate$6 = function (iterable, unboundFunction, options) {
  var that = options && options.that;
  var AS_ENTRIES = !!(options && options.AS_ENTRIES);
  var IS_RECORD = !!(options && options.IS_RECORD);
  var IS_ITERATOR = !!(options && options.IS_ITERATOR);
  var INTERRUPTED = !!(options && options.INTERRUPTED);
  var fn = bind$3(unboundFunction, that);
  var iterator, iterFn, index, length, result, next, step;

  var stop = function (condition) {
    if (iterator) iteratorClose(iterator, 'normal', condition);
    return new Result(true, condition);
  };

  var callFn = function (value) {
    if (AS_ENTRIES) {
      anObject$8(value);
      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
    } return INTERRUPTED ? fn(value, stop) : fn(value);
  };

  if (IS_RECORD) {
    iterator = iterable.iterator;
  } else if (IS_ITERATOR) {
    iterator = iterable;
  } else {
    iterFn = getIteratorMethod(iterable);
    if (!iterFn) throw $TypeError$4(tryToString(iterable) + ' is not iterable');
    // optimisation for array iterators
    if (isArrayIteratorMethod(iterFn)) {
      for (index = 0, length = lengthOfArrayLike$8(iterable); length > index; index++) {
        result = callFn(iterable[index]);
        if (result && isPrototypeOf$3(ResultPrototype, result)) return result;
      } return new Result(false);
    }
    iterator = getIterator(iterable, iterFn);
  }

  next = IS_RECORD ? iterable.next : iterator.next;
  while (!(step = call$9(next, iterator)).done) {
    try {
      result = callFn(step.value);
    } catch (error) {
      iteratorClose(iterator, 'throw', error);
    }
    if (typeof result == 'object' && result && isPrototypeOf$3(ResultPrototype, result)) return result;
  } return new Result(false);
};

var wellKnownSymbol$d = wellKnownSymbol$n;

var ITERATOR$4 = wellKnownSymbol$d('iterator');
var SAFE_CLOSING = false;

try {
  var called = 0;
  var iteratorWithReturn = {
    next: function () {
      return { done: !!called++ };
    },
    'return': function () {
      SAFE_CLOSING = true;
    }
  };
  iteratorWithReturn[ITERATOR$4] = function () {
    return this;
  };
  // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing
  Array.from(iteratorWithReturn, function () { throw 2; });
} catch (error) { /* empty */ }

var checkCorrectnessOfIteration$2 = function (exec, SKIP_CLOSING) {
  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
  var ITERATION_SUPPORT = false;
  try {
    var object = {};
    object[ITERATOR$4] = function () {
      return {
        next: function () {
          return { done: ITERATION_SUPPORT = true };
        }
      };
    };
    exec(object);
  } catch (error) { /* empty */ }
  return ITERATION_SUPPORT;
};

var NativePromiseConstructor$1 = promiseNativeConstructor;
var checkCorrectnessOfIteration$1 = checkCorrectnessOfIteration$2;
var FORCED_PROMISE_CONSTRUCTOR$3 = promiseConstructorDetection.CONSTRUCTOR;

var promiseStaticsIncorrectIteration = FORCED_PROMISE_CONSTRUCTOR$3 || !checkCorrectnessOfIteration$1(function (iterable) {
  NativePromiseConstructor$1.all(iterable).then(undefined, function () { /* empty */ });
});

var $$t = _export;
var call$8 = functionCall;
var aCallable$3 = aCallable$9;
var newPromiseCapabilityModule$2 = newPromiseCapability$2;
var perform$1 = perform$3;
var iterate$5 = iterate$6;
var PROMISE_STATICS_INCORRECT_ITERATION$1 = promiseStaticsIncorrectIteration;

// `Promise.all` method
// https://tc39.es/ecma262/#sec-promise.all
$$t({ target: 'Promise', stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION$1 }, {
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapabilityModule$2.f(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform$1(function () {
      var $promiseResolve = aCallable$3(C.resolve);
      var values = [];
      var counter = 0;
      var remaining = 1;
      iterate$5(iterable, function (promise) {
        var index = counter++;
        var alreadyCalled = false;
        remaining++;
        call$8($promiseResolve, C, promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});

var $$s = _export;
var FORCED_PROMISE_CONSTRUCTOR$2 = promiseConstructorDetection.CONSTRUCTOR;
var NativePromiseConstructor = promiseNativeConstructor;
var getBuiltIn$1 = getBuiltIn$8;
var isCallable$7 = isCallable$o;
var defineBuiltIn$8 = defineBuiltIn$c;

var NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;

// `Promise.prototype.catch` method
// https://tc39.es/ecma262/#sec-promise.prototype.catch
$$s({ target: 'Promise', proto: true, forced: FORCED_PROMISE_CONSTRUCTOR$2, real: true }, {
  'catch': function (onRejected) {
    return this.then(undefined, onRejected);
  }
});

// makes sure that native promise-based APIs `Promise#catch` properly works with patched `Promise#then`
if (isCallable$7(NativePromiseConstructor)) {
  var method = getBuiltIn$1('Promise').prototype['catch'];
  if (NativePromisePrototype['catch'] !== method) {
    defineBuiltIn$8(NativePromisePrototype, 'catch', method, { unsafe: true });
  }
}

var $$r = _export;
var call$7 = functionCall;
var aCallable$2 = aCallable$9;
var newPromiseCapabilityModule$1 = newPromiseCapability$2;
var perform = perform$3;
var iterate$4 = iterate$6;
var PROMISE_STATICS_INCORRECT_ITERATION = promiseStaticsIncorrectIteration;

// `Promise.race` method
// https://tc39.es/ecma262/#sec-promise.race
$$r({ target: 'Promise', stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION }, {
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapabilityModule$1.f(C);
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aCallable$2(C.resolve);
      iterate$4(iterable, function (promise) {
        call$7($promiseResolve, C, promise).then(capability.resolve, reject);
      });
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});

var $$q = _export;
var call$6 = functionCall;
var newPromiseCapabilityModule = newPromiseCapability$2;
var FORCED_PROMISE_CONSTRUCTOR$1 = promiseConstructorDetection.CONSTRUCTOR;

// `Promise.reject` method
// https://tc39.es/ecma262/#sec-promise.reject
$$q({ target: 'Promise', stat: true, forced: FORCED_PROMISE_CONSTRUCTOR$1 }, {
  reject: function reject(r) {
    var capability = newPromiseCapabilityModule.f(this);
    call$6(capability.reject, undefined, r);
    return capability.promise;
  }
});

var anObject$7 = anObject$f;
var isObject$c = isObject$j;
var newPromiseCapability = newPromiseCapability$2;

var promiseResolve$1 = function (C, x) {
  anObject$7(C);
  if (isObject$c(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};

var $$p = _export;
var getBuiltIn = getBuiltIn$8;
var FORCED_PROMISE_CONSTRUCTOR = promiseConstructorDetection.CONSTRUCTOR;
var promiseResolve = promiseResolve$1;

getBuiltIn('Promise');

// `Promise.resolve` method
// https://tc39.es/ecma262/#sec-promise.resolve
$$p({ target: 'Promise', stat: true, forced: FORCED_PROMISE_CONSTRUCTOR }, {
  resolve: function resolve(x) {
    return promiseResolve(this, x);
  }
});

var Deferred = /*#__PURE__*/_createClass(function Deferred() {
  var _this = this;
  _classCallCheck(this, Deferred);
  this.promise = new Promise(function (resolve, reject) {
    _this.resolve = resolve;
    _this.reject = reject;
  });
});

var classof$5 = classof$b;

var $String = String;

var toString$a = function (argument) {
  if (classof$5(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');
  return $String(argument);
};

var anObject$6 = anObject$f;

// `RegExp.prototype.flags` getter implementation
// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags
var regexpFlags$1 = function () {
  var that = anObject$6(this);
  var result = '';
  if (that.hasIndices) result += 'd';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.dotAll) result += 's';
  if (that.unicode) result += 'u';
  if (that.unicodeSets) result += 'v';
  if (that.sticky) result += 'y';
  return result;
};

var fails$l = fails$w;
var global$b = global$t;

// babel-minify and Closure Compiler transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError
var $RegExp$2 = global$b.RegExp;

var UNSUPPORTED_Y$2 = fails$l(function () {
  var re = $RegExp$2('a', 'y');
  re.lastIndex = 2;
  return re.exec('abcd') != null;
});

// UC Browser bug
// https://github.com/zloirock/core-js/issues/1008
var MISSED_STICKY$1 = UNSUPPORTED_Y$2 || fails$l(function () {
  return !$RegExp$2('a', 'y').sticky;
});

var BROKEN_CARET = UNSUPPORTED_Y$2 || fails$l(function () {
  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687
  var re = $RegExp$2('^r', 'gy');
  re.lastIndex = 2;
  return re.exec('str') != null;
});

var regexpStickyHelpers = {
  BROKEN_CARET: BROKEN_CARET,
  MISSED_STICKY: MISSED_STICKY$1,
  UNSUPPORTED_Y: UNSUPPORTED_Y$2
};

var objectDefineProperties = {};

var internalObjectKeys = objectKeysInternal;
var enumBugKeys$1 = enumBugKeys$3;

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
// eslint-disable-next-line es/no-object-keys -- safe
var objectKeys$3 = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys$1);
};

var DESCRIPTORS$7 = descriptors;
var V8_PROTOTYPE_DEFINE_BUG = v8PrototypeDefineBug;
var definePropertyModule$1 = objectDefineProperty;
var anObject$5 = anObject$f;
var toIndexedObject$4 = toIndexedObject$8;
var objectKeys$2 = objectKeys$3;

// `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
// eslint-disable-next-line es/no-object-defineproperties -- safe
objectDefineProperties.f = DESCRIPTORS$7 && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject$5(O);
  var props = toIndexedObject$4(Properties);
  var keys = objectKeys$2(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) definePropertyModule$1.f(O, key = keys[index++], props[key]);
  return O;
};

/* global ActiveXObject -- old IE, WSH */

var anObject$4 = anObject$f;
var definePropertiesModule = objectDefineProperties;
var enumBugKeys = enumBugKeys$3;
var hiddenKeys$1 = hiddenKeys$5;
var html = html$2;
var documentCreateElement$1 = documentCreateElement$2;
var sharedKey$1 = sharedKey$3;

var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO$1 = sharedKey$1('IE_PROTO');

var EmptyConstructor = function () { /* empty */ };

var scriptTag = function (content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX = function (activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak
  return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement$1('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  // https://github.com/zloirock/core-js/issues/475
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;
var NullProtoObject = function () {
  try {
    activeXDocument = new ActiveXObject('htmlfile');
  } catch (error) { /* ignore */ }
  NullProtoObject = typeof document != 'undefined'
    ? document.domain && activeXDocument
      ? NullProtoObjectViaActiveX(activeXDocument) // old IE
      : NullProtoObjectViaIFrame()
    : NullProtoObjectViaActiveX(activeXDocument); // WSH
  var length = enumBugKeys.length;
  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
  return NullProtoObject();
};

hiddenKeys$1[IE_PROTO$1] = true;

// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
// eslint-disable-next-line es/no-object-create -- safe
var objectCreate = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject$4(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO$1] = O;
  } else result = NullProtoObject();
  return Properties === undefined ? result : definePropertiesModule.f(result, Properties);
};

var fails$k = fails$w;
var global$a = global$t;

// babel-minify and Closure Compiler transpiles RegExp('.', 's') -> /./s and it causes SyntaxError
var $RegExp$1 = global$a.RegExp;

var regexpUnsupportedDotAll = fails$k(function () {
  var re = $RegExp$1('.', 's');
  return !(re.dotAll && re.exec('\n') && re.flags === 's');
});

var fails$j = fails$w;
var global$9 = global$t;

// babel-minify and Closure Compiler transpiles RegExp('(?<a>b)', 'g') -> /(?<a>b)/g and it causes SyntaxError
var $RegExp = global$9.RegExp;

var regexpUnsupportedNcg = fails$j(function () {
  var re = $RegExp('(?<a>b)', 'g');
  return re.exec('b').groups.a !== 'b' ||
    'b'.replace(re, '$<a>c') !== 'bc';
});

/* eslint-disable regexp/no-empty-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */
/* eslint-disable regexp/no-useless-quantifier -- testing */
var call$5 = functionCall;
var uncurryThis$j = functionUncurryThis;
var toString$9 = toString$a;
var regexpFlags = regexpFlags$1;
var stickyHelpers$1 = regexpStickyHelpers;
var shared = shared$4.exports;
var create$3 = objectCreate;
var getInternalState$2 = internalState.get;
var UNSUPPORTED_DOT_ALL$1 = regexpUnsupportedDotAll;
var UNSUPPORTED_NCG$1 = regexpUnsupportedNcg;

var nativeReplace = shared('native-string-replace', String.prototype.replace);
var nativeExec = RegExp.prototype.exec;
var patchedExec = nativeExec;
var charAt$5 = uncurryThis$j(''.charAt);
var indexOf = uncurryThis$j(''.indexOf);
var replace$3 = uncurryThis$j(''.replace);
var stringSlice$5 = uncurryThis$j(''.slice);

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/;
  var re2 = /b*/g;
  call$5(nativeExec, re1, 'a');
  call$5(nativeExec, re2, 'a');
  return re1.lastIndex !== 0 || re2.lastIndex !== 0;
})();

var UNSUPPORTED_Y$1 = stickyHelpers$1.BROKEN_CARET;

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y$1 || UNSUPPORTED_DOT_ALL$1 || UNSUPPORTED_NCG$1;

if (PATCH) {
  patchedExec = function exec(string) {
    var re = this;
    var state = getInternalState$2(re);
    var str = toString$9(string);
    var raw = state.raw;
    var result, reCopy, lastIndex, match, i, object, group;

    if (raw) {
      raw.lastIndex = re.lastIndex;
      result = call$5(patchedExec, raw, str);
      re.lastIndex = raw.lastIndex;
      return result;
    }

    var groups = state.groups;
    var sticky = UNSUPPORTED_Y$1 && re.sticky;
    var flags = call$5(regexpFlags, re);
    var source = re.source;
    var charsAdded = 0;
    var strCopy = str;

    if (sticky) {
      flags = replace$3(flags, 'y', '');
      if (indexOf(flags, 'g') === -1) {
        flags += 'g';
      }

      strCopy = stringSlice$5(str, re.lastIndex);
      // Support anchored sticky behavior.
      if (re.lastIndex > 0 && (!re.multiline || re.multiline && charAt$5(str, re.lastIndex - 1) !== '\n')) {
        source = '(?: ' + source + ')';
        strCopy = ' ' + strCopy;
        charsAdded++;
      }
      // ^(? + rx + ) is needed, in combination with some str slicing, to
      // simulate the 'y' flag.
      reCopy = new RegExp('^(?:' + source + ')', flags);
    }

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + source + '$(?!\\s)', flags);
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;

    match = call$5(nativeExec, sticky ? reCopy : re, strCopy);

    if (sticky) {
      if (match) {
        match.input = stringSlice$5(match.input, charsAdded);
        match[0] = stringSlice$5(match[0], charsAdded);
        match.index = re.lastIndex;
        re.lastIndex += match[0].length;
      } else re.lastIndex = 0;
    } else if (UPDATES_LAST_INDEX_WRONG && match) {
      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn't work for /(.?)?/
      call$5(nativeReplace, match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    if (match && groups) {
      match.groups = object = create$3(null);
      for (i = 0; i < groups.length; i++) {
        group = groups[i];
        object[group[0]] = match[group[1]];
      }
    }

    return match;
  };
}

var regexpExec$2 = patchedExec;

var $$o = _export;
var exec$2 = regexpExec$2;

// `RegExp.prototype.exec` method
// https://tc39.es/ecma262/#sec-regexp.prototype.exec
$$o({ target: 'RegExp', proto: true, forced: /./.exec !== exec$2 }, {
  exec: exec$2
});

var wellKnownSymbol$c = wellKnownSymbol$n;
var create$2 = objectCreate;
var defineProperty$7 = objectDefineProperty.f;

var UNSCOPABLES = wellKnownSymbol$c('unscopables');
var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype[UNSCOPABLES] == undefined) {
  defineProperty$7(ArrayPrototype, UNSCOPABLES, {
    configurable: true,
    value: create$2(null)
  });
}

// add a key to Array.prototype[@@unscopables]
var addToUnscopables$4 = function (key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};

var $$n = _export;
var $includes = arrayIncludes.includes;
var fails$i = fails$w;
var addToUnscopables$3 = addToUnscopables$4;

// FF99+ bug
var BROKEN_ON_SPARSE = fails$i(function () {
  return !Array(1).includes();
});

// `Array.prototype.includes` method
// https://tc39.es/ecma262/#sec-array.prototype.includes
$$n({ target: 'Array', proto: true, forced: BROKEN_ON_SPARSE }, {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables$3('includes');

var isObject$b = isObject$j;
var classof$4 = classofRaw$2;
var wellKnownSymbol$b = wellKnownSymbol$n;

var MATCH$2 = wellKnownSymbol$b('match');

// `IsRegExp` abstract operation
// https://tc39.es/ecma262/#sec-isregexp
var isRegexp = function (it) {
  var isRegExp;
  return isObject$b(it) && ((isRegExp = it[MATCH$2]) !== undefined ? !!isRegExp : classof$4(it) == 'RegExp');
};

var isRegExp$1 = isRegexp;

var $TypeError$3 = TypeError;

var notARegexp = function (it) {
  if (isRegExp$1(it)) {
    throw $TypeError$3("The method doesn't accept regular expressions");
  } return it;
};

var wellKnownSymbol$a = wellKnownSymbol$n;

var MATCH$1 = wellKnownSymbol$a('match');

var correctIsRegexpLogic = function (METHOD_NAME) {
  var regexp = /./;
  try {
    '/./'[METHOD_NAME](regexp);
  } catch (error1) {
    try {
      regexp[MATCH$1] = false;
      return '/./'[METHOD_NAME](regexp);
    } catch (error2) { /* empty */ }
  } return false;
};

var $$m = _export;
var uncurryThis$i = functionUncurryThis;
var notARegExp$2 = notARegexp;
var requireObjectCoercible$5 = requireObjectCoercible$8;
var toString$8 = toString$a;
var correctIsRegExpLogic$2 = correctIsRegexpLogic;

var stringIndexOf$2 = uncurryThis$i(''.indexOf);

// `String.prototype.includes` method
// https://tc39.es/ecma262/#sec-string.prototype.includes
$$m({ target: 'String', proto: true, forced: !correctIsRegExpLogic$2('includes') }, {
  includes: function includes(searchString /* , position = 0 */) {
    return !!~stringIndexOf$2(
      toString$8(requireObjectCoercible$5(this)),
      toString$8(notARegExp$2(searchString)),
      arguments.length > 1 ? arguments[1] : undefined
    );
  }
});

var isCallable$6 = isCallable$o;
var isObject$a = isObject$j;
var setPrototypeOf$1 = objectSetPrototypeOf;

// makes subclassing work correct for wrapped built-ins
var inheritIfRequired$3 = function ($this, dummy, Wrapper) {
  var NewTarget, NewTargetPrototype;
  if (
    // it can work only with native `setPrototypeOf`
    setPrototypeOf$1 &&
    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
    isCallable$6(NewTarget = dummy.constructor) &&
    NewTarget !== Wrapper &&
    isObject$a(NewTargetPrototype = NewTarget.prototype) &&
    NewTargetPrototype !== Wrapper.prototype
  ) setPrototypeOf$1($this, NewTargetPrototype);
  return $this;
};

var uncurryThis$h = functionUncurryThis;

// `thisNumberValue` abstract operation
// https://tc39.es/ecma262/#sec-thisnumbervalue
var thisNumberValue$1 = uncurryThis$h(1.0.valueOf);

// a string of all valid unicode whitespaces
var whitespaces$2 = '\u0009\u000A\u000B\u000C\u000D\u0020\u00A0\u1680\u2000\u2001\u2002' +
  '\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';

var uncurryThis$g = functionUncurryThis;
var requireObjectCoercible$4 = requireObjectCoercible$8;
var toString$7 = toString$a;
var whitespaces$1 = whitespaces$2;

var replace$2 = uncurryThis$g(''.replace);
var whitespace = '[' + whitespaces$1 + ']';
var ltrim = RegExp('^' + whitespace + whitespace + '*');
var rtrim = RegExp(whitespace + whitespace + '*$');

// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation
var createMethod$4 = function (TYPE) {
  return function ($this) {
    var string = toString$7(requireObjectCoercible$4($this));
    if (TYPE & 1) string = replace$2(string, ltrim, '');
    if (TYPE & 2) string = replace$2(string, rtrim, '');
    return string;
  };
};

var stringTrim = {
  // `String.prototype.{ trimLeft, trimStart }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimstart
  start: createMethod$4(1),
  // `String.prototype.{ trimRight, trimEnd }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimend
  end: createMethod$4(2),
  // `String.prototype.trim` method
  // https://tc39.es/ecma262/#sec-string.prototype.trim
  trim: createMethod$4(3)
};

var DESCRIPTORS$6 = descriptors;
var global$8 = global$t;
var uncurryThis$f = functionUncurryThis;
var isForced$2 = isForced_1;
var defineBuiltIn$7 = defineBuiltIn$c;
var hasOwn$5 = hasOwnProperty_1;
var inheritIfRequired$2 = inheritIfRequired$3;
var isPrototypeOf$2 = objectIsPrototypeOf;
var isSymbol = isSymbol$3;
var toPrimitive = toPrimitive$2;
var fails$h = fails$w;
var getOwnPropertyNames$1 = objectGetOwnPropertyNames.f;
var getOwnPropertyDescriptor$2 = objectGetOwnPropertyDescriptor.f;
var defineProperty$6 = objectDefineProperty.f;
var thisNumberValue = thisNumberValue$1;
var trim$1 = stringTrim.trim;

var NUMBER = 'Number';
var NativeNumber = global$8[NUMBER];
var NumberPrototype = NativeNumber.prototype;
var TypeError$1 = global$8.TypeError;
var arraySlice$1 = uncurryThis$f(''.slice);
var charCodeAt$1 = uncurryThis$f(''.charCodeAt);

// `ToNumeric` abstract operation
// https://tc39.es/ecma262/#sec-tonumeric
var toNumeric = function (value) {
  var primValue = toPrimitive(value, 'number');
  return typeof primValue == 'bigint' ? primValue : toNumber(primValue);
};

// `ToNumber` abstract operation
// https://tc39.es/ecma262/#sec-tonumber
var toNumber = function (argument) {
  var it = toPrimitive(argument, 'number');
  var first, third, radix, maxCode, digits, length, index, code;
  if (isSymbol(it)) throw TypeError$1('Cannot convert a Symbol value to a number');
  if (typeof it == 'string' && it.length > 2) {
    it = trim$1(it);
    first = charCodeAt$1(it, 0);
    if (first === 43 || first === 45) {
      third = charCodeAt$1(it, 2);
      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
    } else if (first === 48) {
      switch (charCodeAt$1(it, 1)) {
        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i
        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i
        default: return +it;
      }
      digits = arraySlice$1(it, 2);
      length = digits.length;
      for (index = 0; index < length; index++) {
        code = charCodeAt$1(digits, index);
        // parseInt parses a string to a first unavailable symbol
        // but ToNumber should return NaN if a string contains unavailable symbols
        if (code < 48 || code > maxCode) return NaN;
      } return parseInt(digits, radix);
    }
  } return +it;
};

// `Number` constructor
// https://tc39.es/ecma262/#sec-number-constructor
if (isForced$2(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {
  var NumberWrapper = function Number(value) {
    var n = arguments.length < 1 ? 0 : NativeNumber(toNumeric(value));
    var dummy = this;
    // check on 1..constructor(foo) case
    return isPrototypeOf$2(NumberPrototype, dummy) && fails$h(function () { thisNumberValue(dummy); })
      ? inheritIfRequired$2(Object(n), dummy, NumberWrapper) : n;
  };
  for (var keys$1 = DESCRIPTORS$6 ? getOwnPropertyNames$1(NativeNumber) : (
    // ES3:
    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
    // ES2015 (in case, if modules with ES2015 Number statics required before):
    'EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,' +
    // ESNext
    'fromString,range'
  ).split(','), j = 0, key; keys$1.length > j; j++) {
    if (hasOwn$5(NativeNumber, key = keys$1[j]) && !hasOwn$5(NumberWrapper, key)) {
      defineProperty$6(NumberWrapper, key, getOwnPropertyDescriptor$2(NativeNumber, key));
    }
  }
  NumberWrapper.prototype = NumberPrototype;
  NumberPrototype.constructor = NumberWrapper;
  defineBuiltIn$7(global$8, NUMBER, NumberWrapper, { constructor: true });
}

var classof$3 = classofRaw$2;

// `IsArray` abstract operation
// https://tc39.es/ecma262/#sec-isarray
// eslint-disable-next-line es/no-array-isarray -- safe
var isArray$4 = Array.isArray || function isArray(argument) {
  return classof$3(argument) == 'Array';
};

var isArray$3 = isArray$4;
var isConstructor$1 = isConstructor$3;
var isObject$9 = isObject$j;
var wellKnownSymbol$9 = wellKnownSymbol$n;

var SPECIES$3 = wellKnownSymbol$9('species');
var $Array$2 = Array;

// a part of `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate
var arraySpeciesConstructor$1 = function (originalArray) {
  var C;
  if (isArray$3(originalArray)) {
    C = originalArray.constructor;
    // cross-realm fallback
    if (isConstructor$1(C) && (C === $Array$2 || isArray$3(C.prototype))) C = undefined;
    else if (isObject$9(C)) {
      C = C[SPECIES$3];
      if (C === null) C = undefined;
    }
  } return C === undefined ? $Array$2 : C;
};

var arraySpeciesConstructor = arraySpeciesConstructor$1;

// `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate
var arraySpeciesCreate$3 = function (originalArray, length) {
  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);
};

var bind$2 = functionBindContext;
var uncurryThis$e = functionUncurryThis;
var IndexedObject$2 = indexedObject;
var toObject$9 = toObject$b;
var lengthOfArrayLike$7 = lengthOfArrayLike$a;
var arraySpeciesCreate$2 = arraySpeciesCreate$3;

var push$2 = uncurryThis$e([].push);

// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation
var createMethod$3 = function (TYPE) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var IS_FILTER_REJECT = TYPE == 7;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  return function ($this, callbackfn, that, specificCreate) {
    var O = toObject$9($this);
    var self = IndexedObject$2(O);
    var boundFunction = bind$2(callbackfn, that);
    var length = lengthOfArrayLike$7(self);
    var index = 0;
    var create = specificCreate || arraySpeciesCreate$2;
    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;
    var value, result;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      value = self[index];
      result = boundFunction(value, index, O);
      if (TYPE) {
        if (IS_MAP) target[index] = result; // map
        else if (result) switch (TYPE) {
          case 3: return true;              // some
          case 5: return value;             // find
          case 6: return index;             // findIndex
          case 2: push$2(target, value);      // filter
        } else switch (TYPE) {
          case 4: return false;             // every
          case 7: push$2(target, value);      // filterReject
        }
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
  };
};

var arrayIteration = {
  // `Array.prototype.forEach` method
  // https://tc39.es/ecma262/#sec-array.prototype.foreach
  forEach: createMethod$3(0),
  // `Array.prototype.map` method
  // https://tc39.es/ecma262/#sec-array.prototype.map
  map: createMethod$3(1),
  // `Array.prototype.filter` method
  // https://tc39.es/ecma262/#sec-array.prototype.filter
  filter: createMethod$3(2),
  // `Array.prototype.some` method
  // https://tc39.es/ecma262/#sec-array.prototype.some
  some: createMethod$3(3),
  // `Array.prototype.every` method
  // https://tc39.es/ecma262/#sec-array.prototype.every
  every: createMethod$3(4),
  // `Array.prototype.find` method
  // https://tc39.es/ecma262/#sec-array.prototype.find
  find: createMethod$3(5),
  // `Array.prototype.findIndex` method
  // https://tc39.es/ecma262/#sec-array.prototype.findIndex
  findIndex: createMethod$3(6),
  // `Array.prototype.filterReject` method
  // https://github.com/tc39/proposal-array-filtering
  filterReject: createMethod$3(7)
};

var fails$g = fails$w;
var wellKnownSymbol$8 = wellKnownSymbol$n;
var V8_VERSION$1 = engineV8Version;

var SPECIES$2 = wellKnownSymbol$8('species');

var arrayMethodHasSpeciesSupport$3 = function (METHOD_NAME) {
  // We can't use this feature detection in V8 since it causes
  // deoptimization and serious performance degradation
  // https://github.com/zloirock/core-js/issues/677
  return V8_VERSION$1 >= 51 || !fails$g(function () {
    var array = [];
    var constructor = array.constructor = {};
    constructor[SPECIES$2] = function () {
      return { foo: 1 };
    };
    return array[METHOD_NAME](Boolean).foo !== 1;
  });
};

var $$l = _export;
var $map = arrayIteration.map;
var arrayMethodHasSpeciesSupport$2 = arrayMethodHasSpeciesSupport$3;

var HAS_SPECIES_SUPPORT$1 = arrayMethodHasSpeciesSupport$2('map');

// `Array.prototype.map` method
// https://tc39.es/ecma262/#sec-array.prototype.map
// with adding support of @@species
$$l({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT$1 }, {
  map: function map(callbackfn /* , thisArg */) {
    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

var $$k = _export;

// `Number.isNaN` method
// https://tc39.es/ecma262/#sec-number.isnan
$$k({ target: 'Number', stat: true }, {
  isNaN: function isNaN(number) {
    // eslint-disable-next-line no-self-compare -- NaN check
    return number != number;
  }
});

var call$4 = functionCall;
var hasOwn$4 = hasOwnProperty_1;
var isPrototypeOf$1 = objectIsPrototypeOf;
var regExpFlags = regexpFlags$1;

var RegExpPrototype$3 = RegExp.prototype;

var regexpGetFlags = function (R) {
  var flags = R.flags;
  return flags === undefined && !('flags' in RegExpPrototype$3) && !hasOwn$4(R, 'flags') && isPrototypeOf$1(RegExpPrototype$3, R)
    ? call$4(regExpFlags, R) : flags;
};

var defineProperty$5 = objectDefineProperty.f;

var proxyAccessor$1 = function (Target, Source, key) {
  key in Target || defineProperty$5(Target, key, {
    configurable: true,
    get: function () { return Source[key]; },
    set: function (it) { Source[key] = it; }
  });
};

var DESCRIPTORS$5 = descriptors;
var global$7 = global$t;
var uncurryThis$d = functionUncurryThis;
var isForced$1 = isForced_1;
var inheritIfRequired$1 = inheritIfRequired$3;
var createNonEnumerableProperty$4 = createNonEnumerableProperty$7;
var getOwnPropertyNames = objectGetOwnPropertyNames.f;
var isPrototypeOf = objectIsPrototypeOf;
var isRegExp = isRegexp;
var toString$6 = toString$a;
var getRegExpFlags$1 = regexpGetFlags;
var stickyHelpers = regexpStickyHelpers;
var proxyAccessor = proxyAccessor$1;
var defineBuiltIn$6 = defineBuiltIn$c;
var fails$f = fails$w;
var hasOwn$3 = hasOwnProperty_1;
var enforceInternalState$1 = internalState.enforce;
var setSpecies$1 = setSpecies$3;
var wellKnownSymbol$7 = wellKnownSymbol$n;
var UNSUPPORTED_DOT_ALL = regexpUnsupportedDotAll;
var UNSUPPORTED_NCG = regexpUnsupportedNcg;

var MATCH = wellKnownSymbol$7('match');
var NativeRegExp = global$7.RegExp;
var RegExpPrototype$2 = NativeRegExp.prototype;
var SyntaxError = global$7.SyntaxError;
var exec$1 = uncurryThis$d(RegExpPrototype$2.exec);
var charAt$4 = uncurryThis$d(''.charAt);
var replace$1 = uncurryThis$d(''.replace);
var stringIndexOf$1 = uncurryThis$d(''.indexOf);
var stringSlice$4 = uncurryThis$d(''.slice);
// TODO: Use only proper RegExpIdentifierName
var IS_NCG = /^\?<[^\s\d!#%&*+<=>@^][^\s!#%&*+<=>@^]*>/;
var re1 = /a/g;
var re2 = /a/g;

// "new" should create a new object, old webkit bug
var CORRECT_NEW = new NativeRegExp(re1) !== re1;

var MISSED_STICKY = stickyHelpers.MISSED_STICKY;
var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;

var BASE_FORCED = DESCRIPTORS$5 &&
  (!CORRECT_NEW || MISSED_STICKY || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG || fails$f(function () {
    re2[MATCH] = false;
    // RegExp constructor can alter flags and IsRegExp works correct with @@match
    return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';
  }));

var handleDotAll = function (string) {
  var length = string.length;
  var index = 0;
  var result = '';
  var brackets = false;
  var chr;
  for (; index <= length; index++) {
    chr = charAt$4(string, index);
    if (chr === '\\') {
      result += chr + charAt$4(string, ++index);
      continue;
    }
    if (!brackets && chr === '.') {
      result += '[\\s\\S]';
    } else {
      if (chr === '[') {
        brackets = true;
      } else if (chr === ']') {
        brackets = false;
      } result += chr;
    }
  } return result;
};

var handleNCG = function (string) {
  var length = string.length;
  var index = 0;
  var result = '';
  var named = [];
  var names = {};
  var brackets = false;
  var ncg = false;
  var groupid = 0;
  var groupname = '';
  var chr;
  for (; index <= length; index++) {
    chr = charAt$4(string, index);
    if (chr === '\\') {
      chr = chr + charAt$4(string, ++index);
    } else if (chr === ']') {
      brackets = false;
    } else if (!brackets) switch (true) {
      case chr === '[':
        brackets = true;
        break;
      case chr === '(':
        if (exec$1(IS_NCG, stringSlice$4(string, index + 1))) {
          index += 2;
          ncg = true;
        }
        result += chr;
        groupid++;
        continue;
      case chr === '>' && ncg:
        if (groupname === '' || hasOwn$3(names, groupname)) {
          throw new SyntaxError('Invalid capture group name');
        }
        names[groupname] = true;
        named[named.length] = [groupname, groupid];
        ncg = false;
        groupname = '';
        continue;
    }
    if (ncg) groupname += chr;
    else result += chr;
  } return [result, named];
};

// `RegExp` constructor
// https://tc39.es/ecma262/#sec-regexp-constructor
if (isForced$1('RegExp', BASE_FORCED)) {
  var RegExpWrapper = function RegExp(pattern, flags) {
    var thisIsRegExp = isPrototypeOf(RegExpPrototype$2, this);
    var patternIsRegExp = isRegExp(pattern);
    var flagsAreUndefined = flags === undefined;
    var groups = [];
    var rawPattern = pattern;
    var rawFlags, dotAll, sticky, handled, result, state;

    if (!thisIsRegExp && patternIsRegExp && flagsAreUndefined && pattern.constructor === RegExpWrapper) {
      return pattern;
    }

    if (patternIsRegExp || isPrototypeOf(RegExpPrototype$2, pattern)) {
      pattern = pattern.source;
      if (flagsAreUndefined) flags = getRegExpFlags$1(rawPattern);
    }

    pattern = pattern === undefined ? '' : toString$6(pattern);
    flags = flags === undefined ? '' : toString$6(flags);
    rawPattern = pattern;

    if (UNSUPPORTED_DOT_ALL && 'dotAll' in re1) {
      dotAll = !!flags && stringIndexOf$1(flags, 's') > -1;
      if (dotAll) flags = replace$1(flags, /s/g, '');
    }

    rawFlags = flags;

    if (MISSED_STICKY && 'sticky' in re1) {
      sticky = !!flags && stringIndexOf$1(flags, 'y') > -1;
      if (sticky && UNSUPPORTED_Y) flags = replace$1(flags, /y/g, '');
    }

    if (UNSUPPORTED_NCG) {
      handled = handleNCG(pattern);
      pattern = handled[0];
      groups = handled[1];
    }

    result = inheritIfRequired$1(NativeRegExp(pattern, flags), thisIsRegExp ? this : RegExpPrototype$2, RegExpWrapper);

    if (dotAll || sticky || groups.length) {
      state = enforceInternalState$1(result);
      if (dotAll) {
        state.dotAll = true;
        state.raw = RegExpWrapper(handleDotAll(pattern), rawFlags);
      }
      if (sticky) state.sticky = true;
      if (groups.length) state.groups = groups;
    }

    if (pattern !== rawPattern) try {
      // fails in old engines, but we have no alternatives for unsupported regex syntax
      createNonEnumerableProperty$4(result, 'source', rawPattern === '' ? '(?:)' : rawPattern);
    } catch (error) { /* empty */ }

    return result;
  };

  for (var keys = getOwnPropertyNames(NativeRegExp), index = 0; keys.length > index;) {
    proxyAccessor(RegExpWrapper, NativeRegExp, keys[index++]);
  }

  RegExpPrototype$2.constructor = RegExpWrapper;
  RegExpWrapper.prototype = RegExpPrototype$2;
  defineBuiltIn$6(global$7, 'RegExp', RegExpWrapper, { constructor: true });
}

// https://tc39.es/ecma262/#sec-get-regexp-@@species
setSpecies$1('RegExp');

var PROPER_FUNCTION_NAME$1 = functionName.PROPER;
var defineBuiltIn$5 = defineBuiltIn$c;
var anObject$3 = anObject$f;
var $toString = toString$a;
var fails$e = fails$w;
var getRegExpFlags = regexpGetFlags;

var TO_STRING = 'toString';
var RegExpPrototype$1 = RegExp.prototype;
var nativeToString = RegExpPrototype$1[TO_STRING];

var NOT_GENERIC = fails$e(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });
// FF44- RegExp#toString has a wrong name
var INCORRECT_NAME = PROPER_FUNCTION_NAME$1 && nativeToString.name != TO_STRING;

// `RegExp.prototype.toString` method
// https://tc39.es/ecma262/#sec-regexp.prototype.tostring
if (NOT_GENERIC || INCORRECT_NAME) {
  defineBuiltIn$5(RegExp.prototype, TO_STRING, function toString() {
    var R = anObject$3(this);
    var pattern = $toString(R.source);
    var flags = $toString(getRegExpFlags(R));
    return '/' + pattern + '/' + flags;
  }, { unsafe: true });
}

var fails$d = fails$w;

var correctPrototypeGetter = !fails$d(function () {
  function F() { /* empty */ }
  F.prototype.constructor = null;
  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing
  return Object.getPrototypeOf(new F()) !== F.prototype;
});

var hasOwn$2 = hasOwnProperty_1;
var isCallable$5 = isCallable$o;
var toObject$8 = toObject$b;
var sharedKey = sharedKey$3;
var CORRECT_PROTOTYPE_GETTER$1 = correctPrototypeGetter;

var IE_PROTO = sharedKey('IE_PROTO');
var $Object = Object;
var ObjectPrototype = $Object.prototype;

// `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof
// eslint-disable-next-line es/no-object-getprototypeof -- safe
var objectGetPrototypeOf = CORRECT_PROTOTYPE_GETTER$1 ? $Object.getPrototypeOf : function (O) {
  var object = toObject$8(O);
  if (hasOwn$2(object, IE_PROTO)) return object[IE_PROTO];
  var constructor = object.constructor;
  if (isCallable$5(constructor) && object instanceof constructor) {
    return constructor.prototype;
  } return object instanceof $Object ? ObjectPrototype : null;
};

var fails$c = fails$w;
var isCallable$4 = isCallable$o;
var isObject$8 = isObject$j;
var getPrototypeOf$1 = objectGetPrototypeOf;
var defineBuiltIn$4 = defineBuiltIn$c;
var wellKnownSymbol$6 = wellKnownSymbol$n;

var ITERATOR$3 = wellKnownSymbol$6('iterator');
var BUGGY_SAFARI_ITERATORS$1 = false;

// `%IteratorPrototype%` object
// https://tc39.es/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype$2, PrototypeOfArrayIteratorPrototype, arrayIterator;

/* eslint-disable es/no-array-prototype-keys -- safe */
if ([].keys) {
  arrayIterator = [].keys();
  // Safari 8 has buggy iterators w/o `next`
  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS$1 = true;
  else {
    PrototypeOfArrayIteratorPrototype = getPrototypeOf$1(getPrototypeOf$1(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype$2 = PrototypeOfArrayIteratorPrototype;
  }
}

var NEW_ITERATOR_PROTOTYPE = !isObject$8(IteratorPrototype$2) || fails$c(function () {
  var test = {};
  // FF44- legacy iterators case
  return IteratorPrototype$2[ITERATOR$3].call(test) !== test;
});

if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype$2 = {};

// `%IteratorPrototype%[@@iterator]()` method
// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator
if (!isCallable$4(IteratorPrototype$2[ITERATOR$3])) {
  defineBuiltIn$4(IteratorPrototype$2, ITERATOR$3, function () {
    return this;
  });
}

var iteratorsCore = {
  IteratorPrototype: IteratorPrototype$2,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS$1
};

var IteratorPrototype$1 = iteratorsCore.IteratorPrototype;
var create$1 = objectCreate;
var createPropertyDescriptor$1 = createPropertyDescriptor$4;
var setToStringTag$2 = setToStringTag$4;
var Iterators$2 = iterators;

var returnThis$1 = function () { return this; };

var iteratorCreateConstructor = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = create$1(IteratorPrototype$1, { next: createPropertyDescriptor$1(+!ENUMERABLE_NEXT, next) });
  setToStringTag$2(IteratorConstructor, TO_STRING_TAG, false);
  Iterators$2[TO_STRING_TAG] = returnThis$1;
  return IteratorConstructor;
};

var $$j = _export;
var call$3 = functionCall;
var FunctionName = functionName;
var isCallable$3 = isCallable$o;
var createIteratorConstructor = iteratorCreateConstructor;
var getPrototypeOf = objectGetPrototypeOf;
var setPrototypeOf = objectSetPrototypeOf;
var setToStringTag$1 = setToStringTag$4;
var createNonEnumerableProperty$3 = createNonEnumerableProperty$7;
var defineBuiltIn$3 = defineBuiltIn$c;
var wellKnownSymbol$5 = wellKnownSymbol$n;
var Iterators$1 = iterators;
var IteratorsCore = iteratorsCore;

var PROPER_FUNCTION_NAME = FunctionName.PROPER;
var CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;
var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR$2 = wellKnownSymbol$5('iterator');
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';

var returnThis = function () { return this; };

var iteratorDefine = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  createIteratorConstructor(IteratorConstructor, NAME, next);

  var getIterationMethod = function (KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
    switch (KIND) {
      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
    } return function () { return new IteratorConstructor(this); };
  };

  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR$2]
    || IterablePrototype['@@iterator']
    || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;

  // fix native
  if (anyNativeIterator) {
    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if (getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
        if (setPrototypeOf) {
          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
        } else if (!isCallable$3(CurrentIteratorPrototype[ITERATOR$2])) {
          defineBuiltIn$3(CurrentIteratorPrototype, ITERATOR$2, returnThis);
        }
      }
      // Set @@toStringTag to native iterators
      setToStringTag$1(CurrentIteratorPrototype, TO_STRING_TAG, true);
    }
  }

  // fix Array.prototype.{ values, @@iterator }.name in V8 / FF
  if (PROPER_FUNCTION_NAME && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    if (CONFIGURABLE_FUNCTION_NAME) {
      createNonEnumerableProperty$3(IterablePrototype, 'name', VALUES);
    } else {
      INCORRECT_VALUES_NAME = true;
      defaultIterator = function values() { return call$3(nativeIterator, this); };
    }
  }

  // export additional methods
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        defineBuiltIn$3(IterablePrototype, KEY, methods[KEY]);
      }
    } else $$j({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
  }

  // define iterator
  if (IterablePrototype[ITERATOR$2] !== defaultIterator) {
    defineBuiltIn$3(IterablePrototype, ITERATOR$2, defaultIterator, { name: DEFAULT });
  }
  Iterators$1[NAME] = defaultIterator;

  return methods;
};

// `CreateIterResultObject` abstract operation
// https://tc39.es/ecma262/#sec-createiterresultobject
var createIterResultObject$3 = function (value, done) {
  return { value: value, done: done };
};

var toIndexedObject$3 = toIndexedObject$8;
var addToUnscopables$2 = addToUnscopables$4;
var Iterators = iterators;
var InternalStateModule$3 = internalState;
var defineProperty$4 = objectDefineProperty.f;
var defineIterator$2 = iteratorDefine;
var createIterResultObject$2 = createIterResultObject$3;
var DESCRIPTORS$4 = descriptors;

var ARRAY_ITERATOR = 'Array Iterator';
var setInternalState$3 = InternalStateModule$3.set;
var getInternalState$1 = InternalStateModule$3.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.es/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.es/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.es/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.es/ecma262/#sec-createarrayiterator
var es_array_iterator = defineIterator$2(Array, 'Array', function (iterated, kind) {
  setInternalState$3(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject$3(iterated), // target
    index: 0,                          // next index
    kind: kind                         // kind
  });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState$1(this);
  var target = state.target;
  var kind = state.kind;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = undefined;
    return createIterResultObject$2(undefined, true);
  }
  if (kind == 'keys') return createIterResultObject$2(index, false);
  if (kind == 'values') return createIterResultObject$2(target[index], false);
  return createIterResultObject$2([index, target[index]], false);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.es/ecma262/#sec-createunmappedargumentsobject
// https://tc39.es/ecma262/#sec-createmappedargumentsobject
var values = Iterators.Arguments = Iterators.Array;

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables$2('keys');
addToUnscopables$2('values');
addToUnscopables$2('entries');

// V8 ~ Chrome 45- bug
if (DESCRIPTORS$4 && values.name !== 'values') try {
  defineProperty$4(values, 'name', { value: 'values' });
} catch (error) { /* empty */ }

var internalMetadata = {exports: {}};

var objectGetOwnPropertyNamesExternal = {};

var toPropertyKey = toPropertyKey$3;
var definePropertyModule = objectDefineProperty;
var createPropertyDescriptor = createPropertyDescriptor$4;

var createProperty$4 = function (object, key, value) {
  var propertyKey = toPropertyKey(key);
  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
  else object[propertyKey] = value;
};

var toAbsoluteIndex$2 = toAbsoluteIndex$4;
var lengthOfArrayLike$6 = lengthOfArrayLike$a;
var createProperty$3 = createProperty$4;

var $Array$1 = Array;
var max$2 = Math.max;

var arraySliceSimple = function (O, start, end) {
  var length = lengthOfArrayLike$6(O);
  var k = toAbsoluteIndex$2(start, length);
  var fin = toAbsoluteIndex$2(end === undefined ? length : end, length);
  var result = $Array$1(max$2(fin - k, 0));
  for (var n = 0; k < fin; k++, n++) createProperty$3(result, n, O[k]);
  result.length = n;
  return result;
};

/* eslint-disable es/no-object-getownpropertynames -- safe */

var classof$2 = classofRaw$2;
var toIndexedObject$2 = toIndexedObject$8;
var $getOwnPropertyNames = objectGetOwnPropertyNames.f;
var arraySlice = arraySliceSimple;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return $getOwnPropertyNames(it);
  } catch (error) {
    return arraySlice(windowNames);
  }
};

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
objectGetOwnPropertyNamesExternal.f = function getOwnPropertyNames(it) {
  return windowNames && classof$2(it) == 'Window'
    ? getWindowNames(it)
    : $getOwnPropertyNames(toIndexedObject$2(it));
};

// FF26- bug: ArrayBuffers are non-extensible, but Object.isExtensible does not report it
var fails$b = fails$w;

var arrayBufferNonExtensible = fails$b(function () {
  if (typeof ArrayBuffer == 'function') {
    var buffer = new ArrayBuffer(8);
    // eslint-disable-next-line es/no-object-isextensible, es/no-object-defineproperty -- safe
    if (Object.isExtensible(buffer)) Object.defineProperty(buffer, 'a', { value: 8 });
  }
});

var fails$a = fails$w;
var isObject$7 = isObject$j;
var classof$1 = classofRaw$2;
var ARRAY_BUFFER_NON_EXTENSIBLE = arrayBufferNonExtensible;

// eslint-disable-next-line es/no-object-isextensible -- safe
var $isExtensible = Object.isExtensible;
var FAILS_ON_PRIMITIVES$2 = fails$a(function () { $isExtensible(1); });

// `Object.isExtensible` method
// https://tc39.es/ecma262/#sec-object.isextensible
var objectIsExtensible = (FAILS_ON_PRIMITIVES$2 || ARRAY_BUFFER_NON_EXTENSIBLE) ? function isExtensible(it) {
  if (!isObject$7(it)) return false;
  if (ARRAY_BUFFER_NON_EXTENSIBLE && classof$1(it) == 'ArrayBuffer') return false;
  return $isExtensible ? $isExtensible(it) : true;
} : $isExtensible;

var fails$9 = fails$w;

var freezing = !fails$9(function () {
  // eslint-disable-next-line es/no-object-isextensible, es/no-object-preventextensions -- required for testing
  return Object.isExtensible(Object.preventExtensions({}));
});

var $$i = _export;
var uncurryThis$c = functionUncurryThis;
var hiddenKeys = hiddenKeys$5;
var isObject$6 = isObject$j;
var hasOwn$1 = hasOwnProperty_1;
var defineProperty$3 = objectDefineProperty.f;
var getOwnPropertyNamesModule = objectGetOwnPropertyNames;
var getOwnPropertyNamesExternalModule = objectGetOwnPropertyNamesExternal;
var isExtensible$1 = objectIsExtensible;
var uid = uid$3;
var FREEZING = freezing;

var REQUIRED = false;
var METADATA = uid('meta');
var id$1 = 0;

var setMetadata = function (it) {
  defineProperty$3(it, METADATA, { value: {
    objectID: 'O' + id$1++, // object ID
    weakData: {}          // weak collections IDs
  } });
};

var fastKey$1 = function (it, create) {
  // return a primitive with prefix
  if (!isObject$6(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!hasOwn$1(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible$1(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMetadata(it);
  // return object ID
  } return it[METADATA].objectID;
};

var getWeakData$1 = function (it, create) {
  if (!hasOwn$1(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible$1(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMetadata(it);
  // return the store of weak collections IDs
  } return it[METADATA].weakData;
};

// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZING && REQUIRED && isExtensible$1(it) && !hasOwn$1(it, METADATA)) setMetadata(it);
  return it;
};

var enable = function () {
  meta.enable = function () { /* empty */ };
  REQUIRED = true;
  var getOwnPropertyNames = getOwnPropertyNamesModule.f;
  var splice = uncurryThis$c([].splice);
  var test = {};
  test[METADATA] = 1;

  // prevent exposing of metadata key
  if (getOwnPropertyNames(test).length) {
    getOwnPropertyNamesModule.f = function (it) {
      var result = getOwnPropertyNames(it);
      for (var i = 0, length = result.length; i < length; i++) {
        if (result[i] === METADATA) {
          splice(result, i, 1);
          break;
        }
      } return result;
    };

    $$i({ target: 'Object', stat: true, forced: true }, {
      getOwnPropertyNames: getOwnPropertyNamesExternalModule.f
    });
  }
};

var meta = internalMetadata.exports = {
  enable: enable,
  fastKey: fastKey$1,
  getWeakData: getWeakData$1,
  onFreeze: onFreeze
};

hiddenKeys[METADATA] = true;

var $$h = _export;
var global$6 = global$t;
var uncurryThis$b = functionUncurryThis;
var isForced = isForced_1;
var defineBuiltIn$2 = defineBuiltIn$c;
var InternalMetadataModule$1 = internalMetadata.exports;
var iterate$3 = iterate$6;
var anInstance$2 = anInstance$4;
var isCallable$2 = isCallable$o;
var isNullOrUndefined$3 = isNullOrUndefined$8;
var isObject$5 = isObject$j;
var fails$8 = fails$w;
var checkCorrectnessOfIteration = checkCorrectnessOfIteration$2;
var setToStringTag = setToStringTag$4;
var inheritIfRequired = inheritIfRequired$3;

var collection$3 = function (CONSTRUCTOR_NAME, wrapper, common) {
  var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;
  var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;
  var ADDER = IS_MAP ? 'set' : 'add';
  var NativeConstructor = global$6[CONSTRUCTOR_NAME];
  var NativePrototype = NativeConstructor && NativeConstructor.prototype;
  var Constructor = NativeConstructor;
  var exported = {};

  var fixMethod = function (KEY) {
    var uncurriedNativeMethod = uncurryThis$b(NativePrototype[KEY]);
    defineBuiltIn$2(NativePrototype, KEY,
      KEY == 'add' ? function add(value) {
        uncurriedNativeMethod(this, value === 0 ? 0 : value);
        return this;
      } : KEY == 'delete' ? function (key) {
        return IS_WEAK && !isObject$5(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
      } : KEY == 'get' ? function get(key) {
        return IS_WEAK && !isObject$5(key) ? undefined : uncurriedNativeMethod(this, key === 0 ? 0 : key);
      } : KEY == 'has' ? function has(key) {
        return IS_WEAK && !isObject$5(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
      } : function set(key, value) {
        uncurriedNativeMethod(this, key === 0 ? 0 : key, value);
        return this;
      }
    );
  };

  var REPLACE = isForced(
    CONSTRUCTOR_NAME,
    !isCallable$2(NativeConstructor) || !(IS_WEAK || NativePrototype.forEach && !fails$8(function () {
      new NativeConstructor().entries().next();
    }))
  );

  if (REPLACE) {
    // create collection constructor
    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);
    InternalMetadataModule$1.enable();
  } else if (isForced(CONSTRUCTOR_NAME, true)) {
    var instance = new Constructor();
    // early implementations not supports chaining
    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
    // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false
    var THROWS_ON_PRIMITIVES = fails$8(function () { instance.has(1); });
    // most early implementations doesn't supports iterables, most modern - not close it correctly
    // eslint-disable-next-line no-new -- required for testing
    var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (iterable) { new NativeConstructor(iterable); });
    // for early implementations -0 and +0 not the same
    var BUGGY_ZERO = !IS_WEAK && fails$8(function () {
      // V8 ~ Chromium 42- fails only with 5+ elements
      var $instance = new NativeConstructor();
      var index = 5;
      while (index--) $instance[ADDER](index, index);
      return !$instance.has(-0);
    });

    if (!ACCEPT_ITERABLES) {
      Constructor = wrapper(function (dummy, iterable) {
        anInstance$2(dummy, NativePrototype);
        var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);
        if (!isNullOrUndefined$3(iterable)) iterate$3(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
        return that;
      });
      Constructor.prototype = NativePrototype;
      NativePrototype.constructor = Constructor;
    }

    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
      fixMethod('delete');
      fixMethod('has');
      IS_MAP && fixMethod('get');
    }

    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);

    // weak collections should not contains .clear method
    if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;
  }

  exported[CONSTRUCTOR_NAME] = Constructor;
  $$h({ global: true, constructor: true, forced: Constructor != NativeConstructor }, exported);

  setToStringTag(Constructor, CONSTRUCTOR_NAME);

  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);

  return Constructor;
};

var defineBuiltIn$1 = defineBuiltIn$c;

var defineBuiltIns$3 = function (target, src, options) {
  for (var key in src) defineBuiltIn$1(target, key, src[key], options);
  return target;
};

var defineProperty$2 = objectDefineProperty.f;
var create = objectCreate;
var defineBuiltIns$2 = defineBuiltIns$3;
var bind$1 = functionBindContext;
var anInstance$1 = anInstance$4;
var isNullOrUndefined$2 = isNullOrUndefined$8;
var iterate$2 = iterate$6;
var defineIterator$1 = iteratorDefine;
var createIterResultObject$1 = createIterResultObject$3;
var setSpecies = setSpecies$3;
var DESCRIPTORS$3 = descriptors;
var fastKey = internalMetadata.exports.fastKey;
var InternalStateModule$2 = internalState;

var setInternalState$2 = InternalStateModule$2.set;
var internalStateGetterFor$1 = InternalStateModule$2.getterFor;

var collectionStrong$2 = {
  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
    var Constructor = wrapper(function (that, iterable) {
      anInstance$1(that, Prototype);
      setInternalState$2(that, {
        type: CONSTRUCTOR_NAME,
        index: create(null),
        first: undefined,
        last: undefined,
        size: 0
      });
      if (!DESCRIPTORS$3) that.size = 0;
      if (!isNullOrUndefined$2(iterable)) iterate$2(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
    });

    var Prototype = Constructor.prototype;

    var getInternalState = internalStateGetterFor$1(CONSTRUCTOR_NAME);

    var define = function (that, key, value) {
      var state = getInternalState(that);
      var entry = getEntry(that, key);
      var previous, index;
      // change existing entry
      if (entry) {
        entry.value = value;
      // create new entry
      } else {
        state.last = entry = {
          index: index = fastKey(key, true),
          key: key,
          value: value,
          previous: previous = state.last,
          next: undefined,
          removed: false
        };
        if (!state.first) state.first = entry;
        if (previous) previous.next = entry;
        if (DESCRIPTORS$3) state.size++;
        else that.size++;
        // add to index
        if (index !== 'F') state.index[index] = entry;
      } return that;
    };

    var getEntry = function (that, key) {
      var state = getInternalState(that);
      // fast case
      var index = fastKey(key);
      var entry;
      if (index !== 'F') return state.index[index];
      // frozen object case
      for (entry = state.first; entry; entry = entry.next) {
        if (entry.key == key) return entry;
      }
    };

    defineBuiltIns$2(Prototype, {
      // `{ Map, Set }.prototype.clear()` methods
      // https://tc39.es/ecma262/#sec-map.prototype.clear
      // https://tc39.es/ecma262/#sec-set.prototype.clear
      clear: function clear() {
        var that = this;
        var state = getInternalState(that);
        var data = state.index;
        var entry = state.first;
        while (entry) {
          entry.removed = true;
          if (entry.previous) entry.previous = entry.previous.next = undefined;
          delete data[entry.index];
          entry = entry.next;
        }
        state.first = state.last = undefined;
        if (DESCRIPTORS$3) state.size = 0;
        else that.size = 0;
      },
      // `{ Map, Set }.prototype.delete(key)` methods
      // https://tc39.es/ecma262/#sec-map.prototype.delete
      // https://tc39.es/ecma262/#sec-set.prototype.delete
      'delete': function (key) {
        var that = this;
        var state = getInternalState(that);
        var entry = getEntry(that, key);
        if (entry) {
          var next = entry.next;
          var prev = entry.previous;
          delete state.index[entry.index];
          entry.removed = true;
          if (prev) prev.next = next;
          if (next) next.previous = prev;
          if (state.first == entry) state.first = next;
          if (state.last == entry) state.last = prev;
          if (DESCRIPTORS$3) state.size--;
          else that.size--;
        } return !!entry;
      },
      // `{ Map, Set }.prototype.forEach(callbackfn, thisArg = undefined)` methods
      // https://tc39.es/ecma262/#sec-map.prototype.foreach
      // https://tc39.es/ecma262/#sec-set.prototype.foreach
      forEach: function forEach(callbackfn /* , that = undefined */) {
        var state = getInternalState(this);
        var boundFunction = bind$1(callbackfn, arguments.length > 1 ? arguments[1] : undefined);
        var entry;
        while (entry = entry ? entry.next : state.first) {
          boundFunction(entry.value, entry.key, this);
          // revert to the last existing entry
          while (entry && entry.removed) entry = entry.previous;
        }
      },
      // `{ Map, Set}.prototype.has(key)` methods
      // https://tc39.es/ecma262/#sec-map.prototype.has
      // https://tc39.es/ecma262/#sec-set.prototype.has
      has: function has(key) {
        return !!getEntry(this, key);
      }
    });

    defineBuiltIns$2(Prototype, IS_MAP ? {
      // `Map.prototype.get(key)` method
      // https://tc39.es/ecma262/#sec-map.prototype.get
      get: function get(key) {
        var entry = getEntry(this, key);
        return entry && entry.value;
      },
      // `Map.prototype.set(key, value)` method
      // https://tc39.es/ecma262/#sec-map.prototype.set
      set: function set(key, value) {
        return define(this, key === 0 ? 0 : key, value);
      }
    } : {
      // `Set.prototype.add(value)` method
      // https://tc39.es/ecma262/#sec-set.prototype.add
      add: function add(value) {
        return define(this, value = value === 0 ? 0 : value, value);
      }
    });
    if (DESCRIPTORS$3) defineProperty$2(Prototype, 'size', {
      get: function () {
        return getInternalState(this).size;
      }
    });
    return Constructor;
  },
  setStrong: function (Constructor, CONSTRUCTOR_NAME, IS_MAP) {
    var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';
    var getInternalCollectionState = internalStateGetterFor$1(CONSTRUCTOR_NAME);
    var getInternalIteratorState = internalStateGetterFor$1(ITERATOR_NAME);
    // `{ Map, Set }.prototype.{ keys, values, entries, @@iterator }()` methods
    // https://tc39.es/ecma262/#sec-map.prototype.entries
    // https://tc39.es/ecma262/#sec-map.prototype.keys
    // https://tc39.es/ecma262/#sec-map.prototype.values
    // https://tc39.es/ecma262/#sec-map.prototype-@@iterator
    // https://tc39.es/ecma262/#sec-set.prototype.entries
    // https://tc39.es/ecma262/#sec-set.prototype.keys
    // https://tc39.es/ecma262/#sec-set.prototype.values
    // https://tc39.es/ecma262/#sec-set.prototype-@@iterator
    defineIterator$1(Constructor, CONSTRUCTOR_NAME, function (iterated, kind) {
      setInternalState$2(this, {
        type: ITERATOR_NAME,
        target: iterated,
        state: getInternalCollectionState(iterated),
        kind: kind,
        last: undefined
      });
    }, function () {
      var state = getInternalIteratorState(this);
      var kind = state.kind;
      var entry = state.last;
      // revert to the last existing entry
      while (entry && entry.removed) entry = entry.previous;
      // get next entry
      if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {
        // or finish the iteration
        state.target = undefined;
        return createIterResultObject$1(undefined, true);
      }
      // return step by kind
      if (kind == 'keys') return createIterResultObject$1(entry.key, false);
      if (kind == 'values') return createIterResultObject$1(entry.value, false);
      return createIterResultObject$1([entry.key, entry.value], false);
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

    // `{ Map, Set }.prototype[@@species]` accessors
    // https://tc39.es/ecma262/#sec-get-map-@@species
    // https://tc39.es/ecma262/#sec-get-set-@@species
    setSpecies(CONSTRUCTOR_NAME);
  }
};

var collection$2 = collection$3;
var collectionStrong$1 = collectionStrong$2;

// `Map` constructor
// https://tc39.es/ecma262/#sec-map-objects
collection$2('Map', function (init) {
  return function Map() { return init(this, arguments.length ? arguments[0] : undefined); };
}, collectionStrong$1);

var uncurryThis$a = functionUncurryThis;
var toIntegerOrInfinity$1 = toIntegerOrInfinity$4;
var toString$5 = toString$a;
var requireObjectCoercible$3 = requireObjectCoercible$8;

var charAt$3 = uncurryThis$a(''.charAt);
var charCodeAt = uncurryThis$a(''.charCodeAt);
var stringSlice$3 = uncurryThis$a(''.slice);

var createMethod$2 = function (CONVERT_TO_STRING) {
  return function ($this, pos) {
    var S = toString$5(requireObjectCoercible$3($this));
    var position = toIntegerOrInfinity$1(pos);
    var size = S.length;
    var first, second;
    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
    first = charCodeAt(S, position);
    return first < 0xD800 || first > 0xDBFF || position + 1 === size
      || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF
        ? CONVERT_TO_STRING
          ? charAt$3(S, position)
          : first
        : CONVERT_TO_STRING
          ? stringSlice$3(S, position, position + 2)
          : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
  };
};

var stringMultibyte = {
  // `String.prototype.codePointAt` method
  // https://tc39.es/ecma262/#sec-string.prototype.codepointat
  codeAt: createMethod$2(false),
  // `String.prototype.at` method
  // https://github.com/mathiasbynens/String.prototype.at
  charAt: createMethod$2(true)
};

var charAt$2 = stringMultibyte.charAt;
var toString$4 = toString$a;
var InternalStateModule$1 = internalState;
var defineIterator = iteratorDefine;
var createIterResultObject = createIterResultObject$3;

var STRING_ITERATOR = 'String Iterator';
var setInternalState$1 = InternalStateModule$1.set;
var getInternalState = InternalStateModule$1.getterFor(STRING_ITERATOR);

// `String.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-string.prototype-@@iterator
defineIterator(String, 'String', function (iterated) {
  setInternalState$1(this, {
    type: STRING_ITERATOR,
    string: toString$4(iterated),
    index: 0
  });
// `%StringIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next
}, function next() {
  var state = getInternalState(this);
  var string = state.string;
  var index = state.index;
  var point;
  if (index >= string.length) return createIterResultObject(undefined, true);
  point = charAt$2(string, index);
  state.index += point.length;
  return createIterResultObject(point, false);
});

// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
var domIterables = {
  CSSRuleList: 0,
  CSSStyleDeclaration: 0,
  CSSValueList: 0,
  ClientRectList: 0,
  DOMRectList: 0,
  DOMStringList: 0,
  DOMTokenList: 1,
  DataTransferItemList: 0,
  FileList: 0,
  HTMLAllCollection: 0,
  HTMLCollection: 0,
  HTMLFormElement: 0,
  HTMLSelectElement: 0,
  MediaList: 0,
  MimeTypeArray: 0,
  NamedNodeMap: 0,
  NodeList: 1,
  PaintRequestList: 0,
  Plugin: 0,
  PluginArray: 0,
  SVGLengthList: 0,
  SVGNumberList: 0,
  SVGPathSegList: 0,
  SVGPointList: 0,
  SVGStringList: 0,
  SVGTransformList: 0,
  SourceBufferList: 0,
  StyleSheetList: 0,
  TextTrackCueList: 0,
  TextTrackList: 0,
  TouchList: 0
};

// in old WebKit versions, `element.classList` is not an instance of global `DOMTokenList`
var documentCreateElement = documentCreateElement$2;

var classList = documentCreateElement('span').classList;
var DOMTokenListPrototype$2 = classList && classList.constructor && classList.constructor.prototype;

var domTokenListPrototype = DOMTokenListPrototype$2 === Object.prototype ? undefined : DOMTokenListPrototype$2;

var global$5 = global$t;
var DOMIterables$1 = domIterables;
var DOMTokenListPrototype$1 = domTokenListPrototype;
var ArrayIteratorMethods = es_array_iterator;
var createNonEnumerableProperty$2 = createNonEnumerableProperty$7;
var wellKnownSymbol$4 = wellKnownSymbol$n;

var ITERATOR$1 = wellKnownSymbol$4('iterator');
var TO_STRING_TAG = wellKnownSymbol$4('toStringTag');
var ArrayValues = ArrayIteratorMethods.values;

var handlePrototype$1 = function (CollectionPrototype, COLLECTION_NAME) {
  if (CollectionPrototype) {
    // some Chrome versions have non-configurable methods on DOMTokenList
    if (CollectionPrototype[ITERATOR$1] !== ArrayValues) try {
      createNonEnumerableProperty$2(CollectionPrototype, ITERATOR$1, ArrayValues);
    } catch (error) {
      CollectionPrototype[ITERATOR$1] = ArrayValues;
    }
    if (!CollectionPrototype[TO_STRING_TAG]) {
      createNonEnumerableProperty$2(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
    }
    if (DOMIterables$1[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
      // some Chrome versions have non-configurable methods on DOMTokenList
      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
        createNonEnumerableProperty$2(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
      } catch (error) {
        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
      }
    }
  }
};

for (var COLLECTION_NAME$1 in DOMIterables$1) {
  handlePrototype$1(global$5[COLLECTION_NAME$1] && global$5[COLLECTION_NAME$1].prototype, COLLECTION_NAME$1);
}

handlePrototype$1(DOMTokenListPrototype$1, 'DOMTokenList');

var uncurryThis$9 = functionUncurryThis;
var defineBuiltIns$1 = defineBuiltIns$3;
var getWeakData = internalMetadata.exports.getWeakData;
var anInstance = anInstance$4;
var anObject$2 = anObject$f;
var isNullOrUndefined$1 = isNullOrUndefined$8;
var isObject$4 = isObject$j;
var iterate$1 = iterate$6;
var ArrayIterationModule = arrayIteration;
var hasOwn = hasOwnProperty_1;
var InternalStateModule = internalState;

var setInternalState = InternalStateModule.set;
var internalStateGetterFor = InternalStateModule.getterFor;
var find = ArrayIterationModule.find;
var findIndex = ArrayIterationModule.findIndex;
var splice = uncurryThis$9([].splice);
var id = 0;

// fallback for uncaught frozen keys
var uncaughtFrozenStore = function (store) {
  return store.frozen || (store.frozen = new UncaughtFrozenStore());
};

var UncaughtFrozenStore = function () {
  this.entries = [];
};

var findUncaughtFrozen = function (store, key) {
  return find(store.entries, function (it) {
    return it[0] === key;
  });
};

UncaughtFrozenStore.prototype = {
  get: function (key) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) return entry[1];
  },
  has: function (key) {
    return !!findUncaughtFrozen(this, key);
  },
  set: function (key, value) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) entry[1] = value;
    else this.entries.push([key, value]);
  },
  'delete': function (key) {
    var index = findIndex(this.entries, function (it) {
      return it[0] === key;
    });
    if (~index) splice(this.entries, index, 1);
    return !!~index;
  }
};

var collectionWeak$1 = {
  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
    var Constructor = wrapper(function (that, iterable) {
      anInstance(that, Prototype);
      setInternalState(that, {
        type: CONSTRUCTOR_NAME,
        id: id++,
        frozen: undefined
      });
      if (!isNullOrUndefined$1(iterable)) iterate$1(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
    });

    var Prototype = Constructor.prototype;

    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);

    var define = function (that, key, value) {
      var state = getInternalState(that);
      var data = getWeakData(anObject$2(key), true);
      if (data === true) uncaughtFrozenStore(state).set(key, value);
      else data[state.id] = value;
      return that;
    };

    defineBuiltIns$1(Prototype, {
      // `{ WeakMap, WeakSet }.prototype.delete(key)` methods
      // https://tc39.es/ecma262/#sec-weakmap.prototype.delete
      // https://tc39.es/ecma262/#sec-weakset.prototype.delete
      'delete': function (key) {
        var state = getInternalState(this);
        if (!isObject$4(key)) return false;
        var data = getWeakData(key);
        if (data === true) return uncaughtFrozenStore(state)['delete'](key);
        return data && hasOwn(data, state.id) && delete data[state.id];
      },
      // `{ WeakMap, WeakSet }.prototype.has(key)` methods
      // https://tc39.es/ecma262/#sec-weakmap.prototype.has
      // https://tc39.es/ecma262/#sec-weakset.prototype.has
      has: function has(key) {
        var state = getInternalState(this);
        if (!isObject$4(key)) return false;
        var data = getWeakData(key);
        if (data === true) return uncaughtFrozenStore(state).has(key);
        return data && hasOwn(data, state.id);
      }
    });

    defineBuiltIns$1(Prototype, IS_MAP ? {
      // `WeakMap.prototype.get(key)` method
      // https://tc39.es/ecma262/#sec-weakmap.prototype.get
      get: function get(key) {
        var state = getInternalState(this);
        if (isObject$4(key)) {
          var data = getWeakData(key);
          if (data === true) return uncaughtFrozenStore(state).get(key);
          return data ? data[state.id] : undefined;
        }
      },
      // `WeakMap.prototype.set(key, value)` method
      // https://tc39.es/ecma262/#sec-weakmap.prototype.set
      set: function set(key, value) {
        return define(this, key, value);
      }
    } : {
      // `WeakSet.prototype.add(value)` method
      // https://tc39.es/ecma262/#sec-weakset.prototype.add
      add: function add(value) {
        return define(this, value, true);
      }
    });

    return Constructor;
  }
};

var global$4 = global$t;
var uncurryThis$8 = functionUncurryThis;
var defineBuiltIns = defineBuiltIns$3;
var InternalMetadataModule = internalMetadata.exports;
var collection$1 = collection$3;
var collectionWeak = collectionWeak$1;
var isObject$3 = isObject$j;
var isExtensible = objectIsExtensible;
var enforceInternalState = internalState.enforce;
var NATIVE_WEAK_MAP = weakMapBasicDetection;

var IS_IE11 = !global$4.ActiveXObject && 'ActiveXObject' in global$4;
var InternalWeakMap;

var wrapper = function (init) {
  return function WeakMap() {
    return init(this, arguments.length ? arguments[0] : undefined);
  };
};

// `WeakMap` constructor
// https://tc39.es/ecma262/#sec-weakmap-constructor
var $WeakMap = collection$1('WeakMap', wrapper, collectionWeak);

// IE11 WeakMap frozen keys fix
// We can't use feature detection because it crash some old IE builds
// https://github.com/zloirock/core-js/issues/485
if (NATIVE_WEAK_MAP && IS_IE11) {
  InternalWeakMap = collectionWeak.getConstructor(wrapper, 'WeakMap', true);
  InternalMetadataModule.enable();
  var WeakMapPrototype = $WeakMap.prototype;
  var nativeDelete = uncurryThis$8(WeakMapPrototype['delete']);
  var nativeHas = uncurryThis$8(WeakMapPrototype.has);
  var nativeGet = uncurryThis$8(WeakMapPrototype.get);
  var nativeSet = uncurryThis$8(WeakMapPrototype.set);
  defineBuiltIns(WeakMapPrototype, {
    'delete': function (key) {
      if (isObject$3(key) && !isExtensible(key)) {
        var state = enforceInternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        return nativeDelete(this, key) || state.frozen['delete'](key);
      } return nativeDelete(this, key);
    },
    has: function has(key) {
      if (isObject$3(key) && !isExtensible(key)) {
        var state = enforceInternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        return nativeHas(this, key) || state.frozen.has(key);
      } return nativeHas(this, key);
    },
    get: function get(key) {
      if (isObject$3(key) && !isExtensible(key)) {
        var state = enforceInternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        return nativeHas(this, key) ? nativeGet(this, key) : state.frozen.get(key);
      } return nativeGet(this, key);
    },
    set: function set(key, value) {
      if (isObject$3(key) && !isExtensible(key)) {
        var state = enforceInternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        nativeHas(this, key) ? nativeSet(this, key, value) : state.frozen.set(key, value);
      } else nativeSet(this, key, value);
      return this;
    }
  });
}

var $$g = _export;
var fails$7 = fails$w;
var toObject$7 = toObject$b;
var nativeGetPrototypeOf = objectGetPrototypeOf;
var CORRECT_PROTOTYPE_GETTER = correctPrototypeGetter;

var FAILS_ON_PRIMITIVES$1 = fails$7(function () { nativeGetPrototypeOf(1); });

// `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof
$$g({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES$1, sham: !CORRECT_PROTOTYPE_GETTER }, {
  getPrototypeOf: function getPrototypeOf(it) {
    return nativeGetPrototypeOf(toObject$7(it));
  }
});

var hasOwnProperty = function () {
  /* eslint-disable-next-line @typescript-eslint/unbound-method */
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  return function (obj, key) {
    return hasOwnProperty.call(obj, key);
  };
}();
var isNonNullObject = function isNonNullObject(arg) {
  return _typeof(arg) === 'object' && arg !== null;
};

// eslint-disable-next-line @typescript-eslint/no-explicit-any
var isFunction = function isFunction(arg) {
  return typeof arg === 'function';
};
var delay = function delay(timeout) {
  return new Promise(function (resolve) {
    return setTimeout(resolve, timeout);
  });
};
// eslint-disable-next-line @typescript-eslint/no-explicit-any
var memoize = function memoize(func) {
  var resolver = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {
    return arguments.length <= 0 ? undefined : arguments[0];
  };
  var map = new Map();
  var weakMap = new WeakMap();
  return function () {
    var _store$get;
    var id = resolver.apply(void 0, arguments);
    var store = isNonNullObject(id) ? weakMap : map;
    var value = (_store$get = store.get(id)) !== null && _store$get !== void 0 ? _store$get : func.apply(void 0, arguments);
    if (!store.has(id)) {
      store.set(id, value);
    }
    return value;
  };
};

var compareVersion = function compareVersion(leftSemVer, rightSemVer) {
  if (!leftSemVer || !rightSemVer) {
    return Number.NaN;
  }
  var leftVersions = leftSemVer.split('.').map(function (version) {
    return +version;
  });
  var rightVersions = rightSemVer.split('.').map(function (version) {
    return +version;
  });
  for (var i = 0; i < Math.min(leftVersions.length, rightVersions.length); i += 1) {
    if (Number.isNaN(leftVersions[i]) || Number.isNaN(rightVersions[i])) {
      return Number.NaN;
    }
    if (leftVersions[i] !== rightVersions[i]) {
      return leftVersions[i] - rightVersions[i];
    }
  }
  return 0;
};
var getPlatformVersion = memoize(function (platform) {
  var _RegExp$exec$, _RegExp$exec;
  return (_RegExp$exec$ = (_RegExp$exec = new RegExp("(?:".concat(platform, ")\\/([\\d+.]+)")).exec(typeof navigator === 'undefined' ? '' : navigator.userAgent)) === null || _RegExp$exec === void 0 ? void 0 : _RegExp$exec[1]) !== null && _RegExp$exec$ !== void 0 ? _RegExp$exec$ : '';
});
var compareYodaVersion = function compareYodaVersion(version) {
  return compareVersion(getPlatformVersion('Yoda'), version);
};
var compareKwaiAppVersion = function compareKwaiAppVersion(version) {
  return compareVersion(getPlatformVersion('Kwai|ksNebula'), version);
};

var system = function () {
  if (typeof navigator === 'undefined') {
    return 'unknown';
  }
  var _navigator = navigator,
    userAgent = _navigator.userAgent,
    maxTouchPoints = _navigator.maxTouchPoints;
  if (/android/i.test(userAgent)) {
    return 'Android';
  }
  if (/iPhone|iPad|iPod/.test(userAgent) || userAgent.includes('Mac') && maxTouchPoints > 1) {
    return 'iOS';
  }
  return 'unknown';
}();
var isAndroid = system === 'Android';
var isIOS = system === 'iOS';
var isYoda = function isYoda() {
  var _window$__yodaBridge_;
  return typeof window !== 'undefined' && typeof ((_window$__yodaBridge_ = window.__yodaBridge__) === null || _window$__yodaBridge_ === void 0 ? void 0 : _window$__yodaBridge_.invoke) === 'function';
};
var isApp = function isApp(app) {
  return !!getPlatformVersion(app);
};
var isKwaiApp = isApp('Kwai|ksNebula');

var $$f = _export;

// `Number.MAX_SAFE_INTEGER` constant
// https://tc39.es/ecma262/#sec-number.max_safe_integer
$$f({ target: 'Number', stat: true, nonConfigurable: true, nonWritable: true }, {
  MAX_SAFE_INTEGER: 0x1FFFFFFFFFFFFF
});

var $$e = _export;
var isArray$2 = isArray$4;
var isConstructor = isConstructor$3;
var isObject$2 = isObject$j;
var toAbsoluteIndex$1 = toAbsoluteIndex$4;
var lengthOfArrayLike$5 = lengthOfArrayLike$a;
var toIndexedObject$1 = toIndexedObject$8;
var createProperty$2 = createProperty$4;
var wellKnownSymbol$3 = wellKnownSymbol$n;
var arrayMethodHasSpeciesSupport$1 = arrayMethodHasSpeciesSupport$3;
var nativeSlice = arraySlice$3;

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport$1('slice');

var SPECIES$1 = wellKnownSymbol$3('species');
var $Array = Array;
var max$1 = Math.max;

// `Array.prototype.slice` method
// https://tc39.es/ecma262/#sec-array.prototype.slice
// fallback for not array-like ES3 strings and DOM objects
$$e({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
  slice: function slice(start, end) {
    var O = toIndexedObject$1(this);
    var length = lengthOfArrayLike$5(O);
    var k = toAbsoluteIndex$1(start, length);
    var fin = toAbsoluteIndex$1(end === undefined ? length : end, length);
    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible
    var Constructor, result, n;
    if (isArray$2(O)) {
      Constructor = O.constructor;
      // cross-realm fallback
      if (isConstructor(Constructor) && (Constructor === $Array || isArray$2(Constructor.prototype))) {
        Constructor = undefined;
      } else if (isObject$2(Constructor)) {
        Constructor = Constructor[SPECIES$1];
        if (Constructor === null) Constructor = undefined;
      }
      if (Constructor === $Array || Constructor === undefined) {
        return nativeSlice(O, k, fin);
      }
    }
    result = new (Constructor === undefined ? $Array : Constructor)(max$1(fin - k, 0));
    for (n = 0; k < fin; k++, n++) if (k in O) createProperty$2(result, n, O[k]);
    result.length = n;
    return result;
  }
});

var toObject$6 = toObject$b;
var toAbsoluteIndex = toAbsoluteIndex$4;
var lengthOfArrayLike$4 = lengthOfArrayLike$a;

// `Array.prototype.fill` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.fill
var arrayFill = function fill(value /* , start = 0, end = @length */) {
  var O = toObject$6(this);
  var length = lengthOfArrayLike$4(O);
  var argumentsLength = arguments.length;
  var index = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : undefined, length);
  var end = argumentsLength > 2 ? arguments[2] : undefined;
  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
  while (endPos > index) O[index++] = value;
  return O;
};

var $$d = _export;
var fill = arrayFill;
var addToUnscopables$1 = addToUnscopables$4;

// `Array.prototype.fill` method
// https://tc39.es/ecma262/#sec-array.prototype.fill
$$d({ target: 'Array', proto: true }, {
  fill: fill
});

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables$1('fill');

var $TypeError$2 = TypeError;
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991

var doesNotExceedSafeInteger$2 = function (it) {
  if (it > MAX_SAFE_INTEGER) throw $TypeError$2('Maximum allowed index exceeded');
  return it;
};

var $$c = _export;
var fails$6 = fails$w;
var isArray$1 = isArray$4;
var isObject$1 = isObject$j;
var toObject$5 = toObject$b;
var lengthOfArrayLike$3 = lengthOfArrayLike$a;
var doesNotExceedSafeInteger$1 = doesNotExceedSafeInteger$2;
var createProperty$1 = createProperty$4;
var arraySpeciesCreate$1 = arraySpeciesCreate$3;
var arrayMethodHasSpeciesSupport = arrayMethodHasSpeciesSupport$3;
var wellKnownSymbol$2 = wellKnownSymbol$n;
var V8_VERSION = engineV8Version;

var IS_CONCAT_SPREADABLE = wellKnownSymbol$2('isConcatSpreadable');

// We can't use this feature detection in V8 since it causes
// deoptimization and serious performance degradation
// https://github.com/zloirock/core-js/issues/679
var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails$6(function () {
  var array = [];
  array[IS_CONCAT_SPREADABLE] = false;
  return array.concat()[0] !== array;
});

var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');

var isConcatSpreadable = function (O) {
  if (!isObject$1(O)) return false;
  var spreadable = O[IS_CONCAT_SPREADABLE];
  return spreadable !== undefined ? !!spreadable : isArray$1(O);
};

var FORCED$1 = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;

// `Array.prototype.concat` method
// https://tc39.es/ecma262/#sec-array.prototype.concat
// with adding support of @@isConcatSpreadable and @@species
$$c({ target: 'Array', proto: true, arity: 1, forced: FORCED$1 }, {
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  concat: function concat(arg) {
    var O = toObject$5(this);
    var A = arraySpeciesCreate$1(O, 0);
    var n = 0;
    var i, k, length, len, E;
    for (i = -1, length = arguments.length; i < length; i++) {
      E = i === -1 ? O : arguments[i];
      if (isConcatSpreadable(E)) {
        len = lengthOfArrayLike$3(E);
        doesNotExceedSafeInteger$1(n + len);
        for (k = 0; k < len; k++, n++) if (k in E) createProperty$1(A, n, E[k]);
      } else {
        doesNotExceedSafeInteger$1(n + 1);
        createProperty$1(A, n++, E);
      }
    }
    A.length = n;
    return A;
  }
});

var SafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991;
var overflow = false;
var _callbackId = 1;
var _instanceId = genInstanceId();
/**
 * Ios 客户端目前会将 callbackId 处理为 number
 * 需要尽可能的保证生成的 _instanceId 与其他页面不会重复 & 不会超出 Number.MAX_SAFE_INTEGER
 * 3位随机数 + 9位时间戳 + 4位自增 id
 */
function genInstanceId() {
  var safeIntegerStr = "".concat(SafeInteger);
  // 取 3 位随机数避免同一时刻出现重复 & 避免数字溢出
  var maxRandom = Number(safeIntegerStr.slice(0, 3)) - 100;
  var random = Math.floor(Math.random() * maxRandom);
  // 取 9 位时间戳，保证1周内不会重复
  var date = "".concat(Date.now());
  var dateStr = date.slice(date.length - 9);
  // 剩下的都作为自增 id
  var zero = new Array(safeIntegerStr.length - 12).fill(0).join('');
  return Number("".concat(random).concat(dateStr).concat(zero));
}
function genCallbackId(dicData) {
  var id = genNextId(dicData);
  /*
   * 如果生成的 id 溢出了，从头开始
   * 页面中应该不会有这么多的回调
   */
  if (id >= SafeInteger) {
    overflow = true;
    _callbackId = 1;
    // 重新生成 insId 尽量减少重复的概率
    _instanceId = genInstanceId();
    return genCallbackId();
  }
  return id;
}
function genNextId(dicData) {
  var callbackId = _instanceId + _callbackId++;
  // 溢出后需要判断是否已经存在对应的 id
  while (overflow || dicData && dicData[callbackId]) {
    callbackId = _instanceId + _callbackId++;
  }
  return callbackId;
}
function getUUId(dicData) {
  return genCallbackId(dicData);
}

/**
 * 节流
 * @param fn 对象函数
 * @param wait 节流时间
 */
/**
 * 防抖
 * @param func
 * @param timeout
 * @returns
 */
function debounce(func) {
  var _this = this;
  var timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 300;
  var timer = null;
  return function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    clearTimeout(timer);
    timer = setTimeout(function () {
      func.apply(_this, args);
    }, timeout);
  };
}

var yodaInstance = null;
function setYoda(yoda) {
  yodaInstance = yoda;
}
function getYoda() {
  return yodaInstance;
}

function checkCanUse(_x, _x2) {
  return _checkCanUse.apply(this, arguments);
}
function _checkCanUse() {
  _checkCanUse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(namespace, name) {
    var yoda, checkReuslt;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            yoda = getYoda();
            _context.next = 3;
            return yoda.bridge('tool', 'canIUse', {
              namespace: namespace,
              name: name
            });
          case 3:
            checkReuslt = _context.sent;
            return _context.abrupt("return", checkReuslt.result == '1' && checkReuslt.canUse);
          case 5:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _checkCanUse.apply(this, arguments);
}

var $$b = _export;
var uncurryThis$7 = functionUncurryThis;
var getOwnPropertyDescriptor$1 = objectGetOwnPropertyDescriptor.f;
var toLength$2 = toLength$4;
var toString$3 = toString$a;
var notARegExp$1 = notARegexp;
var requireObjectCoercible$2 = requireObjectCoercible$8;
var correctIsRegExpLogic$1 = correctIsRegexpLogic;

// eslint-disable-next-line es/no-string-prototype-startswith -- safe
var nativeStartsWith = uncurryThis$7(''.startsWith);
var stringSlice$2 = uncurryThis$7(''.slice);
var min$2 = Math.min;

var CORRECT_IS_REGEXP_LOGIC$1 = correctIsRegExpLogic$1('startsWith');
// https://github.com/zloirock/core-js/pull/702
var MDN_POLYFILL_BUG$1 = !CORRECT_IS_REGEXP_LOGIC$1 && !!function () {
  var descriptor = getOwnPropertyDescriptor$1(String.prototype, 'startsWith');
  return descriptor && !descriptor.writable;
}();

// `String.prototype.startsWith` method
// https://tc39.es/ecma262/#sec-string.prototype.startswith
$$b({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG$1 && !CORRECT_IS_REGEXP_LOGIC$1 }, {
  startsWith: function startsWith(searchString /* , position = 0 */) {
    var that = toString$3(requireObjectCoercible$2(this));
    notARegExp$1(searchString);
    var index = toLength$2(min$2(arguments.length > 1 ? arguments[1] : undefined, that.length));
    var search = toString$3(searchString);
    return nativeStartsWith
      ? nativeStartsWith(that, search, index)
      : stringSlice$2(that, index, index + search.length) === search;
  }
});

var markStr$1 = 'too_performance_';
/**
 * 获取内部调用performance传递id
 * @returns id 字符串
 */
function getPerformanceId() {
  return markStr$1 + getUUId();
}
/**
 * 判断是否是performance的id
 * @param idStr 当前掉用id
 * @returns
 */
function isPerformanceId(callbackId) {
  return callbackId.startsWith(markStr$1);
}

// TODO: Remove from `core-js@4` since it's moved to entry points

var uncurryThis$6 = functionUncurryThis;
var defineBuiltIn = defineBuiltIn$c;
var regexpExec$1 = regexpExec$2;
var fails$5 = fails$w;
var wellKnownSymbol$1 = wellKnownSymbol$n;
var createNonEnumerableProperty$1 = createNonEnumerableProperty$7;

var SPECIES = wellKnownSymbol$1('species');
var RegExpPrototype = RegExp.prototype;

var fixRegexpWellKnownSymbolLogic = function (KEY, exec, FORCED, SHAM) {
  var SYMBOL = wellKnownSymbol$1(KEY);

  var DELEGATES_TO_SYMBOL = !fails$5(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails$5(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;

    if (KEY === 'split') {
      // We can't use real regex here since it causes deoptimization
      // and serious performance degradation in V8
      // https://github.com/zloirock/core-js/issues/306
      re = {};
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES] = function () { return re; };
      re.flags = '';
      re[SYMBOL] = /./[SYMBOL];
    }

    re.exec = function () { execCalled = true; return null; };

    re[SYMBOL]('');
    return !execCalled;
  });

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    FORCED
  ) {
    var uncurriedNativeRegExpMethod = uncurryThis$6(/./[SYMBOL]);
    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {
      var uncurriedNativeMethod = uncurryThis$6(nativeMethod);
      var $exec = regexp.exec;
      if ($exec === regexpExec$1 || $exec === RegExpPrototype.exec) {
        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
          // The native String method already delegates to @@method (this
          // polyfilled function), leasing to infinite recursion.
          // We avoid it by directly calling the native @@method method.
          return { done: true, value: uncurriedNativeRegExpMethod(regexp, str, arg2) };
        }
        return { done: true, value: uncurriedNativeMethod(str, regexp, arg2) };
      }
      return { done: false };
    });

    defineBuiltIn(String.prototype, KEY, methods[0]);
    defineBuiltIn(RegExpPrototype, SYMBOL, methods[1]);
  }

  if (SHAM) createNonEnumerableProperty$1(RegExpPrototype[SYMBOL], 'sham', true);
};

var charAt$1 = stringMultibyte.charAt;

// `AdvanceStringIndex` abstract operation
// https://tc39.es/ecma262/#sec-advancestringindex
var advanceStringIndex$1 = function (S, index, unicode) {
  return index + (unicode ? charAt$1(S, index).length : 1);
};

var uncurryThis$5 = functionUncurryThis;
var toObject$4 = toObject$b;

var floor$1 = Math.floor;
var charAt = uncurryThis$5(''.charAt);
var replace = uncurryThis$5(''.replace);
var stringSlice$1 = uncurryThis$5(''.slice);
var SUBSTITUTION_SYMBOLS = /\$([$&'`]|\d{1,2}|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&'`]|\d{1,2})/g;

// `GetSubstitution` abstract operation
// https://tc39.es/ecma262/#sec-getsubstitution
var getSubstitution$1 = function (matched, str, position, captures, namedCaptures, replacement) {
  var tailPos = position + matched.length;
  var m = captures.length;
  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
  if (namedCaptures !== undefined) {
    namedCaptures = toObject$4(namedCaptures);
    symbols = SUBSTITUTION_SYMBOLS;
  }
  return replace(replacement, symbols, function (match, ch) {
    var capture;
    switch (charAt(ch, 0)) {
      case '$': return '$';
      case '&': return matched;
      case '`': return stringSlice$1(str, 0, position);
      case "'": return stringSlice$1(str, tailPos);
      case '<':
        capture = namedCaptures[stringSlice$1(ch, 1, -1)];
        break;
      default: // \d\d?
        var n = +ch;
        if (n === 0) return match;
        if (n > m) {
          var f = floor$1(n / 10);
          if (f === 0) return match;
          if (f <= m) return captures[f - 1] === undefined ? charAt(ch, 1) : captures[f - 1] + charAt(ch, 1);
          return match;
        }
        capture = captures[n - 1];
    }
    return capture === undefined ? '' : capture;
  });
};

var call$2 = functionCall;
var anObject$1 = anObject$f;
var isCallable$1 = isCallable$o;
var classof = classofRaw$2;
var regexpExec = regexpExec$2;

var $TypeError$1 = TypeError;

// `RegExpExec` abstract operation
// https://tc39.es/ecma262/#sec-regexpexec
var regexpExecAbstract = function (R, S) {
  var exec = R.exec;
  if (isCallable$1(exec)) {
    var result = call$2(exec, R, S);
    if (result !== null) anObject$1(result);
    return result;
  }
  if (classof(R) === 'RegExp') return call$2(regexpExec, R, S);
  throw $TypeError$1('RegExp#exec called on incompatible receiver');
};

var apply = functionApply;
var call$1 = functionCall;
var uncurryThis$4 = functionUncurryThis;
var fixRegExpWellKnownSymbolLogic = fixRegexpWellKnownSymbolLogic;
var fails$4 = fails$w;
var anObject = anObject$f;
var isCallable = isCallable$o;
var isNullOrUndefined = isNullOrUndefined$8;
var toIntegerOrInfinity = toIntegerOrInfinity$4;
var toLength$1 = toLength$4;
var toString$2 = toString$a;
var requireObjectCoercible$1 = requireObjectCoercible$8;
var advanceStringIndex = advanceStringIndex$1;
var getMethod = getMethod$4;
var getSubstitution = getSubstitution$1;
var regExpExec = regexpExecAbstract;
var wellKnownSymbol = wellKnownSymbol$n;

var REPLACE = wellKnownSymbol('replace');
var max = Math.max;
var min$1 = Math.min;
var concat$1 = uncurryThis$4([].concat);
var push$1 = uncurryThis$4([].push);
var stringIndexOf = uncurryThis$4(''.indexOf);
var stringSlice = uncurryThis$4(''.slice);

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// IE <= 11 replaces $0 with the whole match, as if it was $&
// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0
var REPLACE_KEEPS_$0 = (function () {
  // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing
  return 'a'.replace(/./, '$0') === '$0';
})();

// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string
var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {
  if (/./[REPLACE]) {
    return /./[REPLACE]('a', '$0') === '';
  }
  return false;
})();

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails$4(function () {
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  // eslint-disable-next-line regexp/no-useless-dollar-replacements -- false positive
  return ''.replace(re, '$<a>') !== '7';
});

// @@replace logic
fixRegExpWellKnownSymbolLogic('replace', function (_, nativeReplace, maybeCallNative) {
  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';

  return [
    // `String.prototype.replace` method
    // https://tc39.es/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = requireObjectCoercible$1(this);
      var replacer = isNullOrUndefined(searchValue) ? undefined : getMethod(searchValue, REPLACE);
      return replacer
        ? call$1(replacer, searchValue, O, replaceValue)
        : call$1(nativeReplace, toString$2(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace
    function (string, replaceValue) {
      var rx = anObject(this);
      var S = toString$2(string);

      if (
        typeof replaceValue == 'string' &&
        stringIndexOf(replaceValue, UNSAFE_SUBSTITUTE) === -1 &&
        stringIndexOf(replaceValue, '$<') === -1
      ) {
        var res = maybeCallNative(nativeReplace, rx, S, replaceValue);
        if (res.done) return res.value;
      }

      var functionalReplace = isCallable(replaceValue);
      if (!functionalReplace) replaceValue = toString$2(replaceValue);

      var global = rx.global;
      if (global) {
        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }
      var results = [];
      while (true) {
        var result = regExpExec(rx, S);
        if (result === null) break;

        push$1(results, result);
        if (!global) break;

        var matchStr = toString$2(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength$1(rx.lastIndex), fullUnicode);
      }

      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];

        var matched = toString$2(result[0]);
        var position = max(min$1(toIntegerOrInfinity(result.index), S.length), 0);
        var captures = [];
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) push$1(captures, maybeToString(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = concat$1([matched], captures, position, S);
          if (namedCaptures !== undefined) push$1(replacerArgs, namedCaptures);
          var replacement = toString$2(apply(replaceValue, undefined, replacerArgs));
        } else {
          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += stringSlice(S, nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }
      return accumulatedResult + stringSlice(S, nextSourcePosition);
    }
  ];
}, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);

var markStr = 'event_';
/**
 * 获取内部调用Event传递id
 * @returns id 字符串
 */
function getEventId(dicData) {
  return markStr + getUUId(dicData);
}
/**
 * 获取纯数字的id
 * @param idStr event id 字符串
 * @returns 纯数字字符
 */
function getEventIdOnlyNumber(idStr) {
  return idStr.replace(markStr, '');
}
/**
 * 获取添加了事件前缀的id
 * @param idNumber number id
 * @returns 完整id
 */
function getEventIdByNumber(idNumber) {
  return markStr + String(idNumber);
}
/**
 * 判断是否是Event的id
 * @param idStr 当前掉用id
 * @returns
 */
function isEventId(callbackId) {
  return callbackId.startsWith(markStr);
}

/*
 * Release 1.0.3-alpha.4
 * 日志缓存池
 */
var logArrayPool = [];
/*
 * https://wiki.corp.kuaishou.com/pages/viewpage.action?pageId=152981099
 * Native 上报bridge文档 @张赛
 */
/*
 * 使用一帧的时间间隔作为最小上报区间(ms)
 * native 侧，考虑bridge 耗时，暂定1s
 */
var logSessionMinTime = 1000 * 1;
// 防抖最多次数
var maxTime = 30;
var switchEnum;
(function (switchEnum) {
  switchEnum[switchEnum["unload"] = 0] = "unload";
  switchEnum[switchEnum["open"] = 1] = "open";
  switchEnum[switchEnum["close"] = 2] = "close";
})(switchEnum || (switchEnum = {}));
var isLocalBridge = function isLocalBridge(logParams) {
  return (
    /*
     * 将原本控制getApiList只记录一次的逻辑移除
     * 默认 canIUse 、getApiList  都是本地api
     */
    ['canIUse', 'getApiList'].includes(logParams.name)
  );
};
var isSendLog = switchEnum.unload;
var getPageLoadDataPromise = null;
// 数据上报是否已经打开
var loggerSwitch = function loggerSwitch() {
  if (getPageLoadDataPromise) {
    return getPageLoadDataPromise;
  }
  var _Deferred = new Deferred(),
    promise = _Deferred.promise,
    resolve = _Deferred.resolve;
  getPageLoadDataPromise = promise;
  if (isSendLog == switchEnum.unload) {
    var _window$__yodaCommonD;
    // Window中有注入flag， 直接在window下读取
    if ((_window$__yodaCommonD = window.__yodaCommonDataObject__) !== null && _window$__yodaCommonD !== void 0 && _window$__yodaCommonD.sampleData) {
      var _window$__yodaCommonD2;
      if (typeof window.__yodaCommonDataObject__.sampleData === 'string') {
        try {
          window.__yodaCommonDataObject__.sampleData = JSON.parse(window.__yodaCommonDataObject__.sampleData);
        } catch (e) {
          window.__yodaCommonDataObject__.sampleData = {};
        }
      }
      isSendLog = (_window$__yodaCommonD2 = window.__yodaCommonDataObject__.sampleData) !== null && _window$__yodaCommonD2 !== void 0 && _window$__yodaCommonD2.bridgeHit ? switchEnum.open : switchEnum.close;
      resolve(isSendLog == switchEnum.open);
    } else {
      var yoda = getYoda();
      yoda.bridge('webview', 'getPageLoadData', {}, function (_ref) {
        var result = _ref.result,
          sampleData = _ref.sampleData;
        if (result == 1) {
          isSendLog = sampleData !== null && sampleData !== void 0 && sampleData.bridgeHit ? switchEnum.open : switchEnum.close;
        } else {
          isSendLog = switchEnum.close;
        }
        resolve(isSendLog == switchEnum.open);
      });
    }
  } else {
    resolve(isSendLog == switchEnum.open);
  }
  return getPageLoadDataPromise;
};
function sendLog() {
  window.__yodaBridge__.invoke('tool', 'sendPerformanceLog', JSON.stringify({
    data: logArrayPool
  }), getPerformanceId());
  logArrayPool.length = 0;
}
/**
 * 日志上报
 */
var _logger = debounce(function () {
  // Const yoda = this;
  sendLog();
}, logSessionMinTime);
var getLog = function getLog(logParams, dataNow, dateStr) {
  var _window$__yodaBridge_, _window$webkit, _window$webkit$messag, _window$webkit$messag2;
  var logData = {
    key: 'bridge',
    value: {},
    dimension: {
      api: logParams.name,
      namespace: logParams.namespace
    },
    event_client_timestamp: dataNow,
    event_trigger_source: 'H5',
    task_identifier: logParams.callbackId,
    is_task_event: true,
    task_status: '' // START 代表此为一系列事件的起点 END
  };

  switch (logParams.type) {
    case 'invoke':
      logData.value.h5_invoke_bridge_time = dataNow;
      logData.task_status = 'START';
      if (typeof ((_window$__yodaBridge_ = window.__yodaBridge__) === null || _window$__yodaBridge_ === void 0 ? void 0 : _window$__yodaBridge_.invoke) !== 'function' || typeof ((_window$webkit = window.webkit) === null || _window$webkit === void 0 ? void 0 : (_window$webkit$messag = _window$webkit.messageHandlers) === null || _window$webkit$messag === void 0 ? void 0 : (_window$webkit$messag2 = _window$webkit$messag.KMYYoda) === null || _window$webkit$messag2 === void 0 ? void 0 : _window$webkit$messag2.postMessage) !== 'function') {
        logData.result = 126002;
        logData.error_msg = '';
      }
      break;
    case 'callback':
      logData.value.h5_receive_callback_time = dataNow;
      logData.value.h5_invoke_bridge_time = dateStr;
      logData.dimension.result_type = logParams.resultCode;
      logData.dimension.result_type && (logData.dimension.result_type = logData.dimension.result_type.toString());
      logData.dimension.error_msg = logParams.errorMsg;
      logData.task_status = 'END';
      break;
    case 'event':
      logData.task_status = 'SUCCESS';
      delete logData.dimension.api;
      delete logData.dimension.namespace;
      logData.dimension.event = '';
      break;
  }
  return logData;
};
var logger = function logger(logParams, dateStr) {
  /*
   * 当前只在 >= 9.7.40 才会生效
   * if (compareVersion(appVersion, '9.7.40') > 0) return;
   */
  /*
   * 限制特定 bridge 和 前端 bridge 的阻止上报
   * getApiList  只上报一次
   * canIUse 不上报
   */
  if (isLocalBridge(logParams)) {
    return;
  }
  var nowDate = Date.now().toString();
  loggerSwitch().then(function (switchFlag) {
    if (!switchFlag) {
      return;
    }
    logArrayPool.push(getLog(logParams, nowDate, dateStr));
    // 防止出现大数据提交造成的crash,强制推送
    if (logArrayPool.length >= maxTime) {
      sendLog();
    } else {
      _logger();
    }
  });
  return nowDate;
};

function createSingleDeferred(cb) {
  var resolve = null;
  var promise = new Promise(function (r) {
    resolve = r;
  });
  if (cb) {
    promise = promise.then(cb, cb);
  }
  return {
    isMulti: false,
    resolve: resolve,
    promise: promise
  };
}
function createMultiDeferred(cb) {
  /*
   * 多次调用模式下，promise
   * 只是兼容当前调用方式
   * TODO 文档中需要特殊说明
   */
  var promise = new Promise(function () {});
  return {
    isMulti: true,
    resolve: cb,
    promise: promise
  };
}
var invokeMap = {};
var deferredInvoke = {
  pushMQ: function pushMQ() {
    var isMulti = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    var callBackFn = arguments.length > 1 ? arguments[1] : undefined;
    var isEvent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var id = isEvent ? getEventId() : getUUId(invokeMap);
    var deferred = isMulti ? createMultiDeferred(callBackFn) : createSingleDeferred(callBackFn);
    deferred.traceId = String(id);
    invokeMap[id] = deferred;
    return deferred;
  },
  removeMQ: function removeMQ(callbackId) {
    invokeMap[callbackId] = undefined;
  },
  create: function create(namespace, name) {
    var isMulti = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var callBackFn = arguments.length > 3 ? arguments[3] : undefined;
    var deferred = this.pushMQ(isMulti, callBackFn);
    deferred.namespace = namespace;
    deferred.name = name;
    // 创建
    var startTimeStr = logger({
      namespace: namespace,
      name: name,
      type: 'invoke',
      callbackId: deferred.traceId
    });
    invokeMap[deferred.traceId].startTime = startTimeStr;
    return {
      id: deferred.traceId,
      promise: deferred.promise
    };
  },
  resolve: function resolve(id, data) {
    if (isPerformanceId(id)) {
      return;
    }
    var deferred = invokeMap[id];
    if (!deferred) {
      /*
       * 创建
       * return console.warn('native callback error:', data);
       */
      return;
    }
    deferred.resolve(data);
    // 设置成为undefined保证不内存泄露，不用delete是防止回退字典模式
    if (!deferred.isMulti) {
      this.removeMQ(id);
    }
    if (isEventId(id)) {
      return;
    }
    // 发送回调成功日志
    logger({
      namespace: deferred.namespace,
      name: deferred.name,
      type: 'callback',
      callbackId: deferred.traceId,
      resultCode: data.result
    }, deferred.startTime);
  },
  reject: function reject(id, reason) {
    var deferred = invokeMap[id];
    if (!deferred) {
      /*
       * 若无对应调用，不做处理，稍后增加 log
       * return console.warn('native callback error:', reason);
       */
      return;
    }
    // 以异常信息回调正常业务也逻辑
    deferred.resolve(reason);
    // 设置成为undefined保证不内存泄露，不用delete是防止回退字典模式
    if (!deferred.isMulti) {
      this.removeMQ(id);
    }
    // 由于事件的回调result!=1,导致会使事件的回调会走到reject 中
    if (isEventId(id)) {
      return;
    }
    // 发送回调成功日志
    logger({
      namespace: deferred.namespace,
      name: deferred.name,
      type: 'callback',
      callbackId: deferred.traceId,
      resultCode: reason.result,
      errorMsg: reason.message
    }, deferred.startTime);
  }
};

// 针对 bridge 回调做了一些分类，后续如果有其他类型的 bridge 需要特殊处理再新增分类即可
var BRIDGE_TYPE = {
  noCallbackList: ['popBack', 'exitWebView'],
  onClickList: ['setPhysicalBackButton', 'setTopLeftBtn', 'setTopLeftSecondBtn', 'setTopRightBtn', 'setTopRightSecondBtn'],
  handlerList: ['on', 'off']
};
var NAMESPACE_2_GLOBALVAR = {
  kwai: 'Kwai',
  kwaiAd: 'KwaiAd',
  kwaiAdThird: 'KwaiAdThird',
  kwaiMerchant: 'KwaiMerchant',
  kwaiLive: 'KwaiLive',
  // 以防使用大写 namespace 进行调用，大写的映射关系也加上
  Kwai: 'Kwai',
  KwaiAd: 'KwaiAd',
  KwaiAdThird: 'KwaiAdThird',
  KwaiMerchant: 'KwaiMerchant',
  KwaiLive: 'KwaiLive'
};

var $$a = _export;
var toObject$3 = toObject$b;
var nativeKeys = objectKeys$3;
var fails$3 = fails$w;

var FAILS_ON_PRIMITIVES = fails$3(function () { nativeKeys(1); });

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
$$a({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {
  keys: function keys(it) {
    return nativeKeys(toObject$3(it));
  }
});

var noCallbackList = BRIDGE_TYPE.noCallbackList,
  onClickList = BRIDGE_TYPE.onClickList,
  handlerList = BRIDGE_TYPE.handlerList;
/**
 *
 * 生成唯一的id
 * @export
 * @returns
 */
function generateUUID() {
  var rc = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
  // https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript/2117523#2117523
  var d = new Date().getTime();
  if (typeof performance !== 'undefined' && typeof performance.now === 'function') {
    d += performance.now(); // Use high-precision timer if available
  }

  var pattern = rc ? 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx' : 'xxxxxxxx_xxxx_4xxx_yxxx_xxxxxxxxxxxx';
  return pattern.replace(/[xy]/g, function (c) {
    var r = (d + Math.random() * 16) % 16 | 0;
    d = Math.floor(d / 16);
    return (c === 'x' ? r : r & 0x3 | 0x8).toString(16);
  });
}
/**
 *
 * 生成临时唯一的方法挂接到window上，给客户端回调用
 * @name generateUUCallbackFunction
 * @private
 * @param {function} callback 回调函数，客户端方法执行完后会执行该方法
 * @param {boolean} notDelete 是否删除当前回调，留在当前页面的内存中
 * @param {string} bridge 的命名空间和方法名，方便后续问题排查
 * @param {string} 回调方法对应的唯一ID
 * @returns
 */
function generateUUCallbackFunction(callback, notDelete, callbackName) {
  var callbackId = generateUUID(false);
  var name = "yoda_kuaishou_plugin_callback_".concat(callbackName, "_").concat(callbackId);
  window[name] = function (data) {
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) {
        console.warn(e); // eslint-disable-line
      }
    }

    if (isFunction(callback)) {
      callback.call(window, data);
    } else if (typeof callback === 'string' && isFunction(window[callback])) {
      window[callback].call(window, data);
    }
    if (!notDelete) {
      delete window[name];
    }
  };
  return name;
}
// 用于 showDialog 相关 api 中，将回调转化成接口需要的 URL
function transformFuncToURL(btn, callbackName) {
  var tmpBtn = btn;
  if (btn && Array.isArray(btn.actions)) {
    tmpBtn.actions = btn.actions.map(function (action) {
      if (action && action.url && isFunction(action.url)) {
        action.url = generateUUCallbackFunction(action.url, true, callbackName);
      }
      return action;
    });
  }
  return tmpBtn;
}
var handlerCbMap = {};
// 事件相关 api 中处理 handler
function generateHandlerFunction(callback, bridge) {
  var handlerName = '';
  var cb = null;
  Object.keys(handlerCbMap).some(function (cbName) {
    var handlerCb = handlerCbMap[cbName];
    if (handlerCb === callback) {
      cb = handlerCb;
      handlerName = cbName;
      return true;
    }
    return false;
  });
  // 当传递的 handler 回调之前已经挂载过，就不再重新挂载，重新生成 handler 回调名
  if (cb !== callback && callback) {
    var name = generateUUCallbackFunction(callback, true, bridge);
    handlerCbMap[name] = callback;
    handlerName = name;
  }
  return handlerName;
}
/**
 * Bridge 调用参数预处理，针对几类特定 bridge 进行处理
 * @name bridgeParamsHandler
 * @private
 * @param {string} namespace 命名空间
 * @param {string} bridge 桥名
 * @param {Object} 调用参数
 * @param {function} bridge 本身调用的回调
 */
function bridgeParamsHandler(namespace, bridgeName, params, invokeCallback) {
  var handledParams = _objectSpread2({}, params);
  var callbackName = "".concat(namespace, "_").concat(bridgeName);
  /*
   * 特殊适配 Kwai 等命名空间下 bridge 回调的传递
   * 回调为 onClick 形式的
   */
  if (onClickList.includes(bridgeName)) {
    handledParams.onClick = generateUUCallbackFunction(handledParams.onClick, true, callbackName);
    // 不允许传递任何参数给 native 的
  } else if (noCallbackList.includes(bridgeName)) {
    handledParams = null;
    // 事件类传 handler 的
  } else if (handlerList.includes(bridgeName)) {
    var callbackUUid = generateUUCallbackFunction(invokeCallback, false, callbackName);
    // 调用 off 桥不传 handler 时，则不能传再对其进行处理
    if (handledParams.handler && isFunction(handledParams.handler)) {
      handledParams.handler = generateHandlerFunction(handledParams.handler, callbackName);
    }
    handledParams.callback = callbackUUid;
    // ShowDialog
  } else if (bridgeName === 'showDialog') {
    var _handledParams = handledParams,
      positiveButton = _handledParams.positiveButton,
      negativeButton = _handledParams.negativeButton,
      neutralButton = _handledParams.neutralButton;
    if (positiveButton) {
      handledParams.positiveButton = transformFuncToURL(positiveButton, callbackName);
    }
    if (negativeButton) {
      handledParams.negativeButton = transformFuncToURL(negativeButton, callbackName);
    }
    if (neutralButton) {
      handledParams.neutralButton = transformFuncToURL(neutralButton, callbackName);
    }
    // 其他默认都是通过 callback 传给 native
  } else if (Object.keys(NAMESPACE_2_GLOBALVAR).includes(namespace)) {
    var _callbackUUid = generateUUCallbackFunction(invokeCallback, true, callbackName);
    handledParams.callback = handledParams.callback || _callbackUUid;
  }
  return handledParams;
}

var $$9 = _export;
var DESCRIPTORS$2 = descriptors;
var defineProperty$1 = objectDefineProperty.f;

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
// eslint-disable-next-line es/no-object-defineproperty -- safe
$$9({ target: 'Object', stat: true, forced: Object.defineProperty !== defineProperty$1, sham: !DESCRIPTORS$2 }, {
  defineProperty: defineProperty$1
});

var getMultiInstanceError = function getMultiInstanceError() {
  return new Error('当前环境存在 Yoda 多实例问题，详细请参考 https://docs.corp.kuaishou.com/k/home/VbQx2ulc6v3M/fcADLOKqHyHpSr7hiCKKQVtVM');
};
var setupMultiInstanceGuard = function setupMultiInstanceGuard() {
  var _window = window,
    __yodaBridgeCallback__ = _window.__yodaBridgeCallback__;
  if (typeof __yodaBridgeCallback__ === 'function') {
    throw getMultiInstanceError();
  }
  Object.defineProperty(window, '__yodaBridgeCallback__', {
    get: function get() {
      return __yodaBridgeCallback__;
    },
    set: function set(value) {
      if (__yodaBridgeCallback__) {
        throw getMultiInstanceError();
      }
      __yodaBridgeCallback__ = value;
    }
  });
};

var $$8 = _export;
var iterate = iterate$6;
var createProperty = createProperty$4;

// `Object.fromEntries` method
// https://github.com/tc39/proposal-object-from-entries
$$8({ target: 'Object', stat: true }, {
  fromEntries: function fromEntries(iterable) {
    var obj = {};
    iterate(iterable, function (k, v) {
      createProperty(obj, k, v);
    }, { AS_ENTRIES: true });
    return obj;
  }
});

var currentMode = 'production';
var getCurrentMode = function getCurrentMode() {
  return currentMode;
};
var setCurrentMode = function setCurrentMode(mode) {
  currentMode = mode;
};

var loggerMethods = ['debug', 'info', 'log', 'warn', 'error'];
var createLogger = function createLogger(implFor) {
  return Object.fromEntries(loggerMethods.map(function (method) {
    return [method, implFor(method)];
  }));
};
var print = function print(context, method) {
  var _console;
  if (getCurrentMode() === 'production') {
    return;
  }
  // eslint-disable-next-line no-console
  for (var _len = arguments.length, data = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    data[_key - 2] = arguments[_key];
  }
  (_console = console)[method].apply(_console, ["[".concat(context, "]")].concat(data));
};

var console$1 = createLogger(function (method) {
  return function () {
    for (var _len = arguments.length, data = new Array(_len), _key = 0; _key < _len; _key++) {
      data[_key] = arguments[_key];
    }
    return print.apply(void 0, ['@yoda/bridge', method].concat(data));
  };
});

var invoke$1 = /*#__PURE__*/function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(invokeConfig) {
    var _bridgeParamsHandler;
    var namespace, name, params, multiCallback, callback, ns, _deferredInvoke$creat, id, promise, originalNamespace, _invokeCallback;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            namespace = invokeConfig.namespace, name = invokeConfig.name, params = invokeConfig.params, multiCallback = invokeConfig.multiCallback, callback = invokeConfig.callback;
            ns = NAMESPACE_2_GLOBALVAR[namespace];
            _deferredInvoke$creat = deferredInvoke.create(namespace, name, multiCallback, callback), id = _deferredInvoke$creat.id, promise = _deferredInvoke$creat.promise; // TODO 确定逻辑后处理 临时添加 活动 namespace
            // if (ns || addCbParamsBridges.includes(name) || namespace == 'sf2022') {
            // 实际调用前需要将 register 中改写的 namespace 改回来
            originalNamespace = ns || namespace;
            _invokeCallback = function _invokeCallback(res) {
              invokeCallback(id, res);
            };
            invokeConfig.namespace = originalNamespace === 'Kwai' && typeof navigator !== 'undefined' && navigator.userAgent.includes('livemate/') ? 'livemate' : originalNamespace;
            // 参数预处理
            invokeConfig.params = (_bridgeParamsHandler = bridgeParamsHandler(originalNamespace, name, params, _invokeCallback)) !== null && _bridgeParamsHandler !== void 0 ? _bridgeParamsHandler : {};
            /*
             * 比较版本号
             * 7730 以上版本不需要做兼容处理
             * 兼容方式注册的桥，双端只关注 params.callback，yoda 方式注册的桥只关注 invoke callbackId
             * if (appVersion && compareVersion(appVersion, '7.7.30') < 0) {
             * 在 js-sdk 层将桥调用的回调方法转到 params 后，需要将 callbackId 重置下
             * 主要处理部分只回调一次的桥（回调执行一次后会被 delete），如果 params.callback 和 invokeCallback 指向一个回调
             * 可能会导致 params.callback 还未执行，回调已被 delete
             * 临时回调函数只在这个地方有声明，原sdk、plugin 并未 指定该 callback
             * const tmpCbKey = '__yoda_kuaishou_plugin_tmp_cb__';
             * yoda._callbacks[tmpCbKey] = yoda._callbacks[tmpCbKey] || noop;
             * invokeConfig.callbackId = tmpCbKey;
             * 需要额外挂到 window 上是因为 iOS 可能会去 window 上找该回调
             *     window.__yoda_kuaishou_plugin_tmp_cb__ = noop;
             * }
             */
            // }
            console$1.info("Invoking '".concat(invokeConfig.namespace, ".").concat(invokeConfig.name, "'"), invokeConfig.params);
            if (!(isIOS && !window.webkit && compareYodaVersion('2.10.9.2') < 0)) {
              _context.next = 10;
              break;
            }
            return _context.abrupt("return", promise);
          case 10:
            window.__yodaBridge__.invoke(invokeConfig.namespace, invokeConfig.name, JSON.stringify(invokeConfig.params), String(id));
            return _context.abrupt("return", promise);
          case 12:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return function invoke(_x) {
    return _ref.apply(this, arguments);
  };
}();
var invokeCallback = function invokeCallback(id, res) {
  if (isIOS && compareYodaVersion('2.3.7') < 0) {
    // 以前 Yoda iOS 回调时插值表达式写错了，导致这里的 id 类型是 number
    // eslint-disable-next-line no-param-reassign
    id = "".concat(id);
  }
  var data = typeof res === 'string' ? JSON.parse(res) : res;
  if ((data === null || data === void 0 ? void 0 : data.result) === 1) {
    deferredInvoke.resolve(id, data);
  } else {
    deferredInvoke.reject(id, data);
  }
};
if (typeof window !== 'undefined') {
  // 开启守卫
  setupMultiInstanceGuard();
  // 挂载接收 native 回调事件
  window.__yodaBridgeCallback__ = invokeCallback;
}

var collection = collection$3;
var collectionStrong = collectionStrong$2;

// `Set` constructor
// https://tc39.es/ecma262/#sec-set-objects
collection('Set', function (init) {
  return function Set() { return init(this, arguments.length ? arguments[0] : undefined); };
}, collectionStrong);

var fails$2 = fails$w;

var arrayMethodIsStrict$2 = function (METHOD_NAME, argument) {
  var method = [][METHOD_NAME];
  return !!method && fails$2(function () {
    // eslint-disable-next-line no-useless-call -- required for testing
    method.call(null, argument || function () { return 1; }, 1);
  });
};

var $forEach = arrayIteration.forEach;
var arrayMethodIsStrict$1 = arrayMethodIsStrict$2;

var STRICT_METHOD$1 = arrayMethodIsStrict$1('forEach');

// `Array.prototype.forEach` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.foreach
var arrayForEach = !STRICT_METHOD$1 ? function forEach(callbackfn /* , thisArg */) {
  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
// eslint-disable-next-line es/no-array-prototype-foreach -- safe
} : [].forEach;

var global$3 = global$t;
var DOMIterables = domIterables;
var DOMTokenListPrototype = domTokenListPrototype;
var forEach = arrayForEach;
var createNonEnumerableProperty = createNonEnumerableProperty$7;

var handlePrototype = function (CollectionPrototype) {
  // some Chrome versions have non-configurable methods on DOMTokenList
  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {
    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);
  } catch (error) {
    CollectionPrototype.forEach = forEach;
  }
};

for (var COLLECTION_NAME in DOMIterables) {
  if (DOMIterables[COLLECTION_NAME]) {
    handlePrototype(global$3[COLLECTION_NAME] && global$3[COLLECTION_NAME].prototype);
  }
}

handlePrototype(DOMTokenListPrototype);

var apiSet = new Set();
var invokeAndroid9920 = /*#__PURE__*/function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(callData) {
    var _NAMESPACE_2_GLOBALVA;
    var namespace, name, params, multiCallback, callback, apiListRes, canUse;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            namespace = callData.namespace, name = callData.name, params = callData.params, multiCallback = callData.multiCallback, callback = callData.callback;
            if (apiSet.size) {
              _context.next = 6;
              break;
            }
            _context.next = 4;
            return invoke$1({
              namespace: 'tool',
              name: 'getApiList',
              params: {}
            });
          case 4:
            apiListRes = _context.sent;
            if (apiListRes.result === 1 && Array.isArray(apiListRes.apiList)) {
              apiListRes.apiList.forEach(function (_ref2) {
                var namespace = _ref2.namespace,
                  name = _ref2.name;
                return apiSet.add("".concat(namespace, ".").concat(name));
              });
            }
          case 6:
            canUse = apiSet.has("".concat((_NAMESPACE_2_GLOBALVA = NAMESPACE_2_GLOBALVAR[namespace]) !== null && _NAMESPACE_2_GLOBALVA !== void 0 ? _NAMESPACE_2_GLOBALVA : namespace, ".").concat(name));
            return _context.abrupt("return", new Promise(function (resolve) {
              if (canUse) {
                void invoke$1({
                  namespace: namespace,
                  name: name,
                  params: params,
                  multiCallback: multiCallback,
                  callback: callback
                }).then(resolve);
              } else {
                var result404 = {
                  result: 125004
                };
                callback === null || callback === void 0 ? void 0 : callback(result404);
                resolve(result404);
              }
            }));
          case 8:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return function invokeAndroid9920(_x) {
    return _ref.apply(this, arguments);
  };
}();

var currentContainer = null;
var assertsContainer = function assertsContainer(container) {
  {
    if (!container) {
      throw new Error('[@yoda/bridge] This error is caused by a bug');
    }
  }
};
var getContainer = function getContainer() {
  assertsContainer(currentContainer);
  return currentContainer;
};
var setContainer = function setContainer(container) {
  currentContainer = container;
};

var global$2 = global$t;

var globalIsFinite = global$2.isFinite;

// `Number.isFinite` method
// https://tc39.es/ecma262/#sec-number.isfinite
// eslint-disable-next-line es/no-number-isfinite -- safe
var numberIsFinite$1 = Number.isFinite || function isFinite(it) {
  return typeof it == 'number' && globalIsFinite(it);
};

var $$7 = _export;
var numberIsFinite = numberIsFinite$1;

// `Number.isFinite` method
// https://tc39.es/ecma262/#sec-number.isfinite
$$7({ target: 'Number', stat: true }, { isFinite: numberIsFinite });

var DESCRIPTORS$1 = descriptors;
var uncurryThis$3 = functionUncurryThis;
var call = functionCall;
var fails$1 = fails$w;
var objectKeys$1 = objectKeys$3;
var getOwnPropertySymbolsModule = objectGetOwnPropertySymbols;
var propertyIsEnumerableModule = objectPropertyIsEnumerable;
var toObject$2 = toObject$b;
var IndexedObject$1 = indexedObject;

// eslint-disable-next-line es/no-object-assign -- safe
var $assign = Object.assign;
// eslint-disable-next-line es/no-object-defineproperty -- required for testing
var defineProperty = Object.defineProperty;
var concat = uncurryThis$3([].concat);

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
var objectAssign = !$assign || fails$1(function () {
  // should have correct order of operations (Edge bug)
  if (DESCRIPTORS$1 && $assign({ b: 1 }, $assign(defineProperty({}, 'a', {
    enumerable: true,
    get: function () {
      defineProperty(this, 'b', {
        value: 3,
        enumerable: false
      });
    }
  }), { b: 2 })).b !== 1) return true;
  // should work with symbols and should have deterministic property order (V8 bug)
  var A = {};
  var B = {};
  // eslint-disable-next-line es/no-symbol -- safe
  var symbol = Symbol();
  var alphabet = 'abcdefghijklmnopqrst';
  A[symbol] = 7;
  alphabet.split('').forEach(function (chr) { B[chr] = chr; });
  return $assign({}, A)[symbol] != 7 || objectKeys$1($assign({}, B)).join('') != alphabet;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars -- required for `.length`
  var T = toObject$2(target);
  var argumentsLength = arguments.length;
  var index = 1;
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  var propertyIsEnumerable = propertyIsEnumerableModule.f;
  while (argumentsLength > index) {
    var S = IndexedObject$1(arguments[index++]);
    var keys = getOwnPropertySymbols ? concat(objectKeys$1(S), getOwnPropertySymbols(S)) : objectKeys$1(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS$1 || call(propertyIsEnumerable, S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;

var $$6 = _export;
var assign = objectAssign;

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
// eslint-disable-next-line es/no-object-assign -- required for testing
$$6({ target: 'Object', stat: true, arity: 2, forced: Object.assign !== assign }, {
  assign: assign
});

var getContext = function getContext(_ref) {
  var initialBridge = _ref.initialBridge,
    initialParams = _ref.initialParams;
  return {
    bridge: initialBridge,
    params: initialParams
  };
};
var BridgeError = /*#__PURE__*/function (_Error) {
  _inherits(BridgeError, _Error);
  var _super = _createSuper(BridgeError);
  function BridgeError(message, code, config) {
    var _this;
    _classCallCheck(this, BridgeError);
    _this = _super.call(this, message);
    _this.name = 'BridgeError';
    _this.message = message;
    _this.code = code;
    _this.context = getContext(config);
    return _this;
  }
  _createClass(BridgeError, [{
    key: "toJSON",
    value: function toJSON() {
      return {
        name: this.name,
        message: this.message,
        code: this.code,
        context: this.context
      };
    }
  }]);
  return BridgeError;
}( /*#__PURE__*/_wrapNativeSuper(Error));
var isBridgeError = function isBridgeError(err) {
  return err instanceof BridgeError;
};

var _excluded$1 = ["useLastLocationWhileLimited"],
  _excluded2 = ["biz", "force", "statKey", "alertScene", "updateLocationScene"];
var getLocation = /*#__PURE__*/function () {
  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref) {
    var _ref$useLastLocationW, useLastLocationWhileLimited, params, _getContainer, invoke, biz_type, force, restParams, forced_permission_request, legacyParams, _yield$invoke, _yield$invoke$data, _longitude, _latitude, _yield$invoke2, _yield$invoke2$data, longitude, latitude, _params$updateLocatio, _updateLocationScene, _yield$invoke3, _longitude2, _latitude2, _yield$invoke4, _longitude3, _latitude3;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _ref$useLastLocationW = _ref.useLastLocationWhileLimited, useLastLocationWhileLimited = _ref$useLastLocationW === void 0 ? false : _ref$useLastLocationW, params = _objectWithoutProperties(_ref, _excluded$1);
            _getContainer = getContainer(), invoke = _getContainer.invoke;
            if (!(compareKwaiAppVersion('10.1.30') < 0)) {
              _context.next = 27;
              break;
            }
            // eslint-disable-next-line camelcase
            biz_type = params.biz, force = params.force, params.statKey, params.alertScene, params.updateLocationScene, restParams = _objectWithoutProperties(params, _excluded2); // eslint-disable-next-line camelcase
            forced_permission_request = function () {
              if (typeof force === 'undefined') {
                return 2;
              }
              return force ? 1 : 3;
            }();
            legacyParams = _objectSpread2(_objectSpread2({}, restParams), {}, {
              // eslint-disable-next-line camelcase
              biz_type: biz_type,
              // eslint-disable-next-line camelcase
              forced_permission_request: forced_permission_request
            });
            _context.prev = 6;
            _context.next = 9;
            return invoke('kwai.syncLocationWithPermissionCheck', _objectSpread2(_objectSpread2({}, legacyParams), {}, {
              // eslint-disable-next-line camelcase
              forced_permission_request: 3
            }));
          case 9:
            _yield$invoke = _context.sent;
            _yield$invoke$data = _yield$invoke.data;
            _longitude = _yield$invoke$data.longitude;
            _latitude = _yield$invoke$data.latitude;
            return _context.abrupt("return", {
              longitude: _longitude,
              latitude: _latitude
            });
          case 16:
            _context.prev = 16;
            _context.t0 = _context["catch"](6);
          case 18:
            _context.next = 20;
            return invoke('kwai.requestLocationPermissionWithPermissionCheck', legacyParams);
          case 20:
            _context.next = 22;
            return invoke('kwai.syncLocationWithPermissionCheck', legacyParams);
          case 22:
            _yield$invoke2 = _context.sent;
            _yield$invoke2$data = _yield$invoke2.data;
            longitude = _yield$invoke2$data.longitude;
            latitude = _yield$invoke2$data.latitude;
            return _context.abrupt("return", {
              longitude: longitude,
              latitude: latitude
            });
          case 27:
            if (isAndroid && compareKwaiAppVersion('10.3.30') < 0) {
              _params$updateLocatio = params.updateLocationScene, _updateLocationScene = _params$updateLocatio === void 0 ? '' : _params$updateLocatio;
              Object.assign(params, {
                useInterval: !_updateLocationScene
              });
            }
            _context.prev = 28;
            _context.next = 31;
            return invoke('system.requestLocation', params);
          case 31:
            _yield$invoke3 = _context.sent;
            _longitude2 = _yield$invoke3.longitude;
            _latitude2 = _yield$invoke3.latitude;
            return _context.abrupt("return", {
              longitude: _longitude2,
              latitude: _latitude2
            });
          case 37:
            _context.prev = 37;
            _context.t1 = _context["catch"](28);
            if (isBridgeError(_context.t1)) {
              _context.next = 41;
              break;
            }
            throw _context.t1;
          case 41:
            if (!(_context.t1.code === 10014 && useLastLocationWhileLimited)) {
              _context.next = 49;
              break;
            }
            _context.next = 44;
            return invoke('system.getLocationCityInfo', {
              biz: params.biz
            });
          case 44:
            _yield$invoke4 = _context.sent;
            _longitude3 = _yield$invoke4.longitude;
            _latitude3 = _yield$invoke4.latitude;
            if (!(typeof _longitude3 === 'number' && typeof _latitude3 === 'number')) {
              _context.next = 49;
              break;
            }
            return _context.abrupt("return", {
              longitude: _longitude3,
              latitude: _latitude3
            });
          case 49:
            throw _context.t1;
          case 50:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[6, 16], [28, 37]]);
  }));
  return function getLocation(_x) {
    return _ref2.apply(this, arguments);
  };
}();

var apis = {
  getLocation: getLocation
};

var isArray = isArray$4;
var lengthOfArrayLike$2 = lengthOfArrayLike$a;
var doesNotExceedSafeInteger = doesNotExceedSafeInteger$2;
var bind = functionBindContext;

// `FlattenIntoArray` abstract operation
// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray
var flattenIntoArray$1 = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {
  var targetIndex = start;
  var sourceIndex = 0;
  var mapFn = mapper ? bind(mapper, thisArg) : false;
  var element, elementLen;

  while (sourceIndex < sourceLen) {
    if (sourceIndex in source) {
      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];

      if (depth > 0 && isArray(element)) {
        elementLen = lengthOfArrayLike$2(element);
        targetIndex = flattenIntoArray$1(target, original, element, elementLen, targetIndex, depth - 1) - 1;
      } else {
        doesNotExceedSafeInteger(targetIndex + 1);
        target[targetIndex] = element;
      }

      targetIndex++;
    }
    sourceIndex++;
  }
  return targetIndex;
};

var flattenIntoArray_1 = flattenIntoArray$1;

var $$5 = _export;
var flattenIntoArray = flattenIntoArray_1;
var aCallable$1 = aCallable$9;
var toObject$1 = toObject$b;
var lengthOfArrayLike$1 = lengthOfArrayLike$a;
var arraySpeciesCreate = arraySpeciesCreate$3;

// `Array.prototype.flatMap` method
// https://tc39.es/ecma262/#sec-array.prototype.flatmap
$$5({ target: 'Array', proto: true }, {
  flatMap: function flatMap(callbackfn /* , thisArg */) {
    var O = toObject$1(this);
    var sourceLen = lengthOfArrayLike$1(O);
    var A;
    aCallable$1(callbackfn);
    A = arraySpeciesCreate(O, 0);
    A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    return A;
  }
});

// this method was added to unscopables after implementation
// in popular engines, so it's moved to a separate module
var addToUnscopables = addToUnscopables$4;

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('flatMap');

var DESCRIPTORS = descriptors;
var uncurryThis$2 = functionUncurryThis;
var objectKeys = objectKeys$3;
var toIndexedObject = toIndexedObject$8;
var $propertyIsEnumerable = objectPropertyIsEnumerable.f;

var propertyIsEnumerable = uncurryThis$2($propertyIsEnumerable);
var push = uncurryThis$2([].push);

// `Object.{ entries, values }` methods implementation
var createMethod$1 = function (TO_ENTRIES) {
  return function (it) {
    var O = toIndexedObject(it);
    var keys = objectKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;
    while (length > i) {
      key = keys[i++];
      if (!DESCRIPTORS || propertyIsEnumerable(O, key)) {
        push(result, TO_ENTRIES ? [key, O[key]] : O[key]);
      }
    }
    return result;
  };
};

var objectToArray = {
  // `Object.entries` method
  // https://tc39.es/ecma262/#sec-object.entries
  entries: createMethod$1(true),
  // `Object.values` method
  // https://tc39.es/ecma262/#sec-object.values
  values: createMethod$1(false)
};

var $$4 = _export;
var $entries = objectToArray.entries;

// `Object.entries` method
// https://tc39.es/ecma262/#sec-object.entries
$$4({ target: 'Object', stat: true }, {
  entries: function entries(O) {
    return $entries(O);
  }
});

var bridgeToLegacyKwaiBridge = Object.fromEntries(Object.entries({
  advertise: ['startFansTopLivePlay', 'startNeoAdVideo'],
  feed: ['authorizationStatusForCalendar', 'changeEventForCalendar', 'closeChildLock', 'getAddressBookAccessStatus', 'getCoronaTvChasingData', 'getFeed', 'openDetailPage', 'openFansGroup', 'setSettingEntryForCourse', 'startPlayLongVideo', 'updateDeviceBit', 'updateUserRecoBit', 'updateWeatherInfo', 'userIncentivesUpdateTasks'],
  game: ['addShortcutToDesktop', 'appointGame', 'changeAppointStatus', 'gameSendLog', 'gameTaskSelectImage', 'getAppointStatus', 'getWebViewDisplayType', 'kgPageDidShowed', 'openNativeGamecenter'],
  growth: ['getDeviceSecretInfo', 'unionPhoneNumber'],
  im: ['setEnableIMTip'],
  live: ['deleteSubscribe', 'liveReservationNotification', 'openLiveQuizLive', 'showSubscribeEditDialog', 'showSubscribeSelectPhotoDialog', 'subscribeLive', 'unsubscribeLive'],
  merchant: ['closeLiveMerchantFloatingWindow', 'getLatestImage', 'getSidToken', 'loadUrlOnNewMerchantPage', 'merchantSetPhotoPlayStatus', 'onItemSelected', 'popupToFollow', 'querySessionIsStickyOnTop', 'reqSessionStickyOnTopWithThread', 'requestLocationAuthorization'],
  minigame: ['publishSogameVideo'],
  pay: ['authThirdPartyAccount', 'bindWithdrawType', 'couponPay', 'hasImportSdk', 'nebulaStartGatewayWithdraw', 'openKspayWebView', 'sfBindWithdrawType', 'startDeposit', 'startGatewayPay', 'startGatewayWithdraw', 'startHalfScreenRecharge', 'startKspayOrderPrepay'],
  platform: ['getDarkMode', 'openWechatMiniProgram', 'sendSMS', 'startFaceRecognition'],
  post: ['cancelJsInjectUpload', 'captureCertVideo', 'deleteCacheVideoByPhotoId', 'editAtlas', 'editDraft', 'editSmartAlbum', 'getEditDraftData', 'getSmartAlbumData', 'getVideoUploadStatus', 'intownShare', 'postAtlas', 'postVideo', 'preloadMagicFace', 'previewVideo', 'reUploadShopVideo', 'reeditPhoto', 'resumeVideoUpload', 'retryJsInjectUpload', 'saveImage', 'saveTempImages', 'selectAndUploadMedia', 'selectImage', 'selectMixMediasAndUpload', 'selectVideoAndUpload', 'startAudioRecord', 'uploadCertVideo', 'uploadShopVideo', 'uploadVideoFromAlbum', 'verifyLiveUser'],
  social: ['addTokenBlockShareId', 'bindPhone', 'bindRiskPreCheck', 'decryptContactsName', 'enterGroupChat', 'followUser', 'joinGroup', 'login', 'logout', 'mobileQuickAuthInfo', 'mobileQuickLoginInfo', 'needUpdateProfile', 'requestFollowUserV2', 'selectCountryPhoneCode', 'sendIMMessage', 'sendImFriendMessage', 'setPageFollowRefer', 'setShareTokenToClipBoard', 'share', 'startAuthActivity', 'verifyAccount', 'verifySMSCode', 'verifyThirdPartyLogin', 'wechatLogin'],
  system: ['collapseKeyboard', 'getPushPermission', 'getServerTime', 'gete2', 'openPushPermission'],
  tool: ['getClipBoard', 'getExpTagTransList', 'loadUrlOnNewPage', 'openBrowser', 'scanCode'],
  ui: ['selectCity', 'showBottomSheet', 'showPicker'],
  webview: ['clearClipBoard', 'exitWebView', 'getABTest', 'getAppEnvironment', 'getDeviceInfo', 'hasInstalledApp', 'hideNavigationBar', 'popBack', 'resetTopButtons', 'setClipBoard', 'setPageTitle', 'setSlideBack', 'setTopLeftBtn', 'setTopLeftSecondBtn', 'setTopRightBtn', 'setTopRightSecondBtn', 'submitData']
}).flatMap(function (_ref) {
  var _ref2 = _slicedToArray(_ref, 2),
    namespace = _ref2[0],
    names = _ref2[1];
  return names.map(function (name) {
    return ["".concat(namespace, ".").concat(name), "kwai.".concat(name)];
  });
}));
var invalidResultBridges = ['social.currentUserInfo', 'post.draftRecommendPhotos', 'post.draftRecommendPublishPhotos', 'kwai.KSVerifyRealNameInfo', 'kwai.verifyRealNameInfo', 'component.aliyunVerifyRealNameInfo', 'component.verifyRealNameInfo'];
var multipleCallbacksBridges = ['component.download', 'kwai.download', 'kwai.downloadThirdPartyAPP', 'kwai.startNFC', 'kwaiAd.callAdBridge', 'kwaiAd.callCardHandler', 'pay.startHalfScreenRecharge', 'post.postVideo', 'post.reUploadShopVideo', 'post.selectImage', 'post.uploadShopVideo', 'post.selectMixMediasAndUpload', 'kwaiLive.subscribeChannel'];
var multipleCallbacksBridgeSet = new Set(multipleCallbacksBridges);
var useCallbackBridgeSet = new Set([].concat(invalidResultBridges, multipleCallbacksBridges));

var version = "2.0.7";

var globalConfig = {
  get mode() {
    return getCurrentMode();
  },
  set mode(mode) {
    setCurrentMode(mode);
    console$1.info("You're currently running version ".concat(version, " in ").concat(mode, " mode."));
  }
};
var setGlobalConfig = function setGlobalConfig(nextGlobalConfig) {
  Object.assign(globalConfig, nextGlobalConfig);
};

var $$3 = _export;
var uncurryThis$1 = functionUncurryThis;
var getOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;
var toLength = toLength$4;
var toString$1 = toString$a;
var notARegExp = notARegexp;
var requireObjectCoercible = requireObjectCoercible$8;
var correctIsRegExpLogic = correctIsRegexpLogic;

// eslint-disable-next-line es/no-string-prototype-endswith -- safe
var nativeEndsWith = uncurryThis$1(''.endsWith);
var slice = uncurryThis$1(''.slice);
var min = Math.min;

var CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('endsWith');
// https://github.com/zloirock/core-js/pull/702
var MDN_POLYFILL_BUG = !CORRECT_IS_REGEXP_LOGIC && !!function () {
  var descriptor = getOwnPropertyDescriptor(String.prototype, 'endsWith');
  return descriptor && !descriptor.writable;
}();

// `String.prototype.endsWith` method
// https://tc39.es/ecma262/#sec-string.prototype.endswith
$$3({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {
  endsWith: function endsWith(searchString /* , endPosition = @length */) {
    var that = toString$1(requireObjectCoercible(this));
    notARegExp(searchString);
    var endPosition = arguments.length > 1 ? arguments[1] : undefined;
    var len = that.length;
    var end = endPosition === undefined ? len : min(toLength(endPosition), len);
    var search = toString$1(searchString);
    return nativeEndsWith
      ? nativeEndsWith(that, search, end)
      : slice(that, end - search.length, end) === search;
  }
});

var aCallable = aCallable$9;
var toObject = toObject$b;
var IndexedObject = indexedObject;
var lengthOfArrayLike = lengthOfArrayLike$a;

var $TypeError = TypeError;

// `Array.prototype.{ reduce, reduceRight }` methods implementation
var createMethod = function (IS_RIGHT) {
  return function (that, callbackfn, argumentsLength, memo) {
    aCallable(callbackfn);
    var O = toObject(that);
    var self = IndexedObject(O);
    var length = lengthOfArrayLike(O);
    var index = IS_RIGHT ? length - 1 : 0;
    var i = IS_RIGHT ? -1 : 1;
    if (argumentsLength < 2) while (true) {
      if (index in self) {
        memo = self[index];
        index += i;
        break;
      }
      index += i;
      if (IS_RIGHT ? index < 0 : length <= index) {
        throw $TypeError('Reduce of empty array with no initial value');
      }
    }
    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {
      memo = callbackfn(memo, self[index], index, O);
    }
    return memo;
  };
};

var arrayReduce = {
  // `Array.prototype.reduce` method
  // https://tc39.es/ecma262/#sec-array.prototype.reduce
  left: createMethod(false),
  // `Array.prototype.reduceRight` method
  // https://tc39.es/ecma262/#sec-array.prototype.reduceright
  right: createMethod(true)
};

var $$2 = _export;
var $reduce = arrayReduce.left;
var arrayMethodIsStrict = arrayMethodIsStrict$2;
var CHROME_VERSION = engineV8Version;
var IS_NODE = engineIsNode;

var STRICT_METHOD = arrayMethodIsStrict('reduce');
// Chrome 80-82 has a critical bug
// https://bugs.chromium.org/p/chromium/issues/detail?id=1049982
var CHROME_BUG = !IS_NODE && CHROME_VERSION > 79 && CHROME_VERSION < 83;

// `Array.prototype.reduce` method
// https://tc39.es/ecma262/#sec-array.prototype.reduce
$$2({ target: 'Array', proto: true, forced: !STRICT_METHOD || CHROME_BUG }, {
  reduce: function reduce(callbackfn /* , initialValue */) {
    var length = arguments.length;
    return $reduce(this, callbackfn, length, length > 1 ? arguments[1] : undefined);
  }
});

var transformConfig = function transformConfig(config) {
  var transformers = [];
  var setLegacyBridge = function setLegacyBridge(bridgeToLegacyBridge) {
    transformers.push(function (config) {
      var legacyBridge = bridgeToLegacyBridge[config.bridge];
      if (typeof legacyBridge === 'undefined') {
        return config;
      }
      return _objectSpread2(_objectSpread2({}, config), {}, {
        bridge: legacyBridge
      });
    });
  };
  var setDefaultParams = function setDefaultParams(bridgeToDefaultParams) {
    transformers.push(function (config) {
      var defaultParams = bridgeToDefaultParams[config.bridge];
      if (typeof defaultParams === 'undefined') {
        return config;
      }
      var params = _objectSpread2(_objectSpread2({}, defaultParams), config.params);
      return _objectSpread2(_objectSpread2({}, config), {}, {
        params: params
      });
    });
  };
  if (config.bridge === 'tool.checkAppInstalled') {
    setDefaultParams(_defineProperty({}, config.bridge, {
      identifier: config.params[isAndroid ? 'android' : 'ios']
    }));
  }
  if (isIOS && compareKwaiAppVersion('9.10.11') >= 0) {
    setLegacyBridge({
      'hybrid.getHybridStatus': 'webview.pageContentStatus',
      'hybrid.getAndUpdateHybridDetail': 'webview.pageContentInfo',
      'hybrid.preloadVideoList': 'media.pvList',
      'hybrid.isVideoFullyCached': 'media.vReady'
    });
  }
  if (isIOS && compareKwaiAppVersion('11.1.40') < 0) {
    setLegacyBridge({
      'advertise.startNeoAdVideo': 'kwai.startNeoAdVideo'
    });
  }
  if (isIOS && compareKwaiAppVersion('10.7.20') < 0) {
    setLegacyBridge({
      'merchant.getSidToken': 'kwai.getSidToken'
    });
  }
  if (isAndroid && compareKwaiAppVersion('10.6.50') < 0) {
    setLegacyBridge({
      'ui.setStatusBarStyle': 'kwai.setStatusBarStyle'
    });
  }
  if (compareKwaiAppVersion('10.4.30') < 0 || !isKwaiApp) {
    setLegacyBridge(bridgeToLegacyKwaiBridge);
  }
  if (isIOS && compareKwaiAppVersion('10.4.10') < 0) {
    setDefaultParams({
      'system.startVibrate': {
        strength: 'low',
        duration: 300
      }
    });
  }
  if (compareKwaiAppVersion('10.3.20') < 0 || !isKwaiApp) {
    setLegacyBridge({
      'webview.exitCurrentWebView': "kwai.".concat(isIOS ? 'exitCurrentWebview' : 'exitWebView')
    });
  }
  if (compareKwaiAppVersion('9.6.20') < 0) {
    transformers.push(function (config) {
      var bridge = config.bridge;
      if (!['syncLocationWithPermissionCheck', 'getLocationWithPermissionCheck', 'requestLocationPermissionWithPermissionCheck'].some(function (name) {
        return bridge.endsWith(name);
      })) {
        return config;
      }
      return _objectSpread2(_objectSpread2({}, config), {}, {
        bridge: bridge.replace('WithPermissionCheck', '')
      });
    });
  }
  return transformers.reduce(function (config, transformer) {
    return transformer(config);
  }, config);
};

var _excluded = ["result"];
var getInvocationConfig = function getInvocationConfig(args) {
  var _args = _slicedToArray(args, 3),
    bridge = _args[0],
    _args$ = _args[1],
    params = _args$ === void 0 ? {} : _args$,
    optionsOrCallback = _args[2];
  var _ref = typeof optionsOrCallback === 'function' ? [{}, optionsOrCallback] : [optionsOrCallback !== null && optionsOrCallback !== void 0 ? optionsOrCallback : {}],
    _ref2 = _slicedToArray(_ref, 2),
    options = _ref2[0],
    callback = _ref2[1];
  return {
    initialBridge: bridge,
    initialParams: params,
    bridge: bridge,
    params: params,
    options: options,
    callback: callback
  };
};
var getLegacyErrorMessage = function getLegacyErrorMessage(response) {
  return hasOwnProperty(response, 'error_msg') && typeof response.error_msg === 'string' ? response.error_msg : '';
};
var isIntrinsicAPI = function isIntrinsicAPI(config) {
  return config.bridge.startsWith('yoda.');
};
var invokeAPI = function invokeAPI(config) {
  var bridge = config.bridge,
    params = config.params;
  var _bridge$split = bridge.split('.'),
    _bridge$split2 = _slicedToArray(_bridge$split, 2),
    name = _bridge$split2[1];
  var api = apis[name];
  return api(params);
};
var invokeBridge = function invokeBridge(config) {
  var yoda = getYoda();
  var initialBridge = config.initialBridge,
    bridge = config.bridge,
    params = config.params,
    callback = config.callback;
  var _bridge$split3 = bridge.split('.'),
    _bridge$split4 = _slicedToArray(_bridge$split3, 2),
    namespace = _bridge$split4[0],
    name = _bridge$split4[1];
  if (useCallbackBridgeSet.has(initialBridge)) {
    void yoda.bridge(namespace, name, params, function (response) {
      console$1.info("Received a response from '".concat(bridge, "'"), response);
      callback === null || callback === void 0 ? void 0 : callback(response);
    }, multipleCallbacksBridgeSet.has(initialBridge));
    return Promise.resolve();
  }
  return new Promise(function (resolve, reject) {
    void yoda.bridge(namespace, name, params, function (response) {
      var _globalConfig$errorHa;
      console$1.info("Received a response from '".concat(bridge, "'"), response);
      if (response.result === 1) {
        response.result;
          var data = _objectWithoutProperties(response, _excluded);
        resolve(data);
        return;
      }
      var _response$message = response.message,
        message = _response$message === void 0 ? getLegacyErrorMessage(response) : _response$message;
      var bridgeError = new BridgeError(message, response.result, config);
      (_globalConfig$errorHa = globalConfig.errorHandler) === null || _globalConfig$errorHa === void 0 ? void 0 : _globalConfig$errorHa.call(globalConfig, bridgeError);
      reject(bridgeError);
    });
  });
};
var invoke = /*#__PURE__*/function () {
  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
    var _globalConfig$timeout,
      _len,
      args,
      _key,
      initialConfig,
      config,
      _config$options$timeo,
      timeout,
      baseInvoking,
      data,
      _globalConfig$errorHa2,
      _args2 = arguments;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            for (_len = _args2.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = _args2[_key];
            }
            initialConfig = getInvocationConfig(args);
            if (isYoda()) {
              _context.next = 5;
              break;
            }
            throw new BridgeError(['Cannot invoke bridge'].concat(_toConsumableArray(["'".concat(initialConfig.bridge, "'")]), ['in non-Yoda environment.']).join(' '), 125014, initialConfig);
          case 5:
            config = transformConfig(initialConfig);
            _config$options$timeo = config.options.timeout, timeout = _config$options$timeo === void 0 ? (_globalConfig$timeout = globalConfig.timeout) !== null && _globalConfig$timeout !== void 0 ? _globalConfig$timeout : 0 : _config$options$timeo;
            baseInvoking = isIntrinsicAPI(config) ? invokeAPI(config) : invokeBridge(config);
            if (!(timeout > 0 && Number.isFinite(timeout))) {
              _context.next = 14;
              break;
            }
            _context.next = 11;
            return Promise.race([baseInvoking, delay(timeout).then(function () {
              return Promise.reject(new BridgeError('Bridge invocation timed out.', 125010, config));
            })]);
          case 11:
            _context.t0 = _context.sent;
            _context.next = 17;
            break;
          case 14:
            _context.next = 16;
            return baseInvoking;
          case 16:
            _context.t0 = _context.sent;
          case 17:
            data = _context.t0;
            return _context.abrupt("return", data);
          case 21:
            _context.prev = 21;
            _context.t1 = _context["catch"](0);
            if (isBridgeError(_context.t1)) {
              (_globalConfig$errorHa2 = globalConfig.errorHandler) === null || _globalConfig$errorHa2 === void 0 ? void 0 : _globalConfig$errorHa2.call(globalConfig, _context.t1);
            }
            throw _context.t1;
          case 25:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[0, 21]]);
  }));
  return function invoke() {
    return _ref3.apply(this, arguments);
  };
}();

var legacyEventTypes = new Set([
// page lifecycle
'native_visible', 'native_background', 'native_foreground',
// IOS only
'native_will_leave', 'native_leave', 'native_reentry',
// page load event
'native_loadPage', 'native_pageFinished',
// login
'native_userDidLogin', 'native_userDidLogout',
// network
'native_networkChanged',
// screenshot
'native_screenshot_event', 'native_web_view_display_mode_changed', 'native_share_dialog_event', 'native_shake',
// dark mode
'native_darkModeChange',
/*
 * physical-back-button
 * Android only
 */
'physical-back-button']);
var addListener$1 = /*#__PURE__*/function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(type, listener, options) {
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (!legacyEventTypes.has(type)) {
              _context.next = 4;
              break;
            }
            _context.next = 3;
            return invoke('kwai.on', {
              type: type,
              handler: listener
            });
          case 3:
            return _context.abrupt("return");
          case 4:
            _context.next = 6;
            return invoke('event.addEventListener', {
              /**
               * 1. 重构事件机制
               * 2. 重构摇一摇事件
               */
              type: typeof (options === null || options === void 0 ? void 0 : options.data) === 'undefined' ? type : {
                type: type,
                options: options.data
              },
              listener: listener
            });
          case 6:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return function addListener(_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();
var removeListener$1 = /*#__PURE__*/function () {
  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(type, listener) {
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            if (!legacyEventTypes.has(type)) {
              _context2.next = 4;
              break;
            }
            _context2.next = 3;
            return invoke('kwai.off', {
              type: type,
              handler: listener
            });
          case 3:
            return _context2.abrupt("return");
          case 4:
            _context2.next = 6;
            return invoke('event.removeEventListener', {
              type: type,
              listener: listener
            });
          case 6:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return function removeListener(_x4, _x5) {
    return _ref2.apply(this, arguments);
  };
}();

var global$1 = global$t;
var fails = fails$w;
var uncurryThis = functionUncurryThis;
var toString = toString$a;
var trim = stringTrim.trim;
var whitespaces = whitespaces$2;

var $parseInt$1 = global$1.parseInt;
var Symbol$1 = global$1.Symbol;
var ITERATOR = Symbol$1 && Symbol$1.iterator;
var hex = /^[+-]?0x/i;
var exec = uncurryThis(hex.exec);
var FORCED = $parseInt$1(whitespaces + '08') !== 8 || $parseInt$1(whitespaces + '0x16') !== 22
  // MS Edge 18- broken with boxed symbols
  || (ITERATOR && !fails(function () { $parseInt$1(Object(ITERATOR)); }));

// `parseInt` method
// https://tc39.es/ecma262/#sec-parseint-string-radix
var numberParseInt = FORCED ? function parseInt(string, radix) {
  var S = trim(toString(string));
  return $parseInt$1(S, (radix >>> 0) || (exec(hex, S) ? 16 : 10));
} : $parseInt$1;

var $$1 = _export;
var $parseInt = numberParseInt;

// `parseInt` method
// https://tc39.es/ecma262/#sec-parseint-string-radix
$$1({ global: true, forced: parseInt != $parseInt }, {
  parseInt: $parseInt
});

var eventMQ = {};
function addListener(typeStr, listener, callbackId) {
  var targetTypeListener = eventMQ[typeStr] || {
    callbackId: callbackId,
    eventRecord: {}
  };
  var id = getUUId();
  listener.__yodaCallbackId__[typeStr] = String(id);
  targetTypeListener.eventRecord[id] = listener;
  eventMQ[typeStr] = targetTypeListener;
}
function createCb(type) {
  return function (ret) {
    var targetTypeListener = eventMQ[type];
    Object.keys((targetTypeListener === null || targetTypeListener === void 0 ? void 0 : targetTypeListener.eventRecord) || {}).forEach(function (key) {
      return targetTypeListener.eventRecord[Number(key)](JSON.parse(JSON.stringify(ret)));
    });
  };
}
function getCallbackIdByType(type) {
  var targetTypeListener = eventMQ[type];
  return getEventIdByNumber(targetTypeListener.callbackId);
}
function removeListener(typeStr, listener) {
  var targetTypeListener = eventMQ[typeStr];
  var callbackId = listener.__yodaCallbackId__[typeStr];
  delete targetTypeListener.eventRecord[Number(callbackId)];
  delete listener.__yodaCallbackId__[typeStr];
  /*
   * 如果当前不存在监听事件，完全有移除
   * 有新监听，则重建监听对象，防止callbackid 异常
   */
  if (!hasListener(typeStr)) {
    delete eventMQ[typeStr];
  }
}
function hasListener(typeStr) {
  var targetTypeListener = eventMQ[typeStr];
  return Object.keys((targetTypeListener === null || targetTypeListener === void 0 ? void 0 : targetTypeListener.eventRecord) || {}).length > 0;
}

var isObject = isObject$j;

var floor = Math.floor;

// `IsIntegralNumber` abstract operation
// https://tc39.es/ecma262/#sec-isintegralnumber
// eslint-disable-next-line es/no-number-isinteger -- safe
var isIntegralNumber$1 = Number.isInteger || function isInteger(it) {
  return !isObject(it) && isFinite(it) && floor(it) === it;
};

var $ = _export;
var isIntegralNumber = isIntegralNumber$1;

// `Number.isInteger` method
// https://tc39.es/ecma262/#sec-number.isinteger
$({ target: 'Number', stat: true }, {
  isInteger: isIntegralNumber
});

var Direction;
(function (Direction) {
  Direction["x"] = "x";
  Direction["y"] = "y";
  Direction["z"] = "z";
})(Direction || (Direction = {}));

var SHAKE_EVENT = 'shaked';
var SHAKE_START_EVENT = 'shake-start';
var SHAKE_END_EVENT = 'shake-end';
var JUDGE_STOP_TIME = 1000;
var DEFAULT_SETTING = {
  level: 2,
  times: 3,
  intervalTime: 1300,
  iOSIntervalTime: 500,
  androidIntervalTime: 1300,
  isEmitImmediately: true
};
var ANDROID_LEVEL_MAP = {
  1: {
    basic: 13,
    total: 450
  },
  2: {
    basic: 16,
    total: 700
  },
  3: {
    basic: 20,
    total: 1100
  }
};
var IOS_LEVEL_MAP = {
  1: {
    basic: 9,
    total: 220
  },
  2: {
    basic: 12,
    total: 400
  },
  3: {
    basic: 14,
    total: 500
  }
};

var ShakeHandler = /*#__PURE__*/function () {
  function ShakeHandler(props) {
    var _this = this;
    _classCallCheck(this, ShakeHandler);
    this.shakeConfig = {};
    this.shakedArr = [];
    this.isChecking = false;
    this.nowStatus = {
      x: 0,
      y: 0,
      z: 0
    };
    this.lastStatus = {
      x: 0,
      y: 0,
      z: 0
    };
    this.stopMark = null;
    this.checkIsShakeStoped = false;
    this.notEmitButShaked = true;
    this.isShakeStarted = false;
    this.isAndroid = false;
    this.isArrivedConfigStandard = false;
    this.levelMap = ANDROID_LEVEL_MAP;
    this.dispatchEvent = null;
    this.setStillShaking = debounce(function () {
      return _this.notShaking();
    }, JUDGE_STOP_TIME);
    this.dispatchEvent = props.dispatchEvent;
    this.isAndroid = props.isAndroid;
    this.levelMap = this.isAndroid ? ANDROID_LEVEL_MAP : IOS_LEVEL_MAP;
  }
  _createClass(ShakeHandler, [{
    key: "setOptions",
    value: function setOptions(options) {
      if (options) {
        this.shakeConfig = _objectSpread2(_objectSpread2({}, DEFAULT_SETTING), options);
        // IOS 和 Android重力感应的灵敏度等都不太一样，数值分端调试，并在次数上允许小量误差
        this.shakeConfig.times = this.isAndroid ? this.shakeConfig.times - 1 : (this.shakeConfig.times - 1) * 2;
        this.shakeConfig.intervalTime = this.isAndroid ? this.shakeConfig.androidIntervalTime : this.shakeConfig.iOSIntervalTime;
      } else {
        this.shakeConfig = _objectSpread2({}, DEFAULT_SETTING);
      }
    }
  }, {
    key: "resetShakeStatus",
    value: function resetShakeStatus(isStoped) {
      this.shakedArr = [];
      this.isChecking = false;
      this.notEmitButShaked = false;
      if (isStoped) {
        this.isArrivedConfigStandard = false;
        this.isShakeStarted = false;
      }
    }
  }, {
    key: "checkIsShake",
    value: function checkIsShake(result) {
      var _this2 = this;
      this.isChecking = true;
      Object.keys(this.nowStatus).forEach(function (key) {
        return _this2.nowStatus[key] = result[key] * 9.8;
      });
      if (this.judgeArrivedTerminal()) {
        this.lastStatus = {
          x: 0,
          y: 0,
          z: 0
        };
        this.handleShakeHappend();
        this.setStillShaking();
        this.isChecking = false;
        return;
      }
      if (this.judgeLikelyShake()) {
        this.handleArrivedStandard();
      } else {
        this.isChecking = false;
      }
    }
  }, {
    key: "judgeLikelyShake",
    value: function judgeLikelyShake() {
      var _this$nowStatus = this.nowStatus,
        x = _this$nowStatus.x,
        y = _this$nowStatus.y,
        z = _this$nowStatus.z;
      var _this$levelMap$this$s = this.levelMap[this.shakeConfig.level],
        basic = _this$levelMap$this$s.basic,
        total = _this$levelMap$this$s.total;
      return x > basic || y > basic || z > basic || x * x + y * y + z * z > total;
    }
    // 用加速度变化最大的方向作为判断依据，确认加速度是否反向，从而判定是否到达一次摇动的端点
  }, {
    key: "judgeArrivedTerminal",
    value: function judgeArrivedTerminal() {
      var _this3 = this;
      var maxDiffVal = 0;
      var diffVal = 0;
      var toJudgeKey = Direction.x;
      // 获取加速度变化最大的方向
      Object.keys(this.nowStatus).forEach(function (key) {
        diffVal = Math.abs(_this3.lastStatus[key] - _this3.nowStatus[key]);
        if (maxDiffVal < diffVal) {
          toJudgeKey = key;
          maxDiffVal = diffVal;
        }
      });
      if (this.lastStatus[toJudgeKey] * this.nowStatus[toJudgeKey] < 0) {
        return true;
      }
      return false;
    }
  }, {
    key: "handleArrivedStandard",
    value: function handleArrivedStandard() {
      this.lastStatus = _objectSpread2({}, this.nowStatus);
      this.checkIsShakeStoped = false;
      this.setStillShaking();
    }
  }, {
    key: "handleShakeHappend",
    value: function () {
      var _handleShakeHappend = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (this.isShakeStarted) {
                  _context.next = 3;
                  break;
                }
                _context.next = 3;
                return this.dispatchEvent({
                  type: SHAKE_START_EVENT,
                  data: {}
                });
              case 3:
                this.isShakeStarted = true;
                this.updateShakedArr(new Date().getTime());
              case 5:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
      function handleShakeHappend() {
        return _handleShakeHappend.apply(this, arguments);
      }
      return handleShakeHappend;
    }()
  }, {
    key: "notShaking",
    value: function notShaking() {
      this.checkIsShakeStoped = true;
      this.checkDoDelayEmit();
    }
  }, {
    key: "updateShakedArr",
    value: function updateShakedArr(newTimeStamp) {
      var intervalTime = this.shakeConfig.intervalTime;
      if (this.shakedArr.length > 0) {
        if (newTimeStamp - this.shakedArr[this.shakedArr.length - 1] <= intervalTime) {
          this.shakedArr.push(newTimeStamp);
        } else {
          this.shakedArr = [];
          this.isChecking = false;
        }
      } else {
        this.shakedArr.push(newTimeStamp);
      }
      // 允许少许误差
      if (this.shakedArr.length >= this.shakeConfig.times) {
        this.handleArrivedEmitStandard();
      } else {
        this.isChecking = false;
      }
    }
  }, {
    key: "handleArrivedEmitStandard",
    value: function handleArrivedEmitStandard() {
      this.isArrivedConfigStandard = true;
      this.resetShakeStatus();
      if (this.shakeConfig.isEmitImmediately) {
        this.dispatchEvent({
          type: SHAKE_EVENT,
          data: {}
        });
      } else {
        this.notEmitButShaked = true;
      }
    }
  }, {
    key: "checkDoDelayEmit",
    value: function checkDoDelayEmit() {
      if (this.notEmitButShaked && this.checkIsShakeStoped && !this.shakeConfig.isEmitImmediately) {
        this.dispatchEvent({
          type: SHAKE_EVENT,
          data: {}
        });
      }
      if (this.isShakeStarted) {
        this.dispatchEvent({
          type: SHAKE_END_EVENT,
          data: {
            isArrivedConfigStandard: this.isArrivedConfigStandard
          }
        });
      }
      this.resetShakeStatus(true);
    }
  }]);
  return ShakeHandler;
}();

var interval = 60;
var shakeHandler = null;
var checkIsShake = null;
var startMonitorShake = /*#__PURE__*/function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
    var yoda, startAccelerometerRes, eventRes;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            yoda = getYoda(); /*
                               * Const startAccelerometerRes = await yoda.system.startAccelerometer({
                               *     interval,
                               * });
                               */
            _context.next = 3;
            return yoda.bridge('system', 'startAccelerometer', {
              interval: interval
            });
          case 3:
            startAccelerometerRes = _context.sent;
            checkIsShake = shakeHandler.checkIsShake.bind(shakeHandler);
            // Const eventRes = await yoda.event.addEventListener('accelerometer-change', checkIsShake)
            _context.next = 7;
            return yoda.bridge('event', 'addEventListener', {
              type: 'accelerometer-change',
              listener: checkIsShake
            });
          case 7:
            eventRes = _context.sent;
            if (startAccelerometerRes.result === 1 && eventRes.result !== 1) {
              stopMonitorShake();
            }
            if (!(startAccelerometerRes.result !== 1 || eventRes.result !== 1)) {
              _context.next = 11;
              break;
            }
            throw new Error("\u6447\u4E00\u6447\u521D\u59CB\u5316\u5931\u8D25\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5\u3002AccelerometerRes:".concat(JSON.stringify(startAccelerometerRes), ";eventRes:").concat(JSON.stringify(eventRes)));
          case 11:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return function startMonitorShake() {
    return _ref.apply(this, arguments);
  };
}();
var validateOption = function validateOption(options) {
  if (!options) {
    return;
  }
  var level = options.level,
    times = options.times,
    isEmitImmediately = options.isEmitImmediately;
  // Android 和 iOS 级别类型一致
  if (level !== undefined && !ANDROID_LEVEL_MAP[level]) {
    throw new Error('请传入正确的level，可选值为1、2、3');
  }
  if (times !== undefined) {
    if (!Number.isInteger(times)) {
      throw new Error('times应为整数');
    }
    if (times < 1) {
      throw new Error('times应大于1');
    }
  }
  if (isEmitImmediately !== undefined) {
    if (typeof isEmitImmediately !== 'boolean') {
      throw new Error('isEmitImmediately应为boolean类型');
    }
  }
};
var initShakeHandler = /*#__PURE__*/function () {
  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(options) {
    var yoda, dispatchEvent;
    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            yoda = getYoda();
            _context3.next = 3;
            return checkCanUse('system', 'startAccelerometer');
          case 3:
            if (_context3.sent) {
              _context3.next = 5;
              break;
            }
            throw new Error('当前APP暂不支持摇一摇');
          case 5:
            if (!shakeHandler) {
              _context3.next = 7;
              break;
            }
            throw new Error('当前存在尚未结束监听的摇一摇');
          case 7:
            dispatchEvent = /*#__PURE__*/function () {
              var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(params) {
                return _regeneratorRuntime().wrap(function _callee2$(_context2) {
                  while (1) {
                    switch (_context2.prev = _context2.next) {
                      case 0:
                        return _context2.abrupt("return", yoda.bridge('event', 'dispatchEvent', params));
                      case 1:
                      case "end":
                        return _context2.stop();
                    }
                  }
                }, _callee2);
              }));
              return function dispatchEvent(_x2) {
                return _ref3.apply(this, arguments);
              };
            }();
            shakeHandler = new ShakeHandler({
              dispatchEvent: dispatchEvent,
              isAndroid: isAndroid
            });
            validateOption(options);
            shakeHandler.setOptions(options);
            shakeHandler.resetShakeStatus();
            _context3.next = 14;
            return startMonitorShake.bind(yoda)();
          case 14:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
  return function initShakeHandler(_x) {
    return _ref2.apply(this, arguments);
  };
}();
var stopMonitorShake = /*#__PURE__*/function () {
  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {
    var yoda, eventRes, stopRes;
    return _regeneratorRuntime().wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            yoda = getYoda();
            _context4.next = 3;
            return checkCanUse('system', 'stopAccelerometer');
          case 3:
            if (_context4.sent) {
              _context4.next = 5;
              break;
            }
            throw new Error('当前APP暂不支持摇一摇');
          case 5:
            shakeHandler = null;
            // Const eventRes = await yoda.event.removeEventListener('accelerometer-change', checkIsShake)
            _context4.next = 8;
            return yoda.bridge('event', 'removeEventListener', {
              type: 'accelerometer-change',
              listener: checkIsShake
            });
          case 8:
            eventRes = _context4.sent;
            _context4.next = 11;
            return yoda.bridge('system', 'stopAccelerometer', {});
          case 11:
            stopRes = _context4.sent;
            if (!(eventRes.result !== 1 || stopRes.result !== 1)) {
              _context4.next = 14;
              break;
            }
            throw new Error("\u6447\u4E00\u6447\u505C\u6B62\u76D1\u542C\u5931\u8D25\u3002stopRes:".concat(JSON.stringify(stopRes), ";eventRes:").concat(JSON.stringify(eventRes)));
          case 14:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));
  return function stopMonitorShake() {
    return _ref4.apply(this, arguments);
  };
}();

var yodaCustomEvent = {
  shaked: SHAKE_EVENT
};
var eventToInitMap = _defineProperty({}, yodaCustomEvent.shaked, initShakeHandler);
var handleEventUnregisterMap = _defineProperty({}, yodaCustomEvent.shaked, stopMonitorShake);

// 添加事件监听
var addEventListener = function addEventListener(params, callback) {
  var _eventToInitMap$type;
  var baseType = params.type,
    listener = params.listener;
  var type = typeof baseType === 'string' ? baseType : baseType.type;
  var options = typeof baseType === 'string' ? {} : baseType.options;
  (_eventToInitMap$type = eventToInitMap[type]) === null || _eventToInitMap$type === void 0 ? void 0 : _eventToInitMap$type.call(eventToInitMap, options);
  !listener.__yodaCallbackId__ && (listener.__yodaCallbackId__ = {});
  // 保持原有判断逻辑不变，若当前lisetener
  if (listener.__yodaCallbackId__[type]) {
    throw new Error("addEventListener ".concat(type, " \u7684 listener \u5DF2\u7ECF\u88AB\u7ED1\u5B9A\u8FC7\u4E86"));
  }
  var registerForNativeListener = hasListener(type);
  var callBackId = null;
  var returnPromise = Promise.resolve();
  // Call native 新增监听
  if (!registerForNativeListener) {
    var deferredIns = deferredInvoke.pushMQ(true, createCb(type), true);
    callBackId = parseInt(getEventIdOnlyNumber(deferredIns.traceId));
    returnPromise = invoke$1({
      namespace: 'event',
      name: 'addEventListener',
      params: {
        type: type,
        listener: String(deferredIns.traceId)
      },
      callback: callback
    });
  } else {
    // 前端维护，直接回调
    isFunction(callback) && callback({
      result: 1
    });
  }
  addListener(type, listener, callBackId);
  return returnPromise;
};
// 移除事件监听
var removeEventListener = function removeEventListener(params, callback) {
  var _handleEventUnregiste;
  var type = params.type,
    listener = params.listener;
  (_handleEventUnregiste = handleEventUnregisterMap[type]) === null || _handleEventUnregiste === void 0 ? void 0 : _handleEventUnregiste.call(handleEventUnregisterMap);
  var resultPromise = Promise.resolve();
  if (listener.__yodaCallbackId__) {
    var callbackId = getCallbackIdByType(type);
    // 移除前端监听
    removeListener(type, listener);
    // 若当前不包含监听
    if (!hasListener(type)) {
      // 移除native 侧监听
      resultPromise = invoke$1({
        namespace: 'event',
        name: 'removeEventListener',
        params: {
          type: type,
          listener: callbackId
        },
        callback: callback
      });
      // 移除js 侧监听
      deferredInvoke.removeMQ(callbackId);
    }
  }
  return resultPromise;
};

/**
 * 删除 yoda 对象
 * 1. 事件分发移至 invoke
 * 2. 重构摇一摇事件
 * 3. 移除所有内部调用
 */
var yoda = {
  bridge: function bridge(namespace, name, params, callback) {
    var multiCallback = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
    var callParams = {
      namespace: namespace,
      name: name,
      params: params,
      multiCallback: multiCallback,
      callback: callback
    };
    if (namespace === 'event') {
      if (name === 'addEventListener') {
        return addEventListener(params, callback);
      }
      if (name === 'removeEventListener') {
        return removeEventListener(params, callback);
      }
    }
    // 兼容 @wangzhaoqi 9920 调用一个不存在的bridge 无法回调问题
    if (compareKwaiAppVersion('9.9.20') === 0 && isAndroid) {
      return invokeAndroid9920(callParams);
    }
    return invoke$1(callParams);
  }
};
// 缓存yoda对象
setYoda(yoda);
setContainer({
  invoke: invoke,
  addListener: addListener$1,
  removeListener: removeListener$1
});

exports.addListener = addListener$1;
exports.invoke = invoke;
exports.isBridgeError = isBridgeError;
exports.removeListener = removeListener$1;
exports.setGlobalConfig = setGlobalConfig;
exports.version = version;

Object.defineProperty(exports, '__esModule', { value: true });

}));
