const debug = require('debug')('cdn-upload');
const { getArgv } = require('./utils/argv.js');
const { jsonStringify } = require('./utils/util.js');
const { getArgvFromPrompt } = require('./utils/prompt.js');
const { initHelpDoc } = require('./utils/doc.js');
const { getTokenFromCache } = require('./utils/token-cache.js');
const Upload = require('./upload.js');

/**
 * 通过命令行方式上传文件
 */
module.exports = class CmdUpload {
  async start() {
    // 1. 命令行帮助文档，仅当执行 kcdn-upload 和 kcdn-upload --help 时打印
    initHelpDoc();

    // 2. 获取命令行参数
    let params = this.getArgv() || {};

    // 3. 如果有pid但是无token，token从缓存中读取
    const { pid, token } = params;
    if (pid && !token) {
      params.token = getTokenFromCache(pid) || '';
    }

    // 4. 如果无pid或token，命令行交互式提醒输入
    if (!pid || !token) {
      let isError = false;
      const promptParams = await getArgvFromPrompt(params).catch(e => {
        isError = true;
        process.exit(100);
      });
      if (isError) return;

      params = { ...params, ...(promptParams || {}) };
    }

    // 5. 上传文件
    return this.upload(params);
  }

  // 上传文件
  upload(params) {
    const upload = new Upload(params);
    return upload.start();
  }

  /**
   * 获取命令行参数。params参数格式如下：
   *  {
   *    files: ['dist'],
   *    exitOnApiError: 'unknown',
   *    cdnDir: '/test/',
   *    pid: 'xxx',
   *    token: '11379_***',
   *    allowRewrite: 'false',
   *    allowHash: 'false'
   * }
   */
  getArgv() {
    const params = getArgv() || {};
    debug('【命令行参数】', jsonStringify(params));

    return {
      ...params,

      maxRetryTime: 10, // 失败重试次数，默认 10次
      retryDelay: 1000, // 失败重试间隔，单位ms。默认 1s
      mode: 'cmd', // 通过cmd方式上传文件
    };
  }
};
