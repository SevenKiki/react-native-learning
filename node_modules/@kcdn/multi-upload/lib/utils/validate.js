const fs = require('fs');
const path = require('path');
const { promises } = require('fs');

/**
 * 判断文件是否存在
 *  @param {String} file  文件路径。如: ./test/xxx.txt
 * @return {Promise => Boolean}
 */
exports.checkFileExist = async file => {
  if (!file) return false;
  return new Promise((resolve, reject) => {
    fs.access(file, fs.F_OK, err => {
      if (err) return resolve(false);
      return resolve(true);
    });
  });
  // return promises.access(file).then(() => true).catch(() => false);
};

/**
 * 判断文件是否为空文件
 *  @param {String} file 文件路径。如: ./test/xxx.txt
 * @return {Promise => Boolean}
 */
exports.checkFileEmpty = async file => {
  if (!file) return false;
  return new Promise((resolve, reject) => {
    fs.stat(file, (err, stat) => {
      if (err) return resolve(false);
      return resolve(!stat || !stat.size);
    });
  });

  // NOTE: 部分流水线Docker环境预装的node版本为8.9.4，不支持promise.stat写法
  // return promises.stat(file).then(stat => !stat || !stat.size).catch(() => false);
};

/**
 * 检查cdn目标路径cdnDir是否合法。路径应以 / 或者 目录开头，如: /dist 或 dist
 * @param {String} targetDir cdn目录
 * @return {Boolean}
 */
exports.validateCdnDir = targetDir => {
  return !(/\.[/\\]/.test(targetDir) || /\.\./.test(targetDir));
};

/**
 * 校验文件名是否合法。规则：
    长度为 1 ~ 255个字符，文件名不能有中文, 只能包含数字 [0-9] 英文字母 [a-zA-Z] 中划线 - 下划线 _ 波浪线 ~ 点 . ，且开头不能是中划线 -， 点 .
 * @param {String} file 文件路径
 * @returns {Object} { isValid, message }
 */
exports.checkFileNameValid = file => {
  const filename = path.basename(file);

  const filenamePattern = /^([a-zA-Z0-9_~][a-zA-Z0-9-_.~]{0,254})$/;
  const isValid = filenamePattern.test(filename);
  const message =
    '文件名校验不通过。文件名不能有中文, 只能包含数字[0-9]、英文字母[a-zA-Z]、中划线(-)、下划线(_)、波浪线(~)、点(.)，且开头不能是中划线(-)和点(.)';
  return {
    isValid: isValid,
    message,
  };
};
