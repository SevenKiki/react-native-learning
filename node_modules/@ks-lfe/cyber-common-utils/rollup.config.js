// 支持图片直接import，小文件通过base 64内联
import url from '@rollup/plugin-url'
// 支持json文件直接import
import json from '@rollup/plugin-json'
// https://github.com/egoist/rollup-plugin-esbuild 将TS/ESNext转化成ES6，并进行压缩
import esbuild from 'rollup-plugin-esbuild'
// https://github.com/btd/rollup-plugin-visualizer 打包体积可视化分析
import { visualizer } from 'rollup-plugin-visualizer'
// 引用外部库，需要支持CommonJS模块
import commonjs from '@rollup/plugin-commonjs'
// 处理import和require
import nodeResolve from '@rollup/plugin-node-resolve'
// 压缩
import { terser } from 'rollup-plugin-terser'
import babel from '@rollup/plugin-babel'
// typescript 支持
import typescript from "rollup-plugin-typescript2";
import clear from 'rollup-plugin-clear';
// import gzipPlugin from 'rollup-plugin-gzip';

export default {
    input: 'src/index.ts',
    plugins: [
        clear({
            targets: ['./lib', './stats.html']
        }),
        nodeResolve(),
        commonjs(),
        typescript({
            tsconfig: './tsconfig.json'
        }),
        esbuild({
            target: 'esnext',
            minify: true,
            jsx: 'preserve',
            tsconfig: './tsconfig.json'
        }),
        babel({
            babelHelpers: 'runtime',
            extensions: ['.js', '.jsx', '.es6', '.es', '.mjs', '.ts', '.tsx'],
            presets: [
                ['@babel/preset-env', { modules: false }],
                "@babel/preset-typescript",
                ["@babel/preset-react", { "runtime": "automatic" }]
            ],
            plugins: [
                [
                    '@babel/plugin-transform-runtime',
                    { useESModules: true }
                ]
            ]
        }),
        json(),
        url(),
        // terser(),
        // gzipPlugin(),
        process.env.ANALYZER && visualizer(
            {
                open: true,
                gzipSize: true,
                brotliSize: true,
            }
        )
    ],
    external: [
        /jest.config.ts/
    ],

    output: [
        {
            // banner,
            dir: `lib`,
            format: 'esm',
            sourcemap: true,
            // plugins: [
            //     terser(),
            // ]
        }
    ]
}