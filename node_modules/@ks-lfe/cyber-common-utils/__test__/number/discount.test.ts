/**
 * 1、折扣 = 价格 / 原价
 * 2、0 < 折扣 < 10，超出范围返回空
 * 3、小数点后一位向上取整（如0.13=0.2折）
 * 4、保证精度问题
 */
import { getDiscount } from "../../src"

test('折扣 = 价格 / 原价', () => {
    expect(getDiscount(1, 10)).toBe('1')
})
test('折扣 = 价格 / 原价', () => {
    expect(getDiscount(2, 10)).toBe('2')
})
test('折扣 = 价格 / 原价', () => {
    expect(getDiscount(2, 100)).toBe('0.2')
})
test('折扣 = 价格 / 原价', () => {
    expect(getDiscount(45, 100)).toBe('4.5')
})
test('折扣 = 价格 / 原价', () => {
    expect(getDiscount(1, 2)).toBe('5')
})
test('折扣 = 价格 / 原价', () => {
    expect(getDiscount(1, 3)).toBe('3.4')
})
test('折扣 = 价格 / 原价', () => {
    expect(getDiscount(1, 4)).toBe('2.5')
})
test('折扣 = 价格 / 原价', () => {
    expect(getDiscount(0.98, 1)).toBe('9.8')
})
test('小数点后一位向上取整', () => {
    expect(getDiscount(455, 1000)).toBe('4.6')
})
test('小数点后一位向上取整', () => {
    expect(getDiscount(891, 1000)).toBe('9')
})
test('0 < 折扣 < 1', () => {
    expect(getDiscount(10, 10)).toBe('')
})
test('0 < 折扣 < 1', () => {
    expect(getDiscount(0, 10)).toBe('')
})
test('0 < 折扣 < 1', () => {
    expect(getDiscount(-1, 10)).toBe('')
})
test('0 < 折扣 < 1', () => {
    expect(getDiscount(11, 10)).toBe('')
})
test('0 < 折扣 < 1', () => {
    expect(getDiscount('abc', 'efd')).toBe('')
})