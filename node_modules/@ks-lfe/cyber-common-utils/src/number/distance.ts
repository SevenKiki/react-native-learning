/**
 * 距离格式化
 * 1. 距离在(0, 1km)内，展示 xxx m，保留整数
 * 2. 距离> 1km，展示实际距离x.x km，四舍五入，保留一位小数，若最后小数后最后一位为0，不显示
 * @param { number } distance 
 * @returns { string }
 * 
 * @example getDistance(698) -- 698m
 * @example getDistance(3880) -- 3.9km
 * @example getDistance(3980) -- 4km
 */
export function getDistance(distance: number): string {
    try {
        if (distance <= 0) {
            return '';
        }
        if (distance > 1000) {
            const distanceStr = (distance / 1000).toFixed(1);
            if (distanceStr[distanceStr.length - 1] === '0') {
                return distanceStr.substring(0, distanceStr.length - 2) + 'km';
            }
            return distanceStr + 'km';
        }
        return distance.toFixed(0) + 'm';
    } catch (e) {
        console.error(e);
        return '';
    }
}
