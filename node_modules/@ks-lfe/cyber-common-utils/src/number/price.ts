/**
 * 价格缩写
 * @param { number } value 价格，以分为单位
 * @returns { string }
 */
const roundPrice = (value: number): string => {
    try {
        const sizes = ['', '万', '亿', '万亿'];
        const i = Math.max(Math.floor((String(value).length - 6) / 4) + 1, 0)
        const unit = sizes[i];
        let priceStr = (Math.floor(value / (Math.pow(10000, i))) / 100).toFixed(2)
        if (
            priceStr[priceStr.length - 1] === '0' &&
            priceStr[priceStr.length - 2] === '0'
        ) {
            priceStr = priceStr.substring(0, priceStr.length - 3);
        }
        else if (priceStr[priceStr.length - 1] === '0') {
            priceStr = priceStr.substring(0, priceStr.length - 1);
        }

        const plus: boolean = value % (Math.pow(10000, i)) === 0 ? false : true;
        return plus
            ? `${priceStr}${unit}+`
            : `${priceStr}${unit}`;
    } catch (e) {
        console.error(e);
        return '';
    }
};

/**
 * 价格格式化
 * 最多保留两位小数，若小数点后最后一位为0，不显示，如7.50元，应显示为7.5元
 * @param {number} price 原始价格，分为单位
 * @param {boolean} isAccurate 是否显示精确价格（不约数），默认为false
 * @returns {string}
 */
export function getPrice(price: number, isAccurate = false): string {
    try {
        const priceNum = Number(price)
        if (priceNum <= 0) {
            return '';
        }
        const priceStr = (priceNum / 100).toFixed(2);
        if (priceNum < 1000000 || isAccurate) {
            if (
                priceStr[priceStr.length - 1] === '0' &&
                priceStr[priceStr.length - 2] === '0'
            ) {
                return priceStr.substring(0, priceStr.length - 3);
            }
            if (priceStr[priceStr.length - 1] === '0') {
                return priceStr.substring(0, priceStr.length - 1);
            }
        } else if (!isAccurate) {
            return roundPrice(priceNum);
        }
        return priceStr;
    } catch (e) {
        console.error(e);
        return '';
    }
}
