"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const CommonList = (props, ref) => {
  const listRef = (0, _react.useRef)(null);
  (0, _react.useImperativeHandle)(ref, () => ({
    scrollToEnd: params => {
      var _listRef$current;

      (_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : _listRef$current.scrollToEnd(params);
    },
    scrollToIndex: params => {
      var _listRef$current2;

      (_listRef$current2 = listRef.current) === null || _listRef$current2 === void 0 ? void 0 : _listRef$current2.scrollToIndex(params);
    },
    scrollToItem: params => {
      var _listRef$current3;

      (_listRef$current3 = listRef.current) === null || _listRef$current3 === void 0 ? void 0 : _listRef$current3.scrollToItem(params);
    },
    scrollToOffset: params => {
      var _listRef$current4;

      (_listRef$current4 = listRef.current) === null || _listRef$current4 === void 0 ? void 0 : _listRef$current4.scrollToOffset(params);
    }
  }));
  const {
    itemVisiblePercentThreshold = 1,
    onItemShow,
    onItemHide
  } = props;

  const viewConfigRef = _react.default.useRef({
    itemVisiblePercentThreshold
  });

  const onViewableItemChange = (0, _react.useRef)(_ref => {
    let {
      changed
    } = _ref;
    changed.forEach(viewToken => {
      if (typeof viewToken.index === 'number') {
        if (viewToken.isViewable) {
          onItemShow && onItemShow(viewToken.item, viewToken.index);
        } else {
          onItemHide && onItemHide(viewToken.item, viewToken.index);
        }
      }
    });
  });
  return /*#__PURE__*/_react.default.createElement(_reactNative.FlatList, _extends({
    ref: listRef,
    showsHorizontalScrollIndicator: false,
    showsVerticalScrollIndicator: false,
    onViewableItemsChanged: onViewableItemChange.current,
    viewabilityConfig: viewConfigRef.current
  }, props));
};

var _default = /*#__PURE__*/_react.default.memo( /*#__PURE__*/(0, _react.forwardRef)(CommonList));

exports.default = _default;
//# sourceMappingURL=index.js.map