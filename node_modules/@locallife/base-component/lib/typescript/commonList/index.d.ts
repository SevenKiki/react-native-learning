import React from 'react';
import { FlatListProps } from 'react-native';
interface IProps<T = any> extends FlatListProps<T> {
    itemVisiblePercentThreshold?: number;
    onItemShow?: (item: T, index: number) => void;
    onItemHide?: (item: T, index: number) => void;
}
interface FlatListHandler {
    scrollToEnd: (params?: {
        animated?: boolean | null;
    }) => void;
    /**
     * Scrolls to the item at the specified index such that it is positioned in the viewable area
     * such that viewPosition 0 places it at the top, 1 at the bottom, and 0.5 centered in the middle.
     * Cannot scroll to locations outside the render window without specifying the getItemLayout prop.
     */
    scrollToIndex: (params: {
        animated?: boolean | null;
        index: number;
        viewOffset?: number;
        viewPosition?: number;
    }) => void;
    /**
     * Requires linear scan through data - use `scrollToIndex` instead if possible.
     * May be janky without `getItemLayout` prop.
     */
    scrollToItem: (params: {
        animated?: boolean | null;
        item: any;
        viewPosition?: number;
    }) => void;
    /**
     * Scroll to a specific content pixel offset, like a normal `ScrollView`.
     */
    scrollToOffset: (params: {
        animated?: boolean | null;
        offset: number;
    }) => void;
}
declare const _default: React.MemoExoticComponent<React.ForwardRefExoticComponent<IProps<any> & React.RefAttributes<FlatListHandler>>>;
export default _default;
