{"version":3,"names":["styles","StyleSheet","create","container","flex","PageNoOpt","props","_AppPropsProvider","init","appProps","t2TimeStampRef","Date","now","loadedData","setLoadedData","requestData","noReport","onCreateTimestamp","NativeModules","RootViewPageBridge","rootViewDidMountWith","rootTag","event","payload","queryKey","onRequest","then","queryState","CustomQueryClient","get","getQueryState","status","current","dataUpdatedAt","errorUpdateCount","PageRubasRule","apiRetrySuccess","apiSuccess","onSuccess","apiFailed","local_life_network_error_code","error","local_life_network_error_message","onError","catch","time2","reportPageRenderTime","lcpImages","t3","t2","pageRender","renderContent","noOpt","contentPager","OP_INLINE"],"sources":["pageNoOpt.tsx"],"sourcesContent":["import React, {\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\nimport { NativeModules, View, StyleSheet } from 'react-native';\nimport { Alpha, OP_INLINE } from './alpha';\nimport { CustomQueryClient } from './customQueryClient';\nimport { QueryClientProvider } from 'react-query';\nimport { PageContext } from './pageContext';\nimport {\n    getPageRubasKey,\n    pageLog,\n    PageRubasRule,\n    publishRubas,\n    useReportContainer,\n} from './log';\nimport { getErrorCode, getErrorMessage, getRubasTime } from './utils';\nimport { TAppProps, TPageProps } from './page';\nimport { useLcpCollect } from './hooks/useLcpCollect';\nimport { _AppPropsProvider } from './_AppPropsProvider';\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n});\n\n// 工程脚手架\nexport const PageNoOpt = <T extends TAppProps, U extends any>(\n    props: TPageProps<T, U>,\n) => {\n    _AppPropsProvider.init(props.appProps);\n    useReportContainer(props);\n    const t2TimeStampRef = useRef(Date.now());\n    const [loadedData, setLoadedData] = useState(false);\n    // 请求数据\n    const requestData = useCallback(() => {\n        // t1上报\n        if (!props.noReport) {\n            pageLog(\n                '分阶段耗时',\n                `t1=${Date.now() - props.appProps.onCreateTimestamp}`,\n            );\n            NativeModules.RootViewPageBridge.rootViewDidMountWith(\n                props.appProps.rootTag,\n                {},\n            );\n            publishRubas({\n                event: 'local_life_page_on_load_view_t1',\n                payload: getRubasTime(Date.now()),\n            });\n        }\n        if (props.queryKey && props.onRequest) {\n            props\n                .onRequest()\n                .then(() => {\n                    const queryState = CustomQueryClient.get().getQueryState(\n                        props.queryKey,\n                    );\n                    if (queryState.status === 'success') {\n                        t2TimeStampRef.current = queryState.dataUpdatedAt;\n                        publishRubas({\n                            event: getPageRubasKey(\n                                props,\n                                queryState.errorUpdateCount\n                                    ? PageRubasRule.apiRetrySuccess\n                                    : PageRubasRule.apiSuccess,\n                            ),\n                        });\n                        setLoadedData(true);\n                        props.onSuccess?.();\n                    } else if (queryState.status === 'error') {\n                        if (queryState.errorUpdateCount === 1) {\n                            publishRubas({\n                                event: getPageRubasKey(\n                                    props,\n                                    PageRubasRule.apiFailed,\n                                ),\n                                payload: {\n                                    local_life_network_error_code: getErrorCode(\n                                        queryState?.error,\n                                    ),\n                                    local_life_network_error_message:\n                                        getErrorMessage(queryState?.error),\n                                },\n                            });\n                        }\n                        props.onError?.();\n                    }\n                })\n                .catch(() => {\n                    props.onError?.();\n                    publishRubas({\n                        event: getPageRubasKey(props, PageRubasRule.apiFailed),\n                    });\n                });\n        } else if (!props.noReport) {\n            // 无网络请求或者数据处理时，t2、t3上报\n            const time2 = Date.now() - props.appProps.onCreateTimestamp;\n            NativeModules.RootViewPageBridge.reportPageRenderTime(\n                props.appProps.rootTag,\n                time2,\n                time2,\n                {},\n            );\n            publishRubas({\n                event: 'local_life_page_request_t2',\n                payload: getRubasTime(Date.now()),\n            });\n            publishRubas({\n                event: 'local_life_page_render_t3',\n                payload: getRubasTime(Date.now()),\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useMemo(requestData, []);\n    const { lcpImages } = useLcpCollect();\n\n    useEffect(() => {\n        if (loadedData) {\n            // 有网络请求或者数据处理时，t2、t3上报\n            if (!props.noReport) {\n                const t3 = Date.now() - props.appProps.onCreateTimestamp;\n                const t2 =\n                    t2TimeStampRef.current - props.appProps.onCreateTimestamp;\n                NativeModules.RootViewPageBridge.reportPageRenderTime(\n                    props.appProps.rootTag,\n                    t2,\n                    t3,\n                    {},\n                );\n                pageLog('分阶段耗时', `t2=${t2},t3=${t3}`);\n            }\n            publishRubas({\n                event: getPageRubasKey(props, PageRubasRule.pageRender),\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [loadedData]);\n\n    // 渲染组件\n    function renderContent() {\n        return (\n            <QueryClientProvider client={CustomQueryClient.get()}>\n                <PageContext.Provider\n                    value={{\n                        loadedData: true,\n                        noOpt: true,\n                        lcpImages: lcpImages,\n                    }}\n                >\n                    <View style={styles.container}>\n                        <Alpha\n                            target={props.contentPager}\n                            schedule={OP_INLINE}\n                            data={props.appProps}\n                        />\n                    </View>\n                </PageContext.Provider>\n            </QueryClientProvider>\n        );\n    }\n\n    return renderContent();\n};\n"],"mappings":";;;;;;;AAAA;;AAOA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAOA;;AAEA;;AACA;;;;;;AAEA,MAAMA,MAAM,GAAGC,wBAAWC,MAAX,CAAkB;EAC7BC,SAAS,EAAE;IACPC,IAAI,EAAE;EADC;AADkB,CAAlB,CAAf,C,CAMA;;;AACO,MAAMC,SAAS,GAClBC,KADqB,IAEpB;EACDC,qCAAkBC,IAAlB,CAAuBF,KAAK,CAACG,QAA7B;;EACA,6BAAmBH,KAAnB;EACA,MAAMI,cAAc,GAAG,mBAAOC,IAAI,CAACC,GAAL,EAAP,CAAvB;EACA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B,qBAAS,KAAT,CAApC,CAJC,CAKD;;EACA,MAAMC,WAAW,GAAG,wBAAY,MAAM;IAClC;IACA,IAAI,CAACT,KAAK,CAACU,QAAX,EAAqB;MACjB,kBACI,OADJ,EAEK,MAAKL,IAAI,CAACC,GAAL,KAAaN,KAAK,CAACG,QAAN,CAAeQ,iBAAkB,EAFxD;;MAIAC,2BAAcC,kBAAd,CAAiCC,oBAAjC,CACId,KAAK,CAACG,QAAN,CAAeY,OADnB,EAEI,EAFJ;;MAIA,uBAAa;QACTC,KAAK,EAAE,iCADE;QAETC,OAAO,EAAE,yBAAaZ,IAAI,CAACC,GAAL,EAAb;MAFA,CAAb;IAIH;;IACD,IAAIN,KAAK,CAACkB,QAAN,IAAkBlB,KAAK,CAACmB,SAA5B,EAAuC;MACnCnB,KAAK,CACAmB,SADL,GAEKC,IAFL,CAEU,MAAM;QACR,MAAMC,UAAU,GAAGC,qCAAkBC,GAAlB,GAAwBC,aAAxB,CACfxB,KAAK,CAACkB,QADS,CAAnB;;QAGA,IAAIG,UAAU,CAACI,MAAX,KAAsB,SAA1B,EAAqC;UAAA;;UACjCrB,cAAc,CAACsB,OAAf,GAAyBL,UAAU,CAACM,aAApC;UACA,uBAAa;YACTX,KAAK,EAAE,0BACHhB,KADG,EAEHqB,UAAU,CAACO,gBAAX,GACMC,mBAAcC,eADpB,GAEMD,mBAAcE,UAJjB;UADE,CAAb;UAQAvB,aAAa,CAAC,IAAD,CAAb;UACA,oBAAAR,KAAK,CAACgC,SAAN,2EAAAhC,KAAK;QACR,CAZD,MAYO,IAAIqB,UAAU,CAACI,MAAX,KAAsB,OAA1B,EAAmC;UAAA;;UACtC,IAAIJ,UAAU,CAACO,gBAAX,KAAgC,CAApC,EAAuC;YACnC,uBAAa;cACTZ,KAAK,EAAE,0BACHhB,KADG,EAEH6B,mBAAcI,SAFX,CADE;cAKThB,OAAO,EAAE;gBACLiB,6BAA6B,EAAE,yBAC3Bb,UAD2B,aAC3BA,UAD2B,uBAC3BA,UAAU,CAAEc,KADe,CAD1B;gBAILC,gCAAgC,EAC5B,4BAAgBf,UAAhB,aAAgBA,UAAhB,uBAAgBA,UAAU,CAAEc,KAA5B;cALC;YALA,CAAb;UAaH;;UACD,kBAAAnC,KAAK,CAACqC,OAAN,uEAAArC,KAAK;QACR;MACJ,CApCL,EAqCKsC,KArCL,CAqCW,MAAM;QAAA;;QACT,mBAAAtC,KAAK,CAACqC,OAAN,yEAAArC,KAAK;QACL,uBAAa;UACTgB,KAAK,EAAE,0BAAgBhB,KAAhB,EAAuB6B,mBAAcI,SAArC;QADE,CAAb;MAGH,CA1CL;IA2CH,CA5CD,MA4CO,IAAI,CAACjC,KAAK,CAACU,QAAX,EAAqB;MACxB;MACA,MAAM6B,KAAK,GAAGlC,IAAI,CAACC,GAAL,KAAaN,KAAK,CAACG,QAAN,CAAeQ,iBAA1C;;MACAC,2BAAcC,kBAAd,CAAiC2B,oBAAjC,CACIxC,KAAK,CAACG,QAAN,CAAeY,OADnB,EAEIwB,KAFJ,EAGIA,KAHJ,EAII,EAJJ;;MAMA,uBAAa;QACTvB,KAAK,EAAE,4BADE;QAETC,OAAO,EAAE,yBAAaZ,IAAI,CAACC,GAAL,EAAb;MAFA,CAAb;MAIA,uBAAa;QACTU,KAAK,EAAE,2BADE;QAETC,OAAO,EAAE,yBAAaZ,IAAI,CAACC,GAAL,EAAb;MAFA,CAAb;IAIH,CA7EiC,CA8ElC;;EACH,CA/EmB,EA+EjB,EA/EiB,CAApB,CANC,CAuFD;;EACA,oBAAQG,WAAR,EAAqB,EAArB;EACA,MAAM;IAAEgC;EAAF,IAAgB,mCAAtB;EAEA,sBAAU,MAAM;IACZ,IAAIlC,UAAJ,EAAgB;MACZ;MACA,IAAI,CAACP,KAAK,CAACU,QAAX,EAAqB;QACjB,MAAMgC,EAAE,GAAGrC,IAAI,CAACC,GAAL,KAAaN,KAAK,CAACG,QAAN,CAAeQ,iBAAvC;QACA,MAAMgC,EAAE,GACJvC,cAAc,CAACsB,OAAf,GAAyB1B,KAAK,CAACG,QAAN,CAAeQ,iBAD5C;;QAEAC,2BAAcC,kBAAd,CAAiC2B,oBAAjC,CACIxC,KAAK,CAACG,QAAN,CAAeY,OADnB,EAEI4B,EAFJ,EAGID,EAHJ,EAII,EAJJ;;QAMA,kBAAQ,OAAR,EAAkB,MAAKC,EAAG,OAAMD,EAAG,EAAnC;MACH;;MACD,uBAAa;QACT1B,KAAK,EAAE,0BAAgBhB,KAAhB,EAAuB6B,mBAAce,UAArC;MADE,CAAb;IAGH,CAlBW,CAmBZ;;EACH,CApBD,EAoBG,CAACrC,UAAD,CApBH,EA3FC,CAiHD;;EACA,SAASsC,aAAT,GAAyB;IACrB,oBACI,6BAAC,+BAAD;MAAqB,MAAM,EAAEvB,qCAAkBC,GAAlB;IAA7B,gBACI,6BAAC,wBAAD,CAAa,QAAb;MACI,KAAK,EAAE;QACHhB,UAAU,EAAE,IADT;QAEHuC,KAAK,EAAE,IAFJ;QAGHL,SAAS,EAAEA;MAHR;IADX,gBAOI,6BAAC,iBAAD;MAAM,KAAK,EAAE/C,MAAM,CAACG;IAApB,gBACI,6BAAC,YAAD;MACI,MAAM,EAAEG,KAAK,CAAC+C,YADlB;MAEI,QAAQ,EAAEC,gBAFd;MAGI,IAAI,EAAEhD,KAAK,CAACG;IAHhB,EADJ,CAPJ,CADJ,CADJ;EAmBH;;EAED,OAAO0C,aAAa,EAApB;AACH,CA3IM"}