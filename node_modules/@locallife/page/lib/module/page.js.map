{"version":3,"names":["React","useCallback","useEffect","useMemo","useRef","useState","NativeModules","View","StyleSheet","Alpha","OP_INLINE","OP_NEXT_DRAWFRAME","LoadingScene","ErrorScene","CustomQueryClient","QueryClientProvider","PageContext","getPageRubasKey","pageLog","PageRubasRule","publishRubas","useReportContainer","getErrorCode","getErrorMessage","getRubasTime","_AppPropsProvider","useLcpCollect","styles","create","container","flex","EAppState","Page","props","init","appProps","t2TimeStampRef","Date","now","loadedData","setLoadedData","appState","setAppState","needLoading","undefined","LOADING","COMPLETED","handleResult","queryState","get","getQueryState","queryKey","status","current","dataUpdatedAt","event","errorUpdateCount","apiRetrySuccess","apiSuccess","onSuccess","apiFailed","payload","local_life_network_error_code","error","local_life_network_error_message","ERROR","onError","handleException","requestData","noReport","onCreateTimestamp","RootViewPageBridge","rootViewDidMountWith","rootTag","onRequest","then","catch","time2","reportPageRenderTime","lcpImages","t3","t2","pageRender","renderContent","needError","contentPager","LoadingComponent","ErrorComponent","onRetry","refetchQueries"],"sources":["page.tsx"],"sourcesContent":["import React, {\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\nimport { NativeModules, View, StyleSheet } from 'react-native';\nimport { Alpha, OP_INLINE, OP_NEXT_DRAWFRAME } from './alpha';\nimport LoadingScene from './loadingScene';\nimport ErrorScene from './errorScene';\nimport { CustomQueryClient } from './customQueryClient';\nimport { QueryClientProvider, QueryKey } from 'react-query';\nimport { PageContext } from './pageContext';\nimport {\n    getPageRubasKey,\n    pageLog,\n    PageRubasRule,\n    publishRubas,\n    useReportContainer,\n} from './log';\nimport { getErrorCode, getErrorMessage, getRubasTime } from './utils';\nimport { _AppPropsProvider } from './_AppPropsProvider';\nimport { useLcpCollect } from './hooks/useLcpCollect';\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n});\n\nexport type TAppProps = {\n    rootTag: number;\n    onCreateTimestamp: number;\n    bundleId?: string;\n    componentName?: string;\n};\n\nexport type TPageProps<T extends TAppProps, U extends any> = {\n    appProps: T; // 通过native传入的props\n    contentPager: React.ComponentType<any>; // 首屏组件\n    LoadingComponent?: React.ComponentType<any>; // loading组件\n    ErrorComponent?: React.ComponentType<any>; // error组件\n    noReport?: boolean; // 是否进行埋点上报\n    needLoading?: boolean; // 是否需要loading页面，不填为true\n    needError?: boolean; // 是否需要异常页面，默认为true\n    onSuccess?: () => void; // 数据处理成功地回调\n    onError?: () => void; // 数据处理失败地回调\n    queryKey?: QueryKey; // react-query key，需与第一次调用时的key一致\n    onRequest?: () => Promise<U>; // 数据请求和处理\n    navigationKey?: string; // 页面标识,针对使用react-navigation的情况\n    onShowLoading?: () => void; // mount回调\n};\n\nenum EAppState {\n    LOADING, // 加载状态\n    ERROR, // 错误状态\n    COMPLETED, // 完成状态\n}\n\n// 工程脚手架\nexport const Page = <T extends TAppProps, U extends any>(\n    props: TPageProps<T, U>,\n) => {\n    _AppPropsProvider.init(props.appProps);\n    useReportContainer(props);\n    const t2TimeStampRef = useRef(Date.now());\n    const [loadedData, setLoadedData] = useState(false);\n    const [appState, setAppState] = useState(\n        props.needLoading || undefined === props.needLoading\n            ? EAppState.LOADING\n            : EAppState.COMPLETED,\n    );\n\n    const handleResult = useCallback(() => {\n        const queryState = CustomQueryClient.get().getQueryState(\n            props.queryKey,\n        );\n        if (queryState.status === 'success') {\n            t2TimeStampRef.current = queryState.dataUpdatedAt;\n            publishRubas({\n                event: getPageRubasKey(\n                    props,\n                    queryState.errorUpdateCount\n                        ? PageRubasRule.apiRetrySuccess\n                        : PageRubasRule.apiSuccess,\n                ),\n            });\n            setLoadedData(true);\n            setAppState(EAppState.COMPLETED);\n            props.onSuccess?.();\n        } else if (queryState.status === 'error') {\n            if (queryState.errorUpdateCount === 1) {\n                publishRubas({\n                    event: getPageRubasKey(props, PageRubasRule.apiFailed),\n                    payload: {\n                        local_life_network_error_code: getErrorCode(\n                            queryState?.error,\n                        ),\n                        local_life_network_error_message: getErrorMessage(\n                            queryState?.error,\n                        ),\n                    },\n                });\n            }\n            setAppState(EAppState.ERROR);\n            props.onError?.();\n        }\n    }, []);\n\n    const handleException = useCallback(() => {\n        setAppState(EAppState.ERROR);\n        props.onError?.();\n        publishRubas({\n            event: getPageRubasKey(props, PageRubasRule.apiFailed),\n        });\n    }, []);\n\n    // 请求数据\n    const requestData = useCallback(() => {\n        setAppState(EAppState.LOADING);\n        // t1上报\n        if (!props.noReport) {\n            pageLog(\n                '分阶段耗时',\n                `t1=${Date.now() - props.appProps.onCreateTimestamp}`,\n            );\n            NativeModules.RootViewPageBridge.rootViewDidMountWith(\n                props.appProps.rootTag,\n                {},\n            );\n            publishRubas({\n                event: 'local_life_page_on_load_view_t1',\n                payload: getRubasTime(Date.now()),\n            });\n        }\n        if (props.queryKey && props.onRequest) {\n            props.onRequest().then(handleResult).catch(handleException);\n        } else if (!props.noReport) {\n            // 无网络请求或者数据处理时，t2、t3上报\n            const time2 = Date.now() - props.appProps.onCreateTimestamp;\n            NativeModules.RootViewPageBridge.reportPageRenderTime(\n                props.appProps.rootTag,\n                time2,\n                time2,\n                {},\n            );\n        }\n    }, []);\n\n    useMemo(requestData, []);\n    const { lcpImages } = useLcpCollect();\n\n    useEffect(() => {\n        if (loadedData) {\n            // 有网络请求或者数据处理时，t2、t3上报\n            if (!props.noReport) {\n                const t3 = Date.now() - props.appProps.onCreateTimestamp;\n                const t2 =\n                    t2TimeStampRef.current - props.appProps.onCreateTimestamp;\n                NativeModules.RootViewPageBridge.reportPageRenderTime(\n                    props.appProps.rootTag,\n                    t2,\n                    t3,\n                    {},\n                );\n                pageLog('分阶段耗时', `t2=${t2},t3=${t3}`);\n                publishRubas({\n                    event: 'local_life_page_request_t2',\n                    payload: getRubasTime(t2TimeStampRef.current),\n                });\n                publishRubas({\n                    event: 'local_life_page_render_t3',\n                    payload: getRubasTime(Date.now()),\n                });\n            }\n            publishRubas({\n                event: getPageRubasKey(props, PageRubasRule.pageRender),\n            });\n        }\n    }, [loadedData]);\n\n    // 渲染组件\n    function renderContent() {\n        const needLoading = !!(\n            props.needLoading ||\n            undefined === props.needLoading ||\n            (props.onRequest && props.queryKey)\n        );\n        const needError = !!(props.needError || undefined === props.needError);\n        return (\n            <QueryClientProvider client={CustomQueryClient.get()}>\n                <PageContext.Provider\n                    value={{ loadedData: loadedData, lcpImages: lcpImages }}\n                >\n                    <View style={styles.container}>\n                        <Alpha\n                            target={props.contentPager}\n                            schedule={\n                                needLoading ? OP_NEXT_DRAWFRAME : OP_INLINE\n                            }\n                            data={props.appProps}\n                        />\n                        {needLoading && EAppState.LOADING === appState && (\n                            <Alpha\n                                target={props.LoadingComponent || LoadingScene}\n                                schedule={OP_INLINE}\n                            />\n                        )}\n                        {needError && EAppState.ERROR === appState && (\n                            <Alpha\n                                target={props.ErrorComponent || ErrorScene}\n                                schedule={OP_INLINE}\n                                data={{\n                                    onRetry: () => {\n                                        CustomQueryClient.get()\n                                            .refetchQueries(props.queryKey)\n                                            .then(handleResult)\n                                            .catch(handleException);\n                                    },\n                                }}\n                            />\n                        )}\n                    </View>\n                </PageContext.Provider>\n            </QueryClientProvider>\n        );\n    }\n\n    return renderContent();\n};\n"],"mappings":"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"}