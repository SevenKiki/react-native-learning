{"version":3,"names":["React","useState","memo","useMemo","InteractionManager","OP_INLINE","OP_IMMEDIATE","OP_NEXT_DRAWFRAME","OP_NEAREST_IDLE_JS","OP_NEAREST_IDLE_INTERACTIVE","schedulers","action","setImmediate","requestAnimationFrame","requestIdleCallback","runAfterInteractions","UPDATE_PROPS_PENDING_UPDATE","UPDATE_COMMITIED","Alpha","props","updateState","setUpdateState","schedule","placeholder","console","warn","commit","timeout","renderContent","target","Target","data"],"sources":["alpha.tsx"],"sourcesContent":["import React, { useState, memo, useMemo } from 'react';\nimport { InteractionManager } from 'react-native';\n\nexport const OP_INLINE = 1;\nexport const OP_IMMEDIATE = 2;\nexport const OP_NEXT_DRAWFRAME = 3;\nexport const OP_NEAREST_IDLE_JS = 4;\nexport const OP_NEAREST_IDLE_INTERACTIVE = 5;\n\nexport const schedulers = {\n    [OP_INLINE]: (action) => action(), // 无干涉，正常更新DOM\n    [OP_IMMEDIATE]: setImmediate, // 在当次JS Event Loop尾部更新DOM\n    [OP_NEXT_DRAWFRAME]: requestAnimationFrame, // 在临近一次Native渲染结束后更新DOM\n    [OP_NEAREST_IDLE_JS]: requestIdleCallback, // 在下一次JS Event Loop低负载时更新DOM\n    [OP_NEAREST_IDLE_INTERACTIVE]: InteractionManager.runAfterInteractions, // 在动画和触控交互结束后更新DOM\n};\n\nexport interface AlphaProps {\n    target: React.ComponentType<any>;\n    placeholder?: () => JSX.Element | undefined;\n    // 传递给首屏组件的数据\n    data?: any;\n    schedule?: keyof typeof schedulers;\n    timeout?: number;\n}\n\nconst UPDATE_PROPS_PENDING_UPDATE = 1;\nconst UPDATE_COMMITIED = 2;\n\nexport const Alpha = memo((props: AlphaProps) => {\n    const [updateState, setUpdateState] = useState<number>(\n        UPDATE_PROPS_PENDING_UPDATE,\n    );\n    useMemo(() => {\n        if (props.schedule === OP_INLINE || props.schedule === OP_IMMEDIATE) {\n            if (props.placeholder) {\n                console.warn('OP_INLINE 不要使用placeholder');\n            }\n            return;\n        }\n        const commit = schedulers[props.schedule || OP_NEXT_DRAWFRAME];\n        commit(\n            () => {\n                setUpdateState(UPDATE_COMMITIED);\n            },\n            { timeout: props.timeout || 1000 },\n        );\n    }, []);\n\n    function renderContent() {\n        const { target: Target, placeholder } = props;\n        if (\n            Target &&\n            (props.schedule === OP_INLINE || updateState === UPDATE_COMMITIED)\n        ) {\n            return <Target {...props.data} />;\n        }\n\n        return placeholder ? placeholder() : null;\n    }\n\n    return renderContent();\n});\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,IAA1B,EAAgCC,OAAhC,QAA+C,OAA/C;AACA,SAASC,kBAAT,QAAmC,cAAnC;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAlB;AACP,OAAO,MAAMC,YAAY,GAAG,CAArB;AACP,OAAO,MAAMC,iBAAiB,GAAG,CAA1B;AACP,OAAO,MAAMC,kBAAkB,GAAG,CAA3B;AACP,OAAO,MAAMC,2BAA2B,GAAG,CAApC;AAEP,OAAO,MAAMC,UAAU,GAAG;EACtB,CAACL,SAAD,GAAcM,MAAD,IAAYA,MAAM,EADT;EACa;EACnC,CAACL,YAAD,GAAgBM,YAFM;EAEQ;EAC9B,CAACL,iBAAD,GAAqBM,qBAHC;EAGsB;EAC5C,CAACL,kBAAD,GAAsBM,mBAJA;EAIqB;EAC3C,CAACL,2BAAD,GAA+BL,kBAAkB,CAACW,oBAL5B,CAKkD;;AALlD,CAAnB;AAiBP,MAAMC,2BAA2B,GAAG,CAApC;AACA,MAAMC,gBAAgB,GAAG,CAAzB;AAEA,OAAO,MAAMC,KAAK,gBAAGhB,IAAI,CAAEiB,KAAD,IAAuB;EAC7C,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAC1Ce,2BAD0C,CAA9C;EAGAb,OAAO,CAAC,MAAM;IACV,IAAIgB,KAAK,CAACG,QAAN,KAAmBjB,SAAnB,IAAgCc,KAAK,CAACG,QAAN,KAAmBhB,YAAvD,EAAqE;MACjE,IAAIa,KAAK,CAACI,WAAV,EAAuB;QACnBC,OAAO,CAACC,IAAR,CAAa,2BAAb;MACH;;MACD;IACH;;IACD,MAAMC,MAAM,GAAGhB,UAAU,CAACS,KAAK,CAACG,QAAN,IAAkBf,iBAAnB,CAAzB;IACAmB,MAAM,CACF,MAAM;MACFL,cAAc,CAACJ,gBAAD,CAAd;IACH,CAHC,EAIF;MAAEU,OAAO,EAAER,KAAK,CAACQ,OAAN,IAAiB;IAA5B,CAJE,CAAN;EAMH,CAdM,EAcJ,EAdI,CAAP;;EAgBA,SAASC,aAAT,GAAyB;IACrB,MAAM;MAAEC,MAAM,EAAEC,MAAV;MAAkBP;IAAlB,IAAkCJ,KAAxC;;IACA,IACIW,MAAM,KACLX,KAAK,CAACG,QAAN,KAAmBjB,SAAnB,IAAgCe,WAAW,KAAKH,gBAD3C,CADV,EAGE;MACE,oBAAO,oBAAC,MAAD,EAAYE,KAAK,CAACY,IAAlB,CAAP;IACH;;IAED,OAAOR,WAAW,GAAGA,WAAW,EAAd,GAAmB,IAArC;EACH;;EAED,OAAOK,aAAa,EAApB;AACH,CAjCwB,CAAlB"}