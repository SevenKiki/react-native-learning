import { Interceptor } from '@locallife/base-request';
import { InterceptorModel } from '@locallife/base-request';
import { BizRequestConfig, BizRequestImpl } from '@locallife/biz-request';

export class ResponseBaseVerifyInterceptor extends Interceptor {
    proceed(): (model: InterceptorModel) => Promise<InterceptorModel> {
        return function (model: InterceptorModel) {
            const verify =
                (model.requestConfig as BizRequestConfig)
                    .responseBaseVerifyFunc ??
                BizRequestImpl.defaultInterceptorParams?.responseBaseVerifyFunc;
            if (!verify?.(model.response)) {
                return Promise.reject({
                    ...model,
                    reason: {
                        message: 'Response 校验不通过',
                        ...model.response,
                    },
                });
            }
            return Promise.resolve({ ...model, response: model.response });
        };
    }
}
