import { Interceptor, InterceptorModel } from '@locallife/base-request';
import { LocalLifeRequestLogger } from '@locallife/log';

/**
 * 请求耗时纪录
 */
export default class ResponseMonitorLogInterceptor extends Interceptor {
    proceed(): (model: InterceptorModel) => Promise<InterceptorModel> {
        return function (model: InterceptorModel) {
            const endTime = (model.extra?.sysTimeRequestEnd ??
                Date.now()) as number;
            const startTime = (model.extra?.sysTimeRequestStart ??
                endTime) as number;
            const costTime = String(endTime - startTime);
            LocalLifeRequestLogger.logRequest(
                model.requestParams?.url ?? '',
                true,
                -1,
                '',
                { costTime },
            );
            return Promise.resolve(model);
        };
    }

    error(): (model: InterceptorModel) => Promise<InterceptorModel> {
        return function (model: InterceptorModel) {
            const code =
                model.reason?.code ??
                model.reason?.status ??
                model.reason?.result ??
                -1;

            const endTime = (model.extra?.sysTimeRequestEnd ??
                Date.now()) as number;
            const startTime = (model.extra?.sysTimeRequestStart ??
                endTime) as number;
            const costTime = String(endTime - startTime);

            LocalLifeRequestLogger.logRequest(
                model.requestParams?.url ?? '',
                false,
                code,
                model.reason?.message ?? '',
                { costTime },
            );
            return Promise.reject(model);
        };
    }
}
