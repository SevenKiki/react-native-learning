import { Interceptor, InterceptorModel } from '@locallife/base-request';
import {
    REQUEST_FAILED,
    REQUEST_PATH,
    REQUEST_SUCCESS,
    RequestRubas,
} from '../../util/RequestRubas';

/**
 * 请求耗时纪录
 */
export default class ResponseTimeCostInterceptor extends Interceptor {
    proceed(): (model: InterceptorModel) => Promise<InterceptorModel> {
        return function (model: InterceptorModel) {
            const endTime = Date.now();
            const startTime = (model.extra?.sysTimeRequestStart ??
                endTime) as number;
            RequestRubas.setDimension(
                REQUEST_PATH,
                model.requestParams?.url ?? '',
            );
            RequestRubas.publish(REQUEST_SUCCESS);
            console.log(
                `@locallife/biz-request requestCostTime: ${
                    endTime - startTime
                }`,
            );
            return Promise.resolve({
                ...model,
                extra: { ...model.extra, sysTimeRequestEnd: endTime },
            });
        };
    }

    error(): (model: InterceptorModel) => Promise<InterceptorModel> {
        return function (model: InterceptorModel) {
            const code =
                model.reason?.code ??
                model.reason?.status ??
                model.reason?.result ??
                -1;
            const payload = new Map();
            payload.set('errorCode', code);
            payload.set('errorMsg', model.reason?.message ?? '');
            RequestRubas.setDimension(
                REQUEST_PATH,
                model.requestParams?.url ?? '',
            );
            RequestRubas.publish(REQUEST_FAILED, payload);
            return Promise.reject(model);
        };
    }
}
