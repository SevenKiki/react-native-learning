import { Interceptor, InterceptorModel } from '@locallife/base-request';
import { BizRequestConfig, BizRequestImpl } from '@locallife/biz-request';

export default class RequestParamsVerifyInterceptor extends Interceptor {
    proceed(): (model: InterceptorModel) => Promise<InterceptorModel> {
        return function (model: InterceptorModel) {
            const config = model.requestConfig as BizRequestConfig;
            const requestVerifyParams =
                config.requestVerifyParams ??
                BizRequestImpl.defaultInterceptorParams?.requestVerifyParams;
            if (requestVerifyParams) {
                for (let [key, value] of requestVerifyParams) {
                    let param =
                        model.requestParams?.params?.[key] ??
                        model.requestParams?.commonRequestParams?.params?.[
                            key
                        ] ??
                        model.requestParams?.queryParams?.[key] ??
                        model.requestParams?.commonRequestParams?.queryParams?.[
                            key
                        ];
                    if (typeof param !== value) {
                        return Promise.reject({
                            reason: {
                                ...model.response,
                                message: `参数 ${key} 的值类型不对，期望类型：${value}，实际类型为：${typeof param}`,
                            },
                        });
                    }
                }
            }
            return Promise.resolve(model);
        };
    }
}
