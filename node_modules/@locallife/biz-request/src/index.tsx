import { BizRequestImpl } from './request/BizRequestImpl';
import { BizRequestConfig } from './model/BizRequestConfig';
import { DefaultBizRequestConfig } from './model/BizRequestConfig';
import './init';
import {
    request,
    Interceptor,
    KSBaseResponse,
    InterceptorModel,
    IRequestParam,
    RequestMethod,
    CommonRequestParams,
    CommonParams,
    CommonHeaders,
    TParams,
    RequestConfig,
    DefaultRequestConfig,
    BaseRequestImpl,
} from '@locallife/base-request';
import { IExposedRequest } from '@locallife/base-request/src/request';
import { InterceptorParams } from './model/InterceptorParams';
import { bizRequestImpl } from './init';

export interface IExposedRequest2 extends IExposedRequest {
    bizInit(
        commonRequestParams?: CommonRequestParams,
        interceptorParams?: InterceptorParams,
    );
}
export type RequestInstance = IExposedRequest2;

// @ts-ignore
const bizRequest: RequestInstance = request;

bizRequest.bizInit = function (
    commonRequestParams?: CommonRequestParams,
    interceptorParams?: InterceptorParams,
): void {
    this.init(commonRequestParams);
    bizRequestImpl.init(interceptorParams);
};

export {
    BizRequestImpl,
    BizRequestConfig,
    DefaultBizRequestConfig,
    request,
    bizRequest,
    Interceptor,
    KSBaseResponse,
    InterceptorModel,
    IRequestParam,
    RequestMethod,
    CommonRequestParams,
    CommonParams,
    CommonHeaders,
    TParams,
    RequestConfig,
    DefaultRequestConfig,
    BaseRequestImpl,
};
