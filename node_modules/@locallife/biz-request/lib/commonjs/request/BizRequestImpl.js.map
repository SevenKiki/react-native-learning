{"version":3,"names":["BizRequestImpl","BaseRequestImpl","init","interceptorParams","defaultInterceptorParams","initInnerInterceptors","requestInnerInterceptors","responseInnerInterceptors","config","customInnerRequestInterceptors","forEach","value","push","enableRequestParamsVerify","RequestParamsVerifyInterceptor","disableLogTimeCost","RequestTimeCostInterceptor","customInnerResponseInterceptors","unshift","disableReportMonitorLog","ResponseMonitorLogInterceptor","enableResponseBaseVerify","ResponseBaseVerifyInterceptor","ResponseTimeCostInterceptor","getDefaultConfig","request","param"],"sources":["BizRequestImpl.ts"],"sourcesContent":["import RequestParamsVerifyInterceptor from '../interceptorChain/innerInterceptor/RequestParamsVerifyInterceptor';\nimport {\n    BaseRequestImpl,\n    Interceptor,\n    IRequestParam,\n    KSBaseResponse,\n    RequestConfig,\n} from '@locallife/base-request';\nimport { BizRequestConfig } from '@locallife/biz-request';\nimport RequestTimeCostInterceptor from '../interceptorChain/innerInterceptor/RequestTimeCostInterceptor';\nimport ResponseTimeCostInterceptor from '../interceptorChain/innerInterceptor/ResponseTimeCostInterceptor';\nimport { ResponseBaseVerifyInterceptor } from '../interceptorChain/innerInterceptor/ResponseBaseVerifyInterceptor';\nimport { InterceptorParams } from '../model/InterceptorParams';\nimport ResponseMonitorLogInterceptor from '../interceptorChain/innerInterceptor/ResponseMonitorLogInterceptor';\n\nexport class BizRequestImpl extends BaseRequestImpl {\n    static defaultInterceptorParams?: InterceptorParams;\n\n    init(interceptorParams?: InterceptorParams) {\n        BizRequestImpl.defaultInterceptorParams = interceptorParams;\n    }\n\n    initInnerInterceptors(\n        requestInnerInterceptors: Array<Interceptor>,\n        responseInnerInterceptors: Array<Interceptor>,\n        config?: BizRequestConfig,\n    ) {\n        super.initInnerInterceptors(\n            requestInnerInterceptors,\n            responseInnerInterceptors,\n            config,\n        );\n        BizRequestImpl.defaultInterceptorParams?.customInnerRequestInterceptors?.forEach(\n            (value) => {\n                if (value) {\n                    requestInnerInterceptors.push(value);\n                }\n            },\n        );\n        const enableRequestParamsVerify =\n            config?.enableRequestParamsVerify === true ||\n            (config?.enableRequestParamsVerify !== false &&\n                BizRequestImpl.defaultInterceptorParams\n                    ?.enableRequestParamsVerify);\n        if (enableRequestParamsVerify) {\n            requestInnerInterceptors.push(new RequestParamsVerifyInterceptor());\n        }\n        !BizRequestImpl.defaultInterceptorParams?.disableLogTimeCost &&\n            requestInnerInterceptors.push(new RequestTimeCostInterceptor());\n        BizRequestImpl.defaultInterceptorParams?.customInnerResponseInterceptors?.forEach(\n            (value) => {\n                if (value) {\n                    requestInnerInterceptors.unshift(value);\n                }\n            },\n        );\n        !BizRequestImpl.defaultInterceptorParams?.disableReportMonitorLog &&\n            responseInnerInterceptors.unshift(\n                new ResponseMonitorLogInterceptor(),\n            );\n        const enableResponseBaseVerify =\n            config?.enableResponseBaseVerify === true ||\n            (config?.enableResponseBaseVerify !== false &&\n                BizRequestImpl.defaultInterceptorParams\n                    ?.enableResponseBaseVerify);\n        if (enableResponseBaseVerify) {\n            responseInnerInterceptors.unshift(\n                new ResponseBaseVerifyInterceptor(),\n            );\n        }\n        !BizRequestImpl.defaultInterceptorParams?.disableLogTimeCost &&\n            responseInnerInterceptors.unshift(\n                new ResponseTimeCostInterceptor(),\n            );\n    }\n\n    getDefaultConfig(): BizRequestConfig {\n        return {};\n        // 先不设置默认值\n        // return DefaultBizRequestConfig;\n    }\n\n    request(\n        param: IRequestParam,\n        config?: RequestConfig,\n    ): Promise<KSBaseResponse> {\n        return super.request(param, config);\n    }\n}\n"],"mappings":";;;;;;;AAAA;;AACA;;AAQA;;AACA;;AACA;;AAEA;;;;;;AAEO,MAAMA,cAAN,SAA6BC,4BAA7B,CAA6C;EAGhDC,IAAI,CAACC,iBAAD,EAAwC;IACxCH,cAAc,CAACI,wBAAf,GAA0CD,iBAA1C;EACH;;EAEDE,qBAAqB,CACjBC,wBADiB,EAEjBC,yBAFiB,EAGjBC,MAHiB,EAInB;IAAA;;IACE,MAAMH,qBAAN,CACIC,wBADJ,EAEIC,yBAFJ,EAGIC,MAHJ;IAKA,yBAAAR,cAAc,CAACI,wBAAf,0GAAyCK,8BAAzC,kFAAyEC,OAAzE,CACKC,KAAD,IAAW;MACP,IAAIA,KAAJ,EAAW;QACPL,wBAAwB,CAACM,IAAzB,CAA8BD,KAA9B;MACH;IACJ,CALL;IAOA,MAAME,yBAAyB,GAC3B,CAAAL,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEK,yBAAR,MAAsC,IAAtC,IACC,CAAAL,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEK,yBAAR,MAAsC,KAAtC,+BACGb,cAAc,CAACI,wBADlB,2DACG,uBACMS,yBAFT,CAFL;;IAKA,IAAIA,yBAAJ,EAA+B;MAC3BP,wBAAwB,CAACM,IAAzB,CAA8B,IAAIE,uCAAJ,EAA9B;IACH;;IACD,4BAACd,cAAc,CAACI,wBAAhB,mDAAC,uBAAyCW,kBAA1C,KACIT,wBAAwB,CAACM,IAAzB,CAA8B,IAAII,mCAAJ,EAA9B,CADJ;IAEA,0BAAAhB,cAAc,CAACI,wBAAf,4GAAyCa,+BAAzC,kFAA0EP,OAA1E,CACKC,KAAD,IAAW;MACP,IAAIA,KAAJ,EAAW;QACPL,wBAAwB,CAACY,OAAzB,CAAiCP,KAAjC;MACH;IACJ,CALL;IAOA,4BAACX,cAAc,CAACI,wBAAhB,mDAAC,uBAAyCe,uBAA1C,KACIZ,yBAAyB,CAACW,OAA1B,CACI,IAAIE,sCAAJ,EADJ,CADJ;IAIA,MAAMC,wBAAwB,GAC1B,CAAAb,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEa,wBAAR,MAAqC,IAArC,IACC,CAAAb,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEa,wBAAR,MAAqC,KAArC,+BACGrB,cAAc,CAACI,wBADlB,2DACG,uBACMiB,wBAFT,CAFL;;IAKA,IAAIA,wBAAJ,EAA8B;MAC1Bd,yBAAyB,CAACW,OAA1B,CACI,IAAII,4DAAJ,EADJ;IAGH;;IACD,4BAACtB,cAAc,CAACI,wBAAhB,mDAAC,uBAAyCW,kBAA1C,KACIR,yBAAyB,CAACW,OAA1B,CACI,IAAIK,oCAAJ,EADJ,CADJ;EAIH;;EAEDC,gBAAgB,GAAqB;IACjC,OAAO,EAAP,CADiC,CAEjC;IACA;EACH;;EAEDC,OAAO,CACHC,KADG,EAEHlB,MAFG,EAGoB;IACvB,OAAO,MAAMiB,OAAN,CAAcC,KAAd,EAAqBlB,MAArB,CAAP;EACH;;AAxE+C;;;;gBAAvCR,c"}