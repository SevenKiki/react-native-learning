{"version":3,"names":["ResponseBaseVerifyInterceptor","Interceptor","proceed","model","verify","requestConfig","responseBaseVerifyFunc","BizRequestImpl","defaultInterceptorParams","response","Promise","reject","reason","message","resolve"],"sources":["ResponseBaseVerifyInterceptor.ts"],"sourcesContent":["import { Interceptor } from '@locallife/base-request';\nimport { InterceptorModel } from '@locallife/base-request';\nimport { BizRequestConfig, BizRequestImpl } from '@locallife/biz-request';\n\nexport class ResponseBaseVerifyInterceptor extends Interceptor {\n    proceed(): (model: InterceptorModel) => Promise<InterceptorModel> {\n        return function (model: InterceptorModel) {\n            const verify =\n                (model.requestConfig as BizRequestConfig)\n                    .responseBaseVerifyFunc ??\n                BizRequestImpl.defaultInterceptorParams?.responseBaseVerifyFunc;\n            if (!verify?.(model.response)) {\n                return Promise.reject({\n                    ...model,\n                    reason: {\n                        message: 'Response 校验不通过',\n                        ...model.response,\n                    },\n                });\n            }\n            return Promise.resolve({ ...model, response: model.response });\n        };\n    }\n}\n"],"mappings":";;;;;;;AAAA;;AAEA;;AAEO,MAAMA,6BAAN,SAA4CC,wBAA5C,CAAwD;EAC3DC,OAAO,GAA2D;IAC9D,OAAO,UAAUC,KAAV,EAAmC;MAAA;;MACtC,MAAMC,MAAM,4BACPD,KAAK,CAACE,aAAP,CACKC,sBAFG,kGAGRC,2BAAeC,wBAHP,0DAGR,sBAAyCF,sBAH7C;;MAIA,IAAI,EAACF,MAAD,aAACA,MAAD,eAACA,MAAM,CAAGD,KAAK,CAACM,QAAT,CAAP,CAAJ,EAA+B;QAC3B,OAAOC,OAAO,CAACC,MAAR,CAAe,EAClB,GAAGR,KADe;UAElBS,MAAM,EAAE;YACJC,OAAO,EAAE,gBADL;YAEJ,GAAGV,KAAK,CAACM;UAFL;QAFU,CAAf,CAAP;MAOH;;MACD,OAAOC,OAAO,CAACI,OAAR,CAAgB,EAAE,GAAGX,KAAL;QAAYM,QAAQ,EAAEN,KAAK,CAACM;MAA5B,CAAhB,CAAP;IACH,CAfD;EAgBH;;AAlB0D"}