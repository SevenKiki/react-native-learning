"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseRequest = require("@locallife/base-request");

var _log = require("@locallife/log");

/**
 * 请求耗时纪录
 */
class ResponseMonitorLogInterceptor extends _baseRequest.Interceptor {
  proceed() {
    return function (model) {
      var _model$extra$sysTimeR, _model$extra, _model$extra$sysTimeR2, _model$extra2, _model$requestParams$, _model$requestParams;

      const endTime = (_model$extra$sysTimeR = (_model$extra = model.extra) === null || _model$extra === void 0 ? void 0 : _model$extra.sysTimeRequestEnd) !== null && _model$extra$sysTimeR !== void 0 ? _model$extra$sysTimeR : Date.now();
      const startTime = (_model$extra$sysTimeR2 = (_model$extra2 = model.extra) === null || _model$extra2 === void 0 ? void 0 : _model$extra2.sysTimeRequestStart) !== null && _model$extra$sysTimeR2 !== void 0 ? _model$extra$sysTimeR2 : endTime;
      const costTime = String(endTime - startTime);

      _log.LocalLifeRequestLogger.logRequest((_model$requestParams$ = (_model$requestParams = model.requestParams) === null || _model$requestParams === void 0 ? void 0 : _model$requestParams.url) !== null && _model$requestParams$ !== void 0 ? _model$requestParams$ : '', true, -1, '', {
        costTime
      });

      return Promise.resolve(model);
    };
  }

  error() {
    return function (model) {
      var _ref, _ref2, _model$reason$code, _model$reason, _model$reason2, _model$reason3, _model$extra$sysTimeR3, _model$extra3, _model$extra$sysTimeR4, _model$extra4, _model$requestParams$2, _model$requestParams2, _model$reason$message, _model$reason4;

      const code = (_ref = (_ref2 = (_model$reason$code = (_model$reason = model.reason) === null || _model$reason === void 0 ? void 0 : _model$reason.code) !== null && _model$reason$code !== void 0 ? _model$reason$code : (_model$reason2 = model.reason) === null || _model$reason2 === void 0 ? void 0 : _model$reason2.status) !== null && _ref2 !== void 0 ? _ref2 : (_model$reason3 = model.reason) === null || _model$reason3 === void 0 ? void 0 : _model$reason3.result) !== null && _ref !== void 0 ? _ref : -1;
      const endTime = (_model$extra$sysTimeR3 = (_model$extra3 = model.extra) === null || _model$extra3 === void 0 ? void 0 : _model$extra3.sysTimeRequestEnd) !== null && _model$extra$sysTimeR3 !== void 0 ? _model$extra$sysTimeR3 : Date.now();
      const startTime = (_model$extra$sysTimeR4 = (_model$extra4 = model.extra) === null || _model$extra4 === void 0 ? void 0 : _model$extra4.sysTimeRequestStart) !== null && _model$extra$sysTimeR4 !== void 0 ? _model$extra$sysTimeR4 : endTime;
      const costTime = String(endTime - startTime);

      _log.LocalLifeRequestLogger.logRequest((_model$requestParams$2 = (_model$requestParams2 = model.requestParams) === null || _model$requestParams2 === void 0 ? void 0 : _model$requestParams2.url) !== null && _model$requestParams$2 !== void 0 ? _model$requestParams$2 : '', false, code, (_model$reason$message = (_model$reason4 = model.reason) === null || _model$reason4 === void 0 ? void 0 : _model$reason4.message) !== null && _model$reason$message !== void 0 ? _model$reason$message : '', {
        costTime
      });

      return Promise.reject(model);
    };
  }

}

exports.default = ResponseMonitorLogInterceptor;
//# sourceMappingURL=ResponseMonitorLogInterceptor.js.map