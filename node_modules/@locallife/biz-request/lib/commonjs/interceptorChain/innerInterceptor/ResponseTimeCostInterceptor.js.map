{"version":3,"names":["ResponseTimeCostInterceptor","Interceptor","proceed","model","endTime","Date","now","startTime","extra","sysTimeRequestStart","RequestRubas","setDimension","REQUEST_PATH","requestParams","url","publish","REQUEST_SUCCESS","console","log","Promise","resolve","sysTimeRequestEnd","error","code","reason","status","result","payload","Map","set","message","REQUEST_FAILED","reject"],"sources":["ResponseTimeCostInterceptor.ts"],"sourcesContent":["import { Interceptor, InterceptorModel } from '@locallife/base-request';\nimport {\n    REQUEST_FAILED,\n    REQUEST_PATH,\n    REQUEST_SUCCESS,\n    RequestRubas,\n} from '../../util/RequestRubas';\n\n/**\n * 请求耗时纪录\n */\nexport default class ResponseTimeCostInterceptor extends Interceptor {\n    proceed(): (model: InterceptorModel) => Promise<InterceptorModel> {\n        return function (model: InterceptorModel) {\n            const endTime = Date.now();\n            const startTime = (model.extra?.sysTimeRequestStart ??\n                endTime) as number;\n            RequestRubas.setDimension(\n                REQUEST_PATH,\n                model.requestParams?.url ?? '',\n            );\n            RequestRubas.publish(REQUEST_SUCCESS);\n            console.log(\n                `@locallife/biz-request requestCostTime: ${\n                    endTime - startTime\n                }`,\n            );\n            return Promise.resolve({\n                ...model,\n                extra: { ...model.extra, sysTimeRequestEnd: endTime },\n            });\n        };\n    }\n\n    error(): (model: InterceptorModel) => Promise<InterceptorModel> {\n        return function (model: InterceptorModel) {\n            const code =\n                model.reason?.code ??\n                model.reason?.status ??\n                model.reason?.result ??\n                -1;\n            const payload = new Map();\n            payload.set('errorCode', code);\n            payload.set('errorMsg', model.reason?.message ?? '');\n            RequestRubas.setDimension(\n                REQUEST_PATH,\n                model.requestParams?.url ?? '',\n            );\n            RequestRubas.publish(REQUEST_FAILED, payload);\n            return Promise.reject(model);\n        };\n    }\n}\n"],"mappings":";;;;;;;AAAA;;AACA;;AAOA;AACA;AACA;AACe,MAAMA,2BAAN,SAA0CC,wBAA1C,CAAsD;EACjEC,OAAO,GAA2D;IAC9D,OAAO,UAAUC,KAAV,EAAmC;MAAA;;MACtC,MAAMC,OAAO,GAAGC,IAAI,CAACC,GAAL,EAAhB;MACA,MAAMC,SAAS,4CAAIJ,KAAK,CAACK,KAAV,iDAAI,aAAaC,mBAAjB,yEACXL,OADJ;;MAEAM,2BAAaC,YAAb,CACIC,0BADJ,mDAEIT,KAAK,CAACU,aAFV,yDAEI,qBAAqBC,GAFzB,yEAEgC,EAFhC;;MAIAJ,2BAAaK,OAAb,CAAqBC,6BAArB;;MACAC,OAAO,CAACC,GAAR,CACK,2CACGd,OAAO,GAAGG,SACb,EAHL;MAKA,OAAOY,OAAO,CAACC,OAAR,CAAgB,EACnB,GAAGjB,KADgB;QAEnBK,KAAK,EAAE,EAAE,GAAGL,KAAK,CAACK,KAAX;UAAkBa,iBAAiB,EAAEjB;QAArC;MAFY,CAAhB,CAAP;IAIH,CAlBD;EAmBH;;EAEDkB,KAAK,GAA2D;IAC5D,OAAO,UAAUnB,KAAV,EAAmC;MAAA;;MACtC,MAAMoB,IAAI,2DACNpB,KAAK,CAACqB,MADA,kDACN,cAAcD,IADR,qFAENpB,KAAK,CAACqB,MAFA,mDAEN,eAAcC,MAFR,2DAGNtB,KAAK,CAACqB,MAHA,mDAGN,eAAcE,MAHR,uCAIN,CAAC,CAJL;MAKA,MAAMC,OAAO,GAAG,IAAIC,GAAJ,EAAhB;MACAD,OAAO,CAACE,GAAR,CAAY,WAAZ,EAAyBN,IAAzB;MACAI,OAAO,CAACE,GAAR,CAAY,UAAZ,6CAAwB1B,KAAK,CAACqB,MAA9B,mDAAwB,eAAcM,OAAtC,yEAAiD,EAAjD;;MACApB,2BAAaC,YAAb,CACIC,0BADJ,qDAEIT,KAAK,CAACU,aAFV,0DAEI,sBAAqBC,GAFzB,2EAEgC,EAFhC;;MAIAJ,2BAAaK,OAAb,CAAqBgB,4BAArB,EAAqCJ,OAArC;;MACA,OAAOR,OAAO,CAACa,MAAR,CAAe7B,KAAf,CAAP;IACH,CAfD;EAgBH;;AAxCgE"}