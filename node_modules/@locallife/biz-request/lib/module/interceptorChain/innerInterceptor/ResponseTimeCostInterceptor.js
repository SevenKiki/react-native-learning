import { Interceptor } from '@locallife/base-request';
import { REQUEST_FAILED, REQUEST_PATH, REQUEST_SUCCESS, RequestRubas } from '../../util/RequestRubas';
/**
 * 请求耗时纪录
 */

export default class ResponseTimeCostInterceptor extends Interceptor {
  proceed() {
    return function (model) {
      var _model$extra$sysTimeR, _model$extra, _model$requestParams$, _model$requestParams;

      const endTime = Date.now();
      const startTime = (_model$extra$sysTimeR = (_model$extra = model.extra) === null || _model$extra === void 0 ? void 0 : _model$extra.sysTimeRequestStart) !== null && _model$extra$sysTimeR !== void 0 ? _model$extra$sysTimeR : endTime;
      RequestRubas.setDimension(REQUEST_PATH, (_model$requestParams$ = (_model$requestParams = model.requestParams) === null || _model$requestParams === void 0 ? void 0 : _model$requestParams.url) !== null && _model$requestParams$ !== void 0 ? _model$requestParams$ : '');
      RequestRubas.publish(REQUEST_SUCCESS);
      console.log(`@locallife/biz-request requestCostTime: ${endTime - startTime}`);
      return Promise.resolve({ ...model,
        extra: { ...model.extra,
          sysTimeRequestEnd: endTime
        }
      });
    };
  }

  error() {
    return function (model) {
      var _ref, _ref2, _model$reason$code, _model$reason, _model$reason2, _model$reason3, _model$reason$message, _model$reason4, _model$requestParams$2, _model$requestParams2;

      const code = (_ref = (_ref2 = (_model$reason$code = (_model$reason = model.reason) === null || _model$reason === void 0 ? void 0 : _model$reason.code) !== null && _model$reason$code !== void 0 ? _model$reason$code : (_model$reason2 = model.reason) === null || _model$reason2 === void 0 ? void 0 : _model$reason2.status) !== null && _ref2 !== void 0 ? _ref2 : (_model$reason3 = model.reason) === null || _model$reason3 === void 0 ? void 0 : _model$reason3.result) !== null && _ref !== void 0 ? _ref : -1;
      const payload = new Map();
      payload.set('errorCode', code);
      payload.set('errorMsg', (_model$reason$message = (_model$reason4 = model.reason) === null || _model$reason4 === void 0 ? void 0 : _model$reason4.message) !== null && _model$reason$message !== void 0 ? _model$reason$message : '');
      RequestRubas.setDimension(REQUEST_PATH, (_model$requestParams$2 = (_model$requestParams2 = model.requestParams) === null || _model$requestParams2 === void 0 ? void 0 : _model$requestParams2.url) !== null && _model$requestParams$2 !== void 0 ? _model$requestParams$2 : '');
      RequestRubas.publish(REQUEST_FAILED, payload);
      return Promise.reject(model);
    };
  }

}
//# sourceMappingURL=ResponseTimeCostInterceptor.js.map