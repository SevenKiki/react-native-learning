{"version":3,"names":["RequestParamsVerifyInterceptor","BaseRequestImpl","RequestTimeCostInterceptor","ResponseTimeCostInterceptor","ResponseBaseVerifyInterceptor","ResponseMonitorLogInterceptor","BizRequestImpl","init","interceptorParams","defaultInterceptorParams","initInnerInterceptors","requestInnerInterceptors","responseInnerInterceptors","config","customInnerRequestInterceptors","forEach","value","push","enableRequestParamsVerify","disableLogTimeCost","customInnerResponseInterceptors","unshift","disableReportMonitorLog","enableResponseBaseVerify","getDefaultConfig","request","param"],"sources":["BizRequestImpl.ts"],"sourcesContent":["import RequestParamsVerifyInterceptor from '../interceptorChain/innerInterceptor/RequestParamsVerifyInterceptor';\nimport {\n    BaseRequestImpl,\n    Interceptor,\n    IRequestParam,\n    KSBaseResponse,\n    RequestConfig,\n} from '@locallife/base-request';\nimport { BizRequestConfig } from '@locallife/biz-request';\nimport RequestTimeCostInterceptor from '../interceptorChain/innerInterceptor/RequestTimeCostInterceptor';\nimport ResponseTimeCostInterceptor from '../interceptorChain/innerInterceptor/ResponseTimeCostInterceptor';\nimport { ResponseBaseVerifyInterceptor } from '../interceptorChain/innerInterceptor/ResponseBaseVerifyInterceptor';\nimport { InterceptorParams } from '../model/InterceptorParams';\nimport ResponseMonitorLogInterceptor from '../interceptorChain/innerInterceptor/ResponseMonitorLogInterceptor';\n\nexport class BizRequestImpl extends BaseRequestImpl {\n    static defaultInterceptorParams?: InterceptorParams;\n\n    init(interceptorParams?: InterceptorParams) {\n        BizRequestImpl.defaultInterceptorParams = interceptorParams;\n    }\n\n    initInnerInterceptors(\n        requestInnerInterceptors: Array<Interceptor>,\n        responseInnerInterceptors: Array<Interceptor>,\n        config?: BizRequestConfig,\n    ) {\n        super.initInnerInterceptors(\n            requestInnerInterceptors,\n            responseInnerInterceptors,\n            config,\n        );\n        BizRequestImpl.defaultInterceptorParams?.customInnerRequestInterceptors?.forEach(\n            (value) => {\n                if (value) {\n                    requestInnerInterceptors.push(value);\n                }\n            },\n        );\n        const enableRequestParamsVerify =\n            config?.enableRequestParamsVerify === true ||\n            (config?.enableRequestParamsVerify !== false &&\n                BizRequestImpl.defaultInterceptorParams\n                    ?.enableRequestParamsVerify);\n        if (enableRequestParamsVerify) {\n            requestInnerInterceptors.push(new RequestParamsVerifyInterceptor());\n        }\n        !BizRequestImpl.defaultInterceptorParams?.disableLogTimeCost &&\n            requestInnerInterceptors.push(new RequestTimeCostInterceptor());\n        BizRequestImpl.defaultInterceptorParams?.customInnerResponseInterceptors?.forEach(\n            (value) => {\n                if (value) {\n                    requestInnerInterceptors.unshift(value);\n                }\n            },\n        );\n        !BizRequestImpl.defaultInterceptorParams?.disableReportMonitorLog &&\n            responseInnerInterceptors.unshift(\n                new ResponseMonitorLogInterceptor(),\n            );\n        const enableResponseBaseVerify =\n            config?.enableResponseBaseVerify === true ||\n            (config?.enableResponseBaseVerify !== false &&\n                BizRequestImpl.defaultInterceptorParams\n                    ?.enableResponseBaseVerify);\n        if (enableResponseBaseVerify) {\n            responseInnerInterceptors.unshift(\n                new ResponseBaseVerifyInterceptor(),\n            );\n        }\n        !BizRequestImpl.defaultInterceptorParams?.disableLogTimeCost &&\n            responseInnerInterceptors.unshift(\n                new ResponseTimeCostInterceptor(),\n            );\n    }\n\n    getDefaultConfig(): BizRequestConfig {\n        return {};\n        // 先不设置默认值\n        // return DefaultBizRequestConfig;\n    }\n\n    request(\n        param: IRequestParam,\n        config?: RequestConfig,\n    ): Promise<KSBaseResponse> {\n        return super.request(param, config);\n    }\n}\n"],"mappings":";;AAAA,OAAOA,8BAAP,MAA2C,qEAA3C;AACA,SACIC,eADJ,QAMO,yBANP;AAQA,OAAOC,0BAAP,MAAuC,iEAAvC;AACA,OAAOC,2BAAP,MAAwC,kEAAxC;AACA,SAASC,6BAAT,QAA8C,oEAA9C;AAEA,OAAOC,6BAAP,MAA0C,oEAA1C;AAEA,OAAO,MAAMC,cAAN,SAA6BL,eAA7B,CAA6C;EAGhDM,IAAI,CAACC,iBAAD,EAAwC;IACxCF,cAAc,CAACG,wBAAf,GAA0CD,iBAA1C;EACH;;EAEDE,qBAAqB,CACjBC,wBADiB,EAEjBC,yBAFiB,EAGjBC,MAHiB,EAInB;IAAA;;IACE,MAAMH,qBAAN,CACIC,wBADJ,EAEIC,yBAFJ,EAGIC,MAHJ;IAKA,yBAAAP,cAAc,CAACG,wBAAf,0GAAyCK,8BAAzC,kFAAyEC,OAAzE,CACKC,KAAD,IAAW;MACP,IAAIA,KAAJ,EAAW;QACPL,wBAAwB,CAACM,IAAzB,CAA8BD,KAA9B;MACH;IACJ,CALL;IAOA,MAAME,yBAAyB,GAC3B,CAAAL,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEK,yBAAR,MAAsC,IAAtC,IACC,CAAAL,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEK,yBAAR,MAAsC,KAAtC,+BACGZ,cAAc,CAACG,wBADlB,2DACG,uBACMS,yBAFT,CAFL;;IAKA,IAAIA,yBAAJ,EAA+B;MAC3BP,wBAAwB,CAACM,IAAzB,CAA8B,IAAIjB,8BAAJ,EAA9B;IACH;;IACD,4BAACM,cAAc,CAACG,wBAAhB,mDAAC,uBAAyCU,kBAA1C,KACIR,wBAAwB,CAACM,IAAzB,CAA8B,IAAIf,0BAAJ,EAA9B,CADJ;IAEA,0BAAAI,cAAc,CAACG,wBAAf,4GAAyCW,+BAAzC,kFAA0EL,OAA1E,CACKC,KAAD,IAAW;MACP,IAAIA,KAAJ,EAAW;QACPL,wBAAwB,CAACU,OAAzB,CAAiCL,KAAjC;MACH;IACJ,CALL;IAOA,4BAACV,cAAc,CAACG,wBAAhB,mDAAC,uBAAyCa,uBAA1C,KACIV,yBAAyB,CAACS,OAA1B,CACI,IAAIhB,6BAAJ,EADJ,CADJ;IAIA,MAAMkB,wBAAwB,GAC1B,CAAAV,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEU,wBAAR,MAAqC,IAArC,IACC,CAAAV,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEU,wBAAR,MAAqC,KAArC,+BACGjB,cAAc,CAACG,wBADlB,2DACG,uBACMc,wBAFT,CAFL;;IAKA,IAAIA,wBAAJ,EAA8B;MAC1BX,yBAAyB,CAACS,OAA1B,CACI,IAAIjB,6BAAJ,EADJ;IAGH;;IACD,4BAACE,cAAc,CAACG,wBAAhB,mDAAC,uBAAyCU,kBAA1C,KACIP,yBAAyB,CAACS,OAA1B,CACI,IAAIlB,2BAAJ,EADJ,CADJ;EAIH;;EAEDqB,gBAAgB,GAAqB;IACjC,OAAO,EAAP,CADiC,CAEjC;IACA;EACH;;EAEDC,OAAO,CACHC,KADG,EAEHb,MAFG,EAGoB;IACvB,OAAO,MAAMY,OAAN,CAAcC,KAAd,EAAqBb,MAArB,CAAP;EACH;;AAxE+C;;gBAAvCP,c"}