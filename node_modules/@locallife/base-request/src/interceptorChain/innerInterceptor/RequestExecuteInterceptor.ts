import { Interceptor } from '@locallife/base-request';
import { InterceptorModel } from '@locallife/base-request';
import { execute } from '../../network';

export class RequestExecuteInterceptor extends Interceptor {
    proceed() {
        return (model: InterceptorModel) => {
            return execute(model.requestParams)
                .then((rawResponse) => {
                    const isStringRes =
                        model.requestParams?.responseType === 'string';
                    const response =
                        model.requestConfig?.responseParseFunc?.(rawResponse) ??
                        (isStringRes ? JSON.parse(rawResponse) : rawResponse);

                    return Promise.resolve({
                        ...model,
                        response: response,
                    });
                })
                .catch((reason) => {
                    return Promise.reject({ ...model, reason: reason });
                });
        };
    }
}
