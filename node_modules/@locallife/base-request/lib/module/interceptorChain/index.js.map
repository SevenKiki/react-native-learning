{"version":3,"names":["RequestExecuteInterceptor","buildChain","requestInterceptors","requestInnerInterceptors","responseInnerInterceptors","responseInterceptors","start","config","params","chains","len","length","model","requestConfig","requestParams","promise","Promise","resolve","i","then","proceed","catch","error","response","reject","reason"],"sources":["index.ts"],"sourcesContent":["import {\n    Interceptor,\n    IRequestParam,\n    KSBaseResponse,\n} from '@locallife/base-request';\nimport { RequestConfig } from '../model/RequestConfig';\nimport { InterceptorModel } from '@locallife/base-request';\nimport { RequestExecuteInterceptor } from './innerInterceptor/RequestExecuteInterceptor';\n\nfunction buildChain(\n    requestInterceptors: Array<Interceptor>,\n    requestInnerInterceptors: Array<Interceptor>,\n    responseInnerInterceptors: Array<Interceptor>,\n    responseInterceptors: Array<Interceptor>,\n): Array<Interceptor> {\n    return [\n        ...requestInterceptors,\n        ...requestInnerInterceptors,\n        new RequestExecuteInterceptor(),\n        ...responseInnerInterceptors,\n        ...responseInterceptors,\n    ];\n}\n\nexport function start(\n    requestInnerInterceptors: Array<Interceptor>,\n    responseInnerInterceptors: Array<Interceptor>,\n    config: RequestConfig,\n    params: IRequestParam,\n): Promise<KSBaseResponse> {\n    const chains = buildChain(\n        config?.requestInterceptors ?? [],\n        requestInnerInterceptors ?? [],\n        responseInnerInterceptors ?? [],\n        config?.responseInterceptors ?? [],\n    );\n    const len = chains.length;\n    const model = {\n        requestConfig: config,\n        requestParams: params,\n    } as InterceptorModel;\n    let promise = Promise.resolve(model);\n    for (let i = 0; i < len; i++) {\n        promise = promise.then(chains[i].proceed()).catch(chains[i].error());\n    }\n    // @ts-ignored\n    return promise\n        .then((model: InterceptorModel) => {\n            return Promise.resolve(model.response);\n        })\n        .catch((model: InterceptorModel) => {\n            return Promise.reject(model.reason);\n        });\n}\n"],"mappings":"AAOA,SAASA,yBAAT,QAA0C,8CAA1C;;AAEA,SAASC,UAAT,CACIC,mBADJ,EAEIC,wBAFJ,EAGIC,yBAHJ,EAIIC,oBAJJ,EAKsB;EAClB,OAAO,CACH,GAAGH,mBADA,EAEH,GAAGC,wBAFA,EAGH,IAAIH,yBAAJ,EAHG,EAIH,GAAGI,yBAJA,EAKH,GAAGC,oBALA,CAAP;AAOH;;AAED,OAAO,SAASC,KAAT,CACHH,wBADG,EAEHC,yBAFG,EAGHG,MAHG,EAIHC,MAJG,EAKoB;EAAA;;EACvB,MAAMC,MAAM,GAAGR,UAAU,0BACrBM,MADqB,aACrBA,MADqB,uBACrBA,MAAM,CAAEL,mBADa,yEACU,EADV,EAErBC,wBAFqB,aAErBA,wBAFqB,cAErBA,wBAFqB,GAEO,EAFP,EAGrBC,yBAHqB,aAGrBA,yBAHqB,cAGrBA,yBAHqB,GAGQ,EAHR,2BAIrBG,MAJqB,aAIrBA,MAJqB,uBAIrBA,MAAM,CAAEF,oBAJa,yEAIW,EAJX,CAAzB;EAMA,MAAMK,GAAG,GAAGD,MAAM,CAACE,MAAnB;EACA,MAAMC,KAAK,GAAG;IACVC,aAAa,EAAEN,MADL;IAEVO,aAAa,EAAEN;EAFL,CAAd;EAIA,IAAIO,OAAO,GAAGC,OAAO,CAACC,OAAR,CAAgBL,KAAhB,CAAd;;EACA,KAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,GAApB,EAAyBQ,CAAC,EAA1B,EAA8B;IAC1BH,OAAO,GAAGA,OAAO,CAACI,IAAR,CAAaV,MAAM,CAACS,CAAD,CAAN,CAAUE,OAAV,EAAb,EAAkCC,KAAlC,CAAwCZ,MAAM,CAACS,CAAD,CAAN,CAAUI,KAAV,EAAxC,CAAV;EACH,CAfsB,CAgBvB;;;EACA,OAAOP,OAAO,CACTI,IADE,CACIP,KAAD,IAA6B;IAC/B,OAAOI,OAAO,CAACC,OAAR,CAAgBL,KAAK,CAACW,QAAtB,CAAP;EACH,CAHE,EAIFF,KAJE,CAIKT,KAAD,IAA6B;IAChC,OAAOI,OAAO,CAACQ,MAAR,CAAeZ,KAAK,CAACa,MAArB,CAAP;EACH,CANE,CAAP;AAOH"}