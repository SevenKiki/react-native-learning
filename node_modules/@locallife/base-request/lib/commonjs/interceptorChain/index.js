"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.start = start;

var _RequestExecuteInterceptor = require("./innerInterceptor/RequestExecuteInterceptor");

function buildChain(requestInterceptors, requestInnerInterceptors, responseInnerInterceptors, responseInterceptors) {
  return [...requestInterceptors, ...requestInnerInterceptors, new _RequestExecuteInterceptor.RequestExecuteInterceptor(), ...responseInnerInterceptors, ...responseInterceptors];
}

function start(requestInnerInterceptors, responseInnerInterceptors, config, params) {
  var _config$requestInterc, _config$responseInter;

  const chains = buildChain((_config$requestInterc = config === null || config === void 0 ? void 0 : config.requestInterceptors) !== null && _config$requestInterc !== void 0 ? _config$requestInterc : [], requestInnerInterceptors !== null && requestInnerInterceptors !== void 0 ? requestInnerInterceptors : [], responseInnerInterceptors !== null && responseInnerInterceptors !== void 0 ? responseInnerInterceptors : [], (_config$responseInter = config === null || config === void 0 ? void 0 : config.responseInterceptors) !== null && _config$responseInter !== void 0 ? _config$responseInter : []);
  const len = chains.length;
  const model = {
    requestConfig: config,
    requestParams: params
  };
  let promise = Promise.resolve(model);

  for (let i = 0; i < len; i++) {
    promise = promise.then(chains[i].proceed()).catch(chains[i].error());
  } // @ts-ignored


  return promise.then(model => {
    return Promise.resolve(model.response);
  }).catch(model => {
    return Promise.reject(model.reason);
  });
}
//# sourceMappingURL=index.js.map