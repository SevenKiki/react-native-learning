{"version":3,"names":["_react","require","_reactNative","getServerTimeStamp","serverTimeStamp","NativeModules","Kds","invoke","JSON","stringify","error","Date","now","formatNum","num","toString","generateCountDown","nowTime","endTime","useDay","res","hour","minute","second","nextUpdate","diff","seconds","Math","ceil","minutes","floor","hours","days","day","useCountDown","params","selfNowTime","setSelfNowTime","useState","countDownRes","setCountDownRes","isOver","useMemo","useEffect","timer","setTimeout","clearTimeout","setInterval","clearInterval","exports","_default","default"],"sources":["index.tsx"],"sourcesContent":["import { useEffect, useMemo, useState } from 'react';\nimport { NativeModules } from 'react-native';\n\nexport type CountDownParams = {\n    // 倒计时结束时间\n    endTime: number;\n    // 倒计时是否启动更新\n    active?: boolean;\n    // 倒计时是否使用天（单位）\n    useDay?: boolean;\n};\n\n/**\n * 获取服务器时间\n * @returns number\n */\nconst getServerTimeStamp = async () => {\n    try {\n        const { serverTimeStamp } = await NativeModules.Kds.invoke(\n            'system',\n            'getServerTime',\n            JSON.stringify({}),\n        );\n        return serverTimeStamp;\n    } catch (error) {\n        return +Date.now();\n    }\n};\n\n/**\n * 格式化时间\n */\nconst formatNum = (num: number) => {\n    if (num < 10) {\n        return `0${(num || 0).toString()}`;\n    }\n    return (num || '00').toString();\n};\n\n/**\n * 根据时间差值计算倒计时\n * @param time\n */\nconst generateCountDown = (\n    nowTime: number,\n    endTime: number,\n    useDay?: boolean,\n): { res: ICountDownRes; nextUpdate: number } => {\n    const res: ICountDownRes = {\n        hour: '00',\n        minute: '00',\n        second: '00',\n    };\n    if (!endTime || !nowTime) {\n        return { res, nextUpdate: -1 };\n    }\n    const diff = endTime - nowTime;\n    if (diff <= 0) {\n        return { res, nextUpdate: -1 };\n    }\n    const nextUpdate = diff % 1000 || 0;\n    const seconds = Math.ceil(diff / 1000);\n    res.second = formatNum(seconds % 60);\n    const minutes = Math.floor(seconds / 60);\n    res.minute = formatNum(minutes % 60);\n    const hours = Math.floor(minutes / 60);\n    if (useDay) {\n        res.hour = formatNum(hours % 24);\n        const days = Math.floor(hours / 24);\n        res.day = formatNum(days);\n    } else {\n        res.hour = formatNum(hours);\n    }\n    return {\n        res,\n        nextUpdate,\n    };\n};\n\nexport interface ICountDownRes {\n    day?: string;\n    hour: string;\n    minute: string;\n    second: string;\n}\n\nexport const useCountDown = (\n    params: CountDownParams,\n): { countDownRes: ICountDownRes; isOver: boolean } => {\n    // 当前时间\n    const [selfNowTime, setSelfNowTime] = useState(Date.now());\n\n    const [countDownRes, setCountDownRes] = useState<ICountDownRes>(() => {\n        const { res } = generateCountDown(\n            selfNowTime,\n            params.endTime,\n            params.useDay,\n        );\n        return res;\n    });\n\n    // 倒计时是否结束\n    const isOver = useMemo(() => {\n        return params.endTime <= selfNowTime;\n    }, [params.endTime, selfNowTime]);\n\n    useEffect(() => {\n        const { res } = generateCountDown(\n            selfNowTime,\n            params.endTime,\n            params.useDay,\n        );\n        setCountDownRes(res);\n    }, [selfNowTime, params.endTime, params.useDay]);\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            if (params?.endTime <= selfNowTime) {\n                return;\n            }\n            setSelfNowTime(selfNowTime + 1000);\n        }, 1000);\n        return () => {\n            clearTimeout(timer);\n        };\n    }, [selfNowTime, params?.endTime]);\n\n    useEffect(() => {\n        const timer = setInterval(async () => {\n            const now = await getServerTimeStamp();\n            setSelfNowTime(now);\n        }, 60 * 1000);\n        return () => {\n            clearInterval(timer);\n        };\n    }, []);\n\n    return { countDownRes, isOver };\n};\n\nexport default useCountDown;\n"],"mappings":"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"}