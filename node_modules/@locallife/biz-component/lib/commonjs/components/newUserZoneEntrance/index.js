"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NewUserZoneEntrance = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _utils = require("@locallife/utils");
var _image = _interopRequireDefault(require("@kds/image"));
var _styles = _interopRequireDefault(require("./styles"));
var _api = require("./api");
var _baseComponent = require("@locallife/base-component");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
/**
 * 新人专区入口
 *      货架列表页Banner位置
 *      POI页
 */
const NewUserZoneEntrance = /*#__PURE__*/_react.default.memo(entranceData => {
  var _entranceData$data, _entranceData$data2, _entranceData$data2$p, _entranceData$data3, _entranceData$data3$p, _entranceData$data3$p2;
  function doCheckEligibility() {
    // 核验资格
    (0, _api.isEligibility)({
      source: 1 // banner检查是否新用户取source=1的固定值
    }).then(result => {
      if (result !== null && result !== void 0 && result.data) {
        if (result.data.newUser) {
          // 有资格
          entranceData.handleClick(true);
        } else {
          var _entranceData$refresh;
          // 无资格
          entranceData.handleClick(false);
          // 提示
          (0, _utils.showToast)('您当前不满足新用户身份哦，看看其他商品吧。');
          // 刷新
          (_entranceData$refresh = entranceData.refreshData) === null || _entranceData$refresh === void 0 ? void 0 : _entranceData$refresh.call(entranceData);
        }
      } else {
        // 数据返回异常
        (0, _utils.showToast)('数据异常，请重试。');
      }
    }).catch(() => {
      // 异常提示
      (0, _utils.showToast)('网络异常，请重试。');
    });
  }
  function entranceHandleClick() {
    if ((0, _utils.isUserLogin)()) {
      // 已经登录
      doCheckEligibility();
    } else {
      // 未登录，不跳转
      entranceData.handleClick(false);
      // 唤起登录页面
      (0, _utils.needLogin)(() => {
        // 成功登录
        doCheckEligibility();
      }, () => {
        // 登录失败，不做处理
      });
    }
  }
  return (_entranceData$data = entranceData.data) !== null && _entranceData$data !== void 0 && _entranceData$data.icon ?
  /*#__PURE__*/
  // eslint-disable-next-line react/jsx-no-bind
  _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
    onPress: entranceHandleClick
  }, /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: [_styles.default.rootContainer, entranceData.contentContainerStyle]
  }, /*#__PURE__*/_react.default.createElement(_image.default, {
    style: [_styles.default.bgStyle, entranceData.bgStyle],
    source: {
      uri: entranceData.data.icon
    },
    resizeMode: 'cover'
  }, /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: [_styles.default.disCountArea, entranceData.disCountAreaStyle]
  }, /*#__PURE__*/_react.default.createElement(_reactNative.Text, {
    style: [_styles.default.disCountContentType, entranceData.disCountContentTypeStyle]
  }, '¥'), /*#__PURE__*/_react.default.createElement(_baseComponent.ShowWithData, {
    data: (_entranceData$data2 = entranceData.data) === null || _entranceData$data2 === void 0 ? void 0 : (_entranceData$data2$p = _entranceData$data2.params) === null || _entranceData$data2$p === void 0 ? void 0 : _entranceData$data2$p.price
  }, /*#__PURE__*/_react.default.createElement(_reactNative.Text, {
    style: [_styles.default.disCountContent, entranceData.disCountContentStyle]
  }, entranceData.data.params.price)), /*#__PURE__*/_react.default.createElement(_baseComponent.ShowWithData, {
    data: ((_entranceData$data3 = entranceData.data) === null || _entranceData$data3 === void 0 ? void 0 : (_entranceData$data3$p = _entranceData$data3.params) === null || _entranceData$data3$p === void 0 ? void 0 : (_entranceData$data3$p2 = _entranceData$data3$p.subIcons) === null || _entranceData$data3$p2 === void 0 ? void 0 : _entranceData$data3$p2.length) > 0
  }, /*#__PURE__*/_react.default.createElement(_image.default, {
    style: [_styles.default.disCountTitleImg, entranceData.disCountTitleImgStyle],
    source: {
      uri: entranceData.data.params.subIcons[0]
    },
    resizeMode: 'cover'
  })))))) : /*#__PURE__*/_react.default.createElement(_reactNative.View, null);
});
exports.NewUserZoneEntrance = NewUserZoneEntrance;
//# sourceMappingURL=index.js.map