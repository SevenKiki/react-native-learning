"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CustomIcon = void 0;
var _react = _interopRequireWildcard(require("react"));
var _image = _interopRequireDefault(require("@kds/image"));
var _transAdaptScreenSize = require("./utils/transAdaptScreenSize");
var _useAdaptThemeValueHook = require("./hooks/useAdaptThemeValueHook");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
// 单个icon

// 单图片icon
const CustomIcon = /*#__PURE__*/_react.default.memo(props => {
  const {
    iconModel,
    adaptScreen,
    adaptDark = true
  } = props;
  const {
    iconStyle
  } = iconModel;
  const {
    width,
    height
  } = (0, _react.useMemo)(() => {
    return {
      width: (0, _transAdaptScreenSize.transAdaptScreenSize)(Number(iconStyle === null || iconStyle === void 0 ? void 0 : iconStyle.iconWidth), adaptScreen),
      height: (0, _transAdaptScreenSize.transAdaptScreenSize)(Number(iconStyle === null || iconStyle === void 0 ? void 0 : iconStyle.iconHeight), adaptScreen)
    };
  }, [adaptScreen, iconStyle === null || iconStyle === void 0 ? void 0 : iconStyle.iconHeight, iconStyle === null || iconStyle === void 0 ? void 0 : iconStyle.iconWidth]);
  const iconUrls = (0, _useAdaptThemeValueHook.useAdaptThemeValueHook)({
    light: iconModel.iconUrls ?? [],
    dark: iconModel.darkIconUrls ?? iconModel.iconUrls ?? []
  }, adaptDark);
  return /*#__PURE__*/_react.default.createElement(_image.default, {
    resizeMode: "cover",
    style: [{
      width: width,
      height: height,
      marginLeft: (0, _transAdaptScreenSize.transAdaptScreenSize)(iconStyle === null || iconStyle === void 0 ? void 0 : iconStyle.marginLeft, adaptScreen),
      marginRight: (0, _transAdaptScreenSize.transAdaptScreenSize)(iconStyle === null || iconStyle === void 0 ? void 0 : iconStyle.marginRight, adaptScreen)
    }],
    imageWarningThreshold: {
      imageSizeWarningThreshold: -1,
      // no image size warning
      imageMemoryWarningThreshold: -1 // no memory warning
    },

    source: {
      uris: iconUrls
    },
    cropSize: {
      width: width * 3,
      height: height * 3
    }
  });
});
exports.CustomIcon = CustomIcon;
//# sourceMappingURL=CustomIcon.js.map