"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SingleLineIconAndText = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _CustomIcon = require("./CustomIcon");
var _emptyUtils = require("../../utils/emptyUtils");
var _CustomText = require("./CustomText");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
// 左侧一排图标右侧一排文案

const styles = _reactNative.StyleSheet.create({
  container: {
    overflow: 'hidden',
    flexDirection: 'row',
    alignItems: 'center'
  }
});
// 左侧一排图标右侧一排文案
const SingleLineIconAndText = props => {
  var _data$iconInfos, _data$textInfos;
  const {
    data,
    adaptDark = true
  } = props;
  const onPressCard = (0, _react.useCallback)(() => {
    if (props.onPress) {
      props.onPress(props.bizTags);
    }
  }, [props]);
  return data && ((0, _emptyUtils.notEmptyArray)(data.iconInfos) || (0, _emptyUtils.notEmptyArray)(data.textInfos)) ? /*#__PURE__*/_react.default.createElement(_reactNative.TouchableWithoutFeedback, {
    onPress: onPressCard
  }, /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: [styles.container]
  }, (_data$iconInfos = data.iconInfos) === null || _data$iconInfos === void 0 ? void 0 : _data$iconInfos.map((item, index) => {
    return /*#__PURE__*/_react.default.createElement(_CustomIcon.CustomIcon, {
      adaptDark: adaptDark,
      iconModel: item,
      adaptScreen: props.adaptScreen,
      key: index
    });
  }), (_data$textInfos = data.textInfos) === null || _data$textInfos === void 0 ? void 0 : _data$textInfos.map((item, index) => {
    return /*#__PURE__*/_react.default.createElement(_CustomText.CustomText, {
      adaptDark: adaptDark,
      textModel: item,
      adaptScreen: props.adaptScreen,
      key: index
    });
  }))) : null;
};
exports.SingleLineIconAndText = SingleLineIconAndText;
//# sourceMappingURL=SingleLineIconAndText.js.map