"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SingleLineTextIconText = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _CustomText = require("./CustomText");
var _CustomIcon = require("./CustomIcon");
var _useCommonStyleHook = require("./hooks/useCommonStyleHook");
var _baseComponent = require("@locallife/base-component");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const styles = _reactNative.StyleSheet.create({
  container: {
    flexDirection: 'row',
    alignItems: 'center'
  }
});

// text icon text çš„ tag
const SingleLineTextIconText = /*#__PURE__*/(0, _react.memo)(_ref => {
  let {
    data,
    onPress,
    bizTags,
    adaptScreen,
    adaptDark = true
  } = _ref;
  const {
    textInfos,
    contentStyle,
    iconInfos
  } = data || {};
  const leftPriceInfo = textInfos === null || textInfos === void 0 ? void 0 : textInfos[0];
  const middleInfo = iconInfos === null || iconInfos === void 0 ? void 0 : iconInfos[0];
  const rightPriceInfo = textInfos === null || textInfos === void 0 ? void 0 : textInfos[1];
  const onPressCard = (0, _react.useCallback)(() => {
    onPress && onPress(bizTags);
  }, [bizTags, onPress]);
  const customStyle = (0, _useCommonStyleHook.useCommonStyleHook)(contentStyle, adaptScreen);
  return /*#__PURE__*/_react.default.createElement(_baseComponent.ShowWithData, {
    data: !!leftPriceInfo && !!middleInfo && !!rightPriceInfo
  }, /*#__PURE__*/_react.default.createElement(_reactNative.TouchableWithoutFeedback, {
    onPress: onPressCard
  }, /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: [styles.container, customStyle]
  }, /*#__PURE__*/_react.default.createElement(_CustomText.CustomText, {
    adaptDark: adaptDark,
    textModel: leftPriceInfo,
    adaptScreen: adaptScreen
  }), /*#__PURE__*/_react.default.createElement(_CustomIcon.CustomIcon, {
    adaptDark: adaptDark,
    iconModel: middleInfo,
    adaptScreen: adaptScreen
  }), /*#__PURE__*/_react.default.createElement(_CustomText.CustomText, {
    adaptDark: adaptDark,
    textModel: rightPriceInfo,
    adaptScreen: adaptScreen
  }))));
});
exports.SingleLineTextIconText = SingleLineTextIconText;
//# sourceMappingURL=SingleLineTextIconText.js.map