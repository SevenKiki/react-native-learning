"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useCommonStyleHook = void 0;
var _transAdaptScreenSize = require("../utils/transAdaptScreenSize");
const useCommonStyleHook = (contentStyle, adaptScreen) => {
  if (contentStyle) {
    return {
      borderColor: contentStyle === null || contentStyle === void 0 ? void 0 : contentStyle.borderColor,
      borderTopLeftRadius: (0, _transAdaptScreenSize.transAdaptScreenSize)(contentStyle === null || contentStyle === void 0 ? void 0 : contentStyle.borderTopLeftRadius, adaptScreen),
      borderTopRightRadius: (0, _transAdaptScreenSize.transAdaptScreenSize)(contentStyle === null || contentStyle === void 0 ? void 0 : contentStyle.borderTopRightRadius, adaptScreen),
      borderBottomLeftRadius: (0, _transAdaptScreenSize.transAdaptScreenSize)(contentStyle === null || contentStyle === void 0 ? void 0 : contentStyle.borderBottomLeftRadius, adaptScreen),
      borderBottomRightRadius: (0, _transAdaptScreenSize.transAdaptScreenSize)(contentStyle === null || contentStyle === void 0 ? void 0 : contentStyle.borderBottomRightRadius, adaptScreen),
      borderWidth: (0, _transAdaptScreenSize.transAdaptScreenSize)(contentStyle === null || contentStyle === void 0 ? void 0 : contentStyle.borderWidth, adaptScreen),
      marginLeft: (0, _transAdaptScreenSize.transAdaptScreenSize)(contentStyle === null || contentStyle === void 0 ? void 0 : contentStyle.marginLeft, adaptScreen),
      marginRight: (0, _transAdaptScreenSize.transAdaptScreenSize)(contentStyle === null || contentStyle === void 0 ? void 0 : contentStyle.marginRight, adaptScreen),
      paddingLeft: (0, _transAdaptScreenSize.transAdaptScreenSize)(contentStyle === null || contentStyle === void 0 ? void 0 : contentStyle.paddingLeft, adaptScreen),
      paddingRight: (0, _transAdaptScreenSize.transAdaptScreenSize)(contentStyle === null || contentStyle === void 0 ? void 0 : contentStyle.paddingRight, adaptScreen),
      paddingTop: (0, _transAdaptScreenSize.transAdaptScreenSize)(contentStyle === null || contentStyle === void 0 ? void 0 : contentStyle.paddingTop, adaptScreen),
      paddingBottom: (0, _transAdaptScreenSize.transAdaptScreenSize)(contentStyle === null || contentStyle === void 0 ? void 0 : contentStyle.paddingBottom, adaptScreen),
      height: (0, _transAdaptScreenSize.transAdaptScreenSize)(contentStyle === null || contentStyle === void 0 ? void 0 : contentStyle.height, adaptScreen),
      backgroundColor: contentStyle === null || contentStyle === void 0 ? void 0 : contentStyle.bgColor
    };
  }
  return undefined;
};
exports.useCommonStyleHook = useCommonStyleHook;
//# sourceMappingURL=useCommonStyleHook.js.map