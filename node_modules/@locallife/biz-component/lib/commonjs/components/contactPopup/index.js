"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ContactPopup = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _krn = require("@kid-ui/krn");
var _styles = _interopRequireDefault(require("./styles"));
var _tsLbsKrnUtils = require("@lux/ts-lbs-krn-utils");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const {
  screenSize
} = _tsLbsKrnUtils.screenUnit;
const {
  makePhoneCall
} = _tsLbsKrnUtils.bridge;
const ContactPopup = _ref => {
  let {
    phoneList
  } = _ref;
  /**
   * 拨打商家电话
   */
  const callSeller = phone => {
    makePhoneCall([phone]);
  };
  /**
   * @param item 当前这条信息
   * @returns 是否只有一条电话数据
   */
  const isOnlyPhone = item => {
    return typeof item === 'string' || typeof item === 'number';
  };
  /**
   * 处理点击
   * @param item 当前这条信息
   */
  const handlePress = item => {
    var _item$custom;
    if (item !== null && item !== void 0 && (_item$custom = item.custom) !== null && _item$custom !== void 0 && _item$custom.customPress) {
      var _item$custom2;
      item === null || item === void 0 ? void 0 : (_item$custom2 = item.custom) === null || _item$custom2 === void 0 ? void 0 : _item$custom2.customPress();
    } else {
      var _item$custom3, _item$custom3$phonePr;
      callSeller(isOnlyPhone(item) ? item : item.phone);
      item === null || item === void 0 ? void 0 : (_item$custom3 = item.custom) === null || _item$custom3 === void 0 ? void 0 : (_item$custom3$phonePr = _item$custom3.phonePress) === null || _item$custom3$phonePr === void 0 ? void 0 : _item$custom3$phonePr.call(_item$custom3);
    }
  };
  return /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: _styles.default.popupContent
  }, phoneList.map((item, index) => {
    var _item$custom4;
    return /*#__PURE__*/_react.default.createElement(_reactNative.TouchableOpacity, {
      key: index,
      activeOpacity: 1,
      onPress: () => handlePress(item)
    }, index !== 0 && /*#__PURE__*/_react.default.createElement(_reactNative.View, {
      style: _styles.default.dividingLine
    }), /*#__PURE__*/_react.default.createElement(_reactNative.View, {
      style: _styles.default.popupItem
    }, /*#__PURE__*/_react.default.createElement(_reactNative.View, {
      style: _styles.default.popupItemContent
    }, !isOnlyPhone(item) && !!(item !== null && item !== void 0 && item.title) && /*#__PURE__*/_react.default.createElement(_reactNative.Text, {
      style: _styles.default.popupItemDesc
    }, item === null || item === void 0 ? void 0 : item.title, ' '), /*#__PURE__*/_react.default.createElement(_reactNative.Text, {
      style: _styles.default.popupItemDesc
    }, isOnlyPhone(item) ? item : item === null || item === void 0 ? void 0 : item.phone)), /*#__PURE__*/_react.default.createElement(_reactNative.View, {
      style: _styles.default.popupItemIcon
    }, /*#__PURE__*/_react.default.createElement(_krn.KidIcon, {
      kid: (item === null || item === void 0 ? void 0 : (_item$custom4 = item.custom) === null || _item$custom4 === void 0 ? void 0 : _item$custom4.icon) || 'common_baseflat_telephone_24',
      kidColor: 'color_base_black_8',
      size: screenSize(24)
    }))));
  }));
};
exports.ContactPopup = ContactPopup;
//# sourceMappingURL=index.js.map