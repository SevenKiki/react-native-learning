import React, { useMemo } from 'react';
import { View, Text } from 'react-native';
import styles from './styles';
import CommonText from '../commonText/index';
import { getDecimal } from '../../utils/decimal';

/**
 * 套餐详情
 */
export const PackageDetail = _ref => {
  let {
    packageData
  } = _ref;
  const {
    highestPeopleNum,
    lowestPeopleNum,
    remark = ''
  } = packageData;
  /**
   * 建议人数
   */
  const recommendText = useMemo(() => {
    if (highestPeopleNum > 0 && lowestPeopleNum > 0) {
      const recommendNum = highestPeopleNum === lowestPeopleNum ? highestPeopleNum : `${lowestPeopleNum} - ${highestPeopleNum}`;
      return `建议${recommendNum}人使用`;
    }
    return '';
  }, [highestPeopleNum, lowestPeopleNum]);
  return /*#__PURE__*/React.createElement(View, {
    style: styles.container
  }, /*#__PURE__*/React.createElement(Text, {
    style: styles.title
  }, "\u5957\u9910\u8BE6\u60C5"), packageData && packageData.groups && packageData.groups.map((group, index) => {
    const showPackageSelect = Boolean(group.fromNum && group.selectNum && group.fromNum > group.selectNum);
    return /*#__PURE__*/React.createElement(View, {
      key: group.title,
      style: styles.packageDetailItemWrapper
    }, /*#__PURE__*/React.createElement(CommonText, {
      customizationUlPoint: styles.customizationUlPoint
    }, /*#__PURE__*/React.createElement(Text, {
      style: styles.subtitle,
      ellipsizeMode: "tail",
      numberOfLines: 1
    }, `${group.title}${showPackageSelect ? ` ${group.fromNum} 选 ${group.selectNum}` : ''}`)), (group.setMealContents || []).map(item => {
      return /*#__PURE__*/React.createElement(View, {
        key: item.title,
        style: styles.packageDetailItemDistance
      }, /*#__PURE__*/React.createElement(View, {
        style: styles.packageDetailItemRow
      }, /*#__PURE__*/React.createElement(View, {
        style: styles.packageDetailTitle
      }, /*#__PURE__*/React.createElement(Text, {
        style: styles.packageDetailRowTitle
      }, item.title)), /*#__PURE__*/React.createElement(View, {
        style: styles.rowFlexAlignCenter
      }, /*#__PURE__*/React.createElement(Text, {
        style: styles.packageDetailRowNum
      }, `（${item.count}份）`), /*#__PURE__*/React.createElement(View, {
        style: [styles.rowFlexAlignCenter, styles.packageDetailRowPriceAll]
      }, /*#__PURE__*/React.createElement(Text, {
        style: styles.packageDetailRowPrice,
        numberOfLines: 1,
        ellipsizeMode: 'tail'
      }, "\xA5", `${getDecimal(Math.floor(getDecimal(item.price).mul(item.count))).div(100)}`)))));
    }), index === packageData.groups.length - 1 && !recommendText ? null : /*#__PURE__*/React.createElement(Text, {
      style: styles.subGroupsLine
    }));
  }), !!recommendText && /*#__PURE__*/React.createElement(View, {
    style: styles.packageDetailItemWrapper
  }, /*#__PURE__*/React.createElement(CommonText, {
    customizationUlPoint: styles.customizationUlPoint
  }, /*#__PURE__*/React.createElement(Text, {
    style: styles.subtitle
  }, "\u7528\u9910\u4EBA\u6570")), /*#__PURE__*/React.createElement(View, {
    style: [styles.packageDetailItemRow, styles.packageDetailItemDistance, !!remark && styles.subContentLine]
  }, /*#__PURE__*/React.createElement(Text, {
    style: styles.packageDetailRowTitle
  }, recommendText))), !!remark && /*#__PURE__*/React.createElement(View, {
    style: styles.packageDetailItemWrapper
  }, /*#__PURE__*/React.createElement(CommonText, {
    customizationUlPoint: styles.customizationUlPoint
  }, /*#__PURE__*/React.createElement(Text, {
    style: styles.subtitle
  }, "\u5907\u6CE8")), /*#__PURE__*/React.createElement(View, {
    style: [styles.packageDetailItemRow, styles.packageDetailItemDistance]
  }, /*#__PURE__*/React.createElement(Text, {
    style: styles.packageDetailRowTitle
  }, remark))));
};
//# sourceMappingURL=index.js.map