// 一排文案
import React, { useCallback } from 'react';
import { StyleSheet, TouchableWithoutFeedback, View } from 'react-native';
import { CustomText } from './CustomText';
import { useCommonStyleHook } from './hooks/useCommonStyleHook';
const styles = StyleSheet.create({
  container: {
    overflow: 'hidden',
    flexDirection: 'row',
    alignItems: 'center'
  }
});
// 一排文案
export const SingleLineText = props => {
  var _data$textInfos;
  const {
    data,
    adaptScreen,
    adaptDark = true
  } = props;
  const {
    textInfos,
    contentStyle
  } = data || {};
  const onPressCard = useCallback(() => {
    if (props.onPress) {
      props.onPress(props.bizTags);
    }
  }, [props]);
  const customStyle = useCommonStyleHook(contentStyle, adaptScreen);
  return textInfos && (textInfos === null || textInfos === void 0 ? void 0 : textInfos.length) > 0 ? /*#__PURE__*/React.createElement(TouchableWithoutFeedback, {
    onPress: onPressCard
  }, /*#__PURE__*/React.createElement(View, {
    style: [styles.container, customStyle]
  }, data === null || data === void 0 ? void 0 : (_data$textInfos = data.textInfos) === null || _data$textInfos === void 0 ? void 0 : _data$textInfos.map((item, index) => {
    return /*#__PURE__*/React.createElement(CustomText, {
      textModel: item,
      key: index,
      adaptScreen: props.adaptScreen,
      autoRatio: props.autoRatio,
      adaptDark: adaptDark,
      ratio: props.ratio
    });
  }))) : /*#__PURE__*/React.createElement(View, null);
};
//# sourceMappingURL=SingleLineText.js.map