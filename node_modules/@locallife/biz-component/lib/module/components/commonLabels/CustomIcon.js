// 单个icon
import React, { useMemo } from 'react';
import KwaiImage from '@kds/image';
import { transAdaptScreenSize } from './utils/transAdaptScreenSize';
import { useAdaptThemeValueHook } from './hooks/useAdaptThemeValueHook';
// 单图片icon
export const CustomIcon = /*#__PURE__*/React.memo(props => {
  const {
    iconModel,
    adaptScreen,
    adaptDark = true
  } = props;
  const {
    iconStyle
  } = iconModel;
  const {
    width,
    height
  } = useMemo(() => {
    return {
      width: transAdaptScreenSize(Number(iconStyle === null || iconStyle === void 0 ? void 0 : iconStyle.iconWidth), adaptScreen),
      height: transAdaptScreenSize(Number(iconStyle === null || iconStyle === void 0 ? void 0 : iconStyle.iconHeight), adaptScreen)
    };
  }, [adaptScreen, iconStyle === null || iconStyle === void 0 ? void 0 : iconStyle.iconHeight, iconStyle === null || iconStyle === void 0 ? void 0 : iconStyle.iconWidth]);
  const iconUrls = useAdaptThemeValueHook({
    light: iconModel.iconUrls ?? [],
    dark: iconModel.darkIconUrls ?? iconModel.iconUrls ?? []
  }, adaptDark);
  return /*#__PURE__*/React.createElement(KwaiImage, {
    resizeMode: "cover",
    style: [{
      width: width,
      height: height,
      marginLeft: transAdaptScreenSize(iconStyle === null || iconStyle === void 0 ? void 0 : iconStyle.marginLeft, adaptScreen),
      marginRight: transAdaptScreenSize(iconStyle === null || iconStyle === void 0 ? void 0 : iconStyle.marginRight, adaptScreen)
    }],
    imageWarningThreshold: {
      imageSizeWarningThreshold: -1,
      // no image size warning
      imageMemoryWarningThreshold: -1 // no memory warning
    },

    source: {
      uris: iconUrls
    },
    cropSize: {
      width: width * 3,
      height: height * 3
    }
  });
});
//# sourceMappingURL=CustomIcon.js.map