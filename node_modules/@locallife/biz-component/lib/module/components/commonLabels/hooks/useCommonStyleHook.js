import { transAdaptScreenSize } from '../utils/transAdaptScreenSize';
export const useCommonStyleHook = (contentStyle, adaptScreen) => {
  if (contentStyle) {
    return {
      borderColor: contentStyle === null || contentStyle === void 0 ? void 0 : contentStyle.borderColor,
      borderTopLeftRadius: transAdaptScreenSize(contentStyle === null || contentStyle === void 0 ? void 0 : contentStyle.borderTopLeftRadius, adaptScreen),
      borderTopRightRadius: transAdaptScreenSize(contentStyle === null || contentStyle === void 0 ? void 0 : contentStyle.borderTopRightRadius, adaptScreen),
      borderBottomLeftRadius: transAdaptScreenSize(contentStyle === null || contentStyle === void 0 ? void 0 : contentStyle.borderBottomLeftRadius, adaptScreen),
      borderBottomRightRadius: transAdaptScreenSize(contentStyle === null || contentStyle === void 0 ? void 0 : contentStyle.borderBottomRightRadius, adaptScreen),
      borderWidth: transAdaptScreenSize(contentStyle === null || contentStyle === void 0 ? void 0 : contentStyle.borderWidth, adaptScreen),
      marginLeft: transAdaptScreenSize(contentStyle === null || contentStyle === void 0 ? void 0 : contentStyle.marginLeft, adaptScreen),
      marginRight: transAdaptScreenSize(contentStyle === null || contentStyle === void 0 ? void 0 : contentStyle.marginRight, adaptScreen),
      paddingLeft: transAdaptScreenSize(contentStyle === null || contentStyle === void 0 ? void 0 : contentStyle.paddingLeft, adaptScreen),
      paddingRight: transAdaptScreenSize(contentStyle === null || contentStyle === void 0 ? void 0 : contentStyle.paddingRight, adaptScreen),
      paddingTop: transAdaptScreenSize(contentStyle === null || contentStyle === void 0 ? void 0 : contentStyle.paddingTop, adaptScreen),
      paddingBottom: transAdaptScreenSize(contentStyle === null || contentStyle === void 0 ? void 0 : contentStyle.paddingBottom, adaptScreen),
      height: transAdaptScreenSize(contentStyle === null || contentStyle === void 0 ? void 0 : contentStyle.height, adaptScreen),
      backgroundColor: contentStyle === null || contentStyle === void 0 ? void 0 : contentStyle.bgColor
    };
  }
  return undefined;
};
//# sourceMappingURL=useCommonStyleHook.js.map