import React, { useState, useRef } from 'react';
import { View, Text, Animated, StyleSheet, TouchableOpacity, Easing } from 'react-native';
import LinearGradient from 'react-native-linear-gradient';
import { KidIcon } from '@kid-ui/krn';
import { screenUnit } from '@lux/ts-lbs-krn-utils';
const {
  screenSize
} = screenUnit;
const styles = StyleSheet.create({
  container: {
    position: 'relative',
    overflow: 'hidden'
  },
  moreContainer: {
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'center',
    alignItems: 'center',
    width: '100%',
    position: 'absolute',
    left: 0,
    bottom: 0,
    height: screenSize(98)
  },
  moreIconContainer: {
    display: 'flex',
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center',
    width: '100%',
    height: screenSize(40),
    backgroundColor: '#fff'
  },
  moreText: {
    marginTop: screenSize(8),
    fontSize: screenSize(14),
    lineHeight: screenSize(17),
    color: '#666',
    textAlign: 'center',
    marginRight: screenSize(3)
  },
  moreIcon: {
    marginTop: screenSize(6)
  },
  linearGradient: {
    width: '100%',
    height: screenSize(60)
  }
});
/**
 * 折叠内容
 */
export const FoldContent = props => {
  const {
    customStyle = {}
  } = props;
  const [isMoreShow, setMoreVisible] = useState(false);
  const heightAnim = useRef(new Animated.Value(0)).current;
  const [maxHeight, setMaxHeight] = useState(0);
  const isClickMore = useRef(false);
  const onLayout = event => {
    const height = Math.floor(event.nativeEvent.layout.height || 0);
    if (height > props.foldHeight && !isClickMore.current) {
      setMoreVisible(true);
      setMaxHeight(height);
      heightAnim === null || heightAnim === void 0 ? void 0 : heightAnim.setValue(props.foldHeight);
    }
  };
  const onClickMore = () => {
    Animated.timing(heightAnim, {
      toValue: maxHeight,
      duration: 300,
      easing: Easing.linear,
      useNativeDriver: false
    }).start();
    setMoreVisible(false);
    isClickMore.current = true;
  };
  return /*#__PURE__*/React.createElement(Animated.View, {
    style: [styles.container, maxHeight && {
      height: heightAnim
    }, (customStyle === null || customStyle === void 0 ? void 0 : customStyle.outerStyle) || {}]
  }, /*#__PURE__*/React.createElement(View, {
    onLayout: onLayout
  }, props.children), isMoreShow && /*#__PURE__*/React.createElement(View, {
    style: styles.moreContainer
  }, /*#__PURE__*/React.createElement(LinearGradient, {
    start: {
      x: 0,
      y: 0
    },
    end: {
      x: 0,
      y: 1
    },
    style: styles.linearGradient,
    colors: ['rgba(255,255,255,0.00)', 'rgba(255,255,255,1)']
  }), /*#__PURE__*/React.createElement(TouchableOpacity, {
    activeOpacity: 1,
    onPress: onClickMore,
    style: [styles.moreIconContainer, (customStyle === null || customStyle === void 0 ? void 0 : customStyle.moreClickStyle) || {}]
  }, /*#__PURE__*/React.createElement(Text, {
    style: styles.moreText
  }, "\u5C55\u5F00\u66F4\u591A"), /*#__PURE__*/React.createElement(KidIcon, {
    kid: 'local_life_locallife_taocanxiangqingzhankai_cdn',
    kidColor: 'color_base_black_6',
    size: screenSize(12),
    style: styles.moreIcon
  }))));
};
//# sourceMappingURL=index.js.map