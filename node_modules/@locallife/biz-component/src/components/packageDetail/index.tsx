import React, { useMemo } from 'react';
import { View, Text } from 'react-native';
import styles from './styles';
import CommonText from '../commonText/index';
import { getDecimal } from '../../utils/decimal';

/**
 * 套餐详情
 */
export const PackageDetail = ({ packageData }) => {
    const { highestPeopleNum, lowestPeopleNum, remark = '' } = packageData;
    /**
     * 建议人数
     */
    const recommendText = useMemo(() => {
        if (highestPeopleNum > 0 && lowestPeopleNum > 0) {
            const recommendNum =
                highestPeopleNum === lowestPeopleNum
                    ? highestPeopleNum
                    : `${lowestPeopleNum} - ${highestPeopleNum}`;
            return `建议${recommendNum}人使用`;
        }
        return '';
    }, [highestPeopleNum, lowestPeopleNum]);

    return (
        <View style={styles.container}>
            <Text style={styles.title}>套餐详情</Text>
            {/* 套餐信息 */}
            {packageData &&
                packageData.groups &&
                packageData.groups.map((group, index) => {
                    const showPackageSelect = Boolean(
                        group.fromNum &&
                            group.selectNum &&
                            group.fromNum > group.selectNum,
                    );
                    return (
                        <View
                            key={group.title}
                            style={styles.packageDetailItemWrapper}
                        >
                            <CommonText
                                customizationUlPoint={
                                    styles.customizationUlPoint
                                }
                            >
                                <Text
                                    style={styles.subtitle}
                                    ellipsizeMode="tail"
                                    numberOfLines={1}
                                >{`${group.title}${
                                    showPackageSelect
                                        ? ` ${group.fromNum} 选 ${group.selectNum}`
                                        : ''
                                }`}</Text>
                            </CommonText>
                            {(group.setMealContents || []).map((item) => {
                                return (
                                    <View
                                        key={item.title}
                                        style={styles.packageDetailItemDistance}
                                    >
                                        <View
                                            style={styles.packageDetailItemRow}
                                        >
                                            <View
                                                style={
                                                    styles.packageDetailTitle
                                                }
                                            >
                                                <Text
                                                    style={
                                                        styles.packageDetailRowTitle
                                                    }
                                                >
                                                    {item.title}
                                                </Text>
                                            </View>
                                            <View
                                                style={
                                                    styles.rowFlexAlignCenter
                                                }
                                            >
                                                <Text
                                                    style={
                                                        styles.packageDetailRowNum
                                                    }
                                                >{`（${item.count}份）`}</Text>
                                                <View
                                                    style={[
                                                        styles.rowFlexAlignCenter,
                                                        styles.packageDetailRowPriceAll,
                                                    ]}
                                                >
                                                    <Text
                                                        style={
                                                            styles.packageDetailRowPrice
                                                        }
                                                        numberOfLines={1}
                                                        ellipsizeMode={'tail'}
                                                    >
                                                        ¥
                                                        {`${getDecimal(
                                                            Math.floor(
                                                                getDecimal(
                                                                    item.price,
                                                                ).mul(
                                                                    item.count,
                                                                ) as unknown as number,
                                                            ),
                                                        ).div(100)}`}
                                                    </Text>
                                                </View>
                                            </View>
                                        </View>
                                    </View>
                                );
                            })}
                            {index === packageData.groups.length - 1 &&
                            !recommendText ? null : (
                                <Text style={styles.subGroupsLine} />
                            )}
                        </View>
                    );
                })}

            {/* 用餐人数 */}
            {!!recommendText && (
                <View style={styles.packageDetailItemWrapper}>
                    <CommonText
                        customizationUlPoint={styles.customizationUlPoint}
                    >
                        <Text style={styles.subtitle}>用餐人数</Text>
                    </CommonText>
                    <View
                        style={[
                            styles.packageDetailItemRow,
                            styles.packageDetailItemDistance,
                            !!remark && styles.subContentLine,
                        ]}
                    >
                        <Text style={styles.packageDetailRowTitle}>
                            {recommendText}
                        </Text>
                    </View>
                </View>
            )}
            {/* 备注 */}
            {!!remark && (
                <View style={styles.packageDetailItemWrapper}>
                    <CommonText
                        customizationUlPoint={styles.customizationUlPoint}
                    >
                        <Text style={styles.subtitle}>备注</Text>
                    </CommonText>
                    <View
                        style={[
                            styles.packageDetailItemRow,
                            styles.packageDetailItemDistance,
                        ]}
                    >
                        <Text style={styles.packageDetailRowTitle}>
                            {remark}
                        </Text>
                    </View>
                </View>
            )}
        </View>
    );
};
