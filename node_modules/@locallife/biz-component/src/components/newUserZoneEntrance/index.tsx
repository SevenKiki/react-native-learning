import React from 'react';
import {
    StyleProp,
    View,
    ViewStyle,
    Text,
    ImageStyle,
    TouchableWithoutFeedback,
} from 'react-native';
import { isUserLogin, needLogin, showToast } from '@locallife/utils';
import KwaiImage from '@kds/image';

import styles from './styles';
import { CheckIsNewUserResp, isEligibility } from './api';
import { ShowWithData } from '@locallife/base-component';

interface ContentData {
    subIcons: string[]; // 折扣价后跟随折扣名图片
    price: string; // 折扣价
}

interface FetchEntraceData {
    id?: string;
    attributeType?: number;
    params?: ContentData;
    icon?: string;
}

interface EntranceData {
    data: FetchEntraceData;
    refreshData?: () => void; // 刷新数据处理
    handleClick: (isAllowJump) => void; // 处理点击事件
    contentContainerStyle?: StyleProp<ViewStyle>; // 根容器Style
    bgStyle?: StyleProp<ImageStyle>; // 背景图Style
    disCountAreaStyle?: StyleProp<ViewStyle>; // 信息区域Style
    disCountContentTypeStyle?: StyleProp<ViewStyle>; // 折扣价格$Style
    disCountContentStyle?: StyleProp<ViewStyle>; // 折扣价格Style
    disCountTitleImgStyle?: StyleProp<ImageStyle>; // 折扣名称Img Style
}

/**
 * 新人专区入口
 *      货架列表页Banner位置
 *      POI页
 */
export const NewUserZoneEntrance = React.memo((entranceData: EntranceData) => {
    function doCheckEligibility() {
        // 核验资格
        isEligibility({
            source: 1, // banner检查是否新用户取source=1的固定值
        })
            .then((result: CheckIsNewUserResp) => {
                if (result?.data) {
                    if (result.data.newUser) {
                        // 有资格
                        entranceData.handleClick(true);
                    } else {
                        // 无资格
                        entranceData.handleClick(false);
                        // 提示
                        showToast('您当前不满足新用户身份哦，看看其他商品吧。');
                        // 刷新
                        entranceData.refreshData?.();
                    }
                } else {
                    // 数据返回异常
                    showToast('数据异常，请重试。');
                }
            })
            .catch(() => {
                // 异常提示
                showToast('网络异常，请重试。');
            });
    }

    function entranceHandleClick() {
        if (isUserLogin()) {
            // 已经登录
            doCheckEligibility();
        } else {
            // 未登录，不跳转
            entranceData.handleClick(false);
            // 唤起登录页面
            needLogin(
                () => {
                    // 成功登录
                    doCheckEligibility();
                },
                () => {
                    // 登录失败，不做处理
                },
            );
        }
    }

    return entranceData.data?.icon ? (
        // eslint-disable-next-line react/jsx-no-bind
        <TouchableWithoutFeedback onPress={entranceHandleClick}>
            <View
                style={[
                    styles.rootContainer,
                    entranceData.contentContainerStyle,
                ]}
            >
                {/* 背景图 */}
                <KwaiImage
                    style={[styles.bgStyle, entranceData.bgStyle]}
                    source={{ uri: entranceData.data.icon }}
                    resizeMode={'cover'}
                >
                    <View
                        style={[
                            styles.disCountArea,
                            entranceData.disCountAreaStyle,
                        ]}
                    >
                        {/* 货币类型 */}
                        <Text
                            style={[
                                styles.disCountContentType,
                                entranceData.disCountContentTypeStyle,
                            ]}
                        >
                            {'¥'}
                        </Text>
                        {/* 折扣价格 */}
                        <ShowWithData data={entranceData.data?.params?.price}>
                            <Text
                                style={[
                                    styles.disCountContent,
                                    entranceData.disCountContentStyle,
                                ]}
                            >
                                {entranceData.data.params.price}
                            </Text>
                        </ShowWithData>
                        {/* 折扣类型img */}
                        <ShowWithData
                            data={
                                entranceData.data?.params?.subIcons?.length > 0
                            }
                        >
                            <KwaiImage
                                style={[
                                    styles.disCountTitleImg,
                                    entranceData.disCountTitleImgStyle,
                                ]}
                                source={{
                                    uri: entranceData.data.params.subIcons[0],
                                }}
                                resizeMode={'cover'}
                            />
                        </ShowWithData>
                    </View>
                </KwaiImage>
            </View>
        </TouchableWithoutFeedback>
    ) : (
        <View />
    );
});
