// 一个文案
import React from 'react';
import { StyleSheet, Text, View } from 'react-native';
import { TagTextInfo } from './Models';
import { transAdaptScreenSize } from './utils/transAdaptScreenSize';
import { useCommonStyleHook } from './hooks/useCommonStyleHook';
import { useAdaptThemeValueHook } from './hooks/useAdaptThemeValueHook';

const styles = StyleSheet.create({
    labelsContainer: {
        flexDirection: 'row',
        alignItems: 'center',
    },
    text: {
        fontSize: 11,
        fontWeight: '400',
        fontFamily: 'PingFang SC',
        color: '#666666',
    },
});

interface CustomTextProps {
    textModel: TagTextInfo;
    adaptScreen?: boolean;
    autoRatio?: boolean; // 是否按照某个比例缩放
    ratio?: number; // 缩放的比例
    adaptDark?: boolean; // 是否适配暗黑
}

// 一个文案
export const CustomText = React.memo((props: CustomTextProps) => {
    const {
        textModel,
        adaptScreen,
        autoRatio,
        ratio,
        adaptDark = true,
    } = props;

    const { textStyle } = textModel;

    const style = useCommonStyleHook(textStyle, adaptScreen);

    return (
        <View style={[styles.labelsContainer, style]}>
            <Text
                style={[
                    styles.text,
                    {
                        color: useAdaptThemeValueHook(
                            {
                                light:
                                    textModel.textStyle.textColor ??
                                    styles.text.color,
                                dark:
                                    textModel.textStyle.textColorDark ??
                                    styles.text.color,
                            },
                            adaptDark,
                        ),
                        width: transAdaptScreenSize(
                            textStyle?.width,
                            adaptScreen,
                        ),
                        height: transAdaptScreenSize(
                            textStyle?.height,
                            adaptScreen,
                        ),
                        top: transAdaptScreenSize(textStyle?.top, adaptScreen),
                        bottom: transAdaptScreenSize(
                            textStyle?.bottom,
                            adaptScreen,
                        ),
                    },
                    {
                        fontSize: transAdaptScreenSize(
                            textStyle?.fontSize ?? styles.text.fontSize,
                            adaptScreen,
                            autoRatio,
                            ratio,
                        ),
                        fontFamily:
                            textModel.textStyle.fontFamily ??
                            styles.text.fontFamily,
                        fontWeight:
                            textModel.textStyle.fontWeight ??
                            styles.text.fontWeight,
                    },
                ]}
                // ellipsizeMode="tail"
                numberOfLines={1}
            >
                {textModel.text ?? ''}
            </Text>
        </View>
    );
});
