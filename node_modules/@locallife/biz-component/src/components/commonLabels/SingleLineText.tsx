// 一排文案
import React, { useCallback } from 'react';
import { StyleSheet, TouchableWithoutFeedback, View } from 'react-native';
import { BizTags, TagContent } from './Models';
import { CustomText } from './CustomText';
import { useCommonStyleHook } from './hooks/useCommonStyleHook';

const styles = StyleSheet.create({
    container: {
        overflow: 'hidden',
        flexDirection: 'row',
        alignItems: 'center',
    },
});

interface SingleIconProps {
    data: TagContent | undefined;
    onPress?: (bizTags?: BizTags) => void;
    bizTags?: BizTags;
    adaptScreen?: boolean;
    autoRatio?: boolean; // 是否按照某个比例缩放
    ratio?: number; // 缩放的比例
    adaptDark?: boolean; // 是否适配暗黑
}

// 一排文案
export const SingleLineText = (props: SingleIconProps) => {
    const { data, adaptScreen, adaptDark = true } = props;

    const { textInfos, contentStyle } = data || {};
    const onPressCard = useCallback(() => {
        if (props.onPress) {
            props.onPress(props.bizTags);
        }
    }, [props]);

    const customStyle = useCommonStyleHook(contentStyle, adaptScreen);
    return textInfos && textInfos?.length > 0 ? (
        <TouchableWithoutFeedback onPress={onPressCard}>
            <View style={[styles.container, customStyle]}>
                {data?.textInfos?.map((item, index) => {
                    return (
                        <CustomText
                            textModel={item}
                            key={index}
                            adaptScreen={props.adaptScreen}
                            autoRatio={props.autoRatio}
                            adaptDark={adaptDark}
                            ratio={props.ratio}
                        />
                    );
                })}
            </View>
        </TouchableWithoutFeedback>
    ) : (
        <View />
    );
};
