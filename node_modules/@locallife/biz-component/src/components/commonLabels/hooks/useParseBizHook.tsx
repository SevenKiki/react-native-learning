import { LocalLifeJinJingLogger, ReportType } from '@locallife/log';
import { BizTags, TagContent } from '../Models';
import { Dispatch, SetStateAction, useMemo, useState } from 'react';

export const useParseBizHook = (
    bizTags: Array<BizTags>,
): [BizTags[], Dispatch<SetStateAction<BizTags[]>>] => {
    const [showBizTags, setShowBizTags] = useState<BizTags[]>([]);

    // 遍历解析数据源
    useMemo(() => {
        const newBiz = bizTags.map((item) => {
            let contentModel = {};
            try {
                contentModel = JSON.parse(item.content) as TagContent;
            } catch (error) {
                LocalLifeJinJingLogger.reportLog2JinJing(
                    'LOCAL_LIFE_LOG_STAT_EVENT',
                    true,
                    'commonLabels',
                    '标签解析出错',
                    { error: JSON.stringify(error) },
                    undefined,
                    ReportType.CUSTOM_STAT_EVENT,
                );
            }
            return {
                ...item,
                contentModel: contentModel,
            };
        });
        setShowBizTags(newBiz);
    }, [bizTags]);

    return [showBizTags, setShowBizTags];
};
