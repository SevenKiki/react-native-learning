import { useMemo, useRef } from 'react';
import { Animated } from 'react-native';

/**
 * 监听App滚动
 *
 * @returns [transY, useOnScroll] [滑动的距离(Animated.Value类型), 滑动的回调]
 */
export default function useAppOnScroll() {
  const transY = useRef(new Animated.Value(0)).current;

  const useOnScroll = callBack => {
    return useMemo(() => {
      return Animated.event([{
        nativeEvent: {
          contentOffset: {
            y: transY
          }
        }
      }], {
        listener: event => {
          if (callBack) {
            callBack(event);
          }
        },
        useNativeDriver: false
      });
    }, [callBack]);
  };

  return [transY, useOnScroll];
}
//# sourceMappingURL=index.js.map