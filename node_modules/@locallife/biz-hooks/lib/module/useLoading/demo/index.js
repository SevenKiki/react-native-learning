import React, { useCallback, useEffect } from 'react';
import useLoading from '../index';
import { Text, View, StyleSheet } from 'react-native';

const LoadingDemo = () => {
  const styles = StyleSheet.create({
    container: {
      width: '100%',
      padding: 20
    },
    itemWrapper: {
      display: 'flex',
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-between',
      width: '100%',
      padding: 30,
      marginBottom: 20,
      backgroundColor: '#eee'
    },
    label: {
      color: '#999',
      position: 'absolute',
      left: 3,
      top: 3
    },
    button: {
      marginLeft: 30
    }
  });
  const {
    status: status1,
    withLoading: withLoading1,
    isLoading: isLoading1
  } = useLoading({
    onlyOnce: true
  });
  const {
    status: status2,
    withLoading: withLoading2,
    isLoading: isLoading2
  } = useLoading();
  const {
    status: status3,
    withLoading: withLoading3,
    isLoading: isLoading3
  } = useLoading({
    onlyOnce: true
  });

  const mainRequest = () => new Promise(res => {
    setTimeout(() => {
      res('');
    }, 3000);
  });

  const handleRefresh2 = useCallback(() => {
    withLoading2(mainRequest);
  }, [withLoading2]);
  const handleRefresh3 = useCallback(() => {
    withLoading3(mainRequest);
  }, [withLoading3]);
  const getStatus = useCallback(status => {
    if (status === 0) {
      return 'initial';
    }

    if (status === 1) {
      return 'loading';
    }

    if (status === 2) {
      return 'success';
    }

    if (status === 3) {
      return 'fail';
    }
  }, []);
  useEffect(() => {
    withLoading1(mainRequest); // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);
  return /*#__PURE__*/React.createElement(View, {
    style: styles.container
  }, /*#__PURE__*/React.createElement(View, {
    style: styles.itemWrapper
  }, /*#__PURE__*/React.createElement(Text, {
    style: styles.label
  }, getStatus(status1)), /*#__PURE__*/React.createElement(Text, null, "\u4E09\u79D2\u63A5\u53E3\uFF08\u81EA\u52A8\u8BF7\u6C42\uFF09\uFF1A", isLoading1 ? 'loading...' : 'success!')), /*#__PURE__*/React.createElement(View, {
    style: styles.itemWrapper
  }, /*#__PURE__*/React.createElement(Text, {
    style: styles.label
  }, getStatus(status2)), /*#__PURE__*/React.createElement(Text, null, "\u4E09\u79D2\u63A5\u53E3\uFF1A", isLoading2 ? 'loading...' : 'success!'), /*#__PURE__*/React.createElement(Text, {
    style: styles.button,
    onPress: handleRefresh2
  }, "\u5237\u65B0")), /*#__PURE__*/React.createElement(View, {
    style: styles.itemWrapper
  }, /*#__PURE__*/React.createElement(Text, {
    style: styles.label
  }, getStatus(status3)), /*#__PURE__*/React.createElement(Text, null, "\u4E09\u79D2\u63A5\u53E3\uFF08\u4EC5load\u4E00\u6B21\uFF09\uFF1A", isLoading3 ? 'loading...' : 'success!'), /*#__PURE__*/React.createElement(Text, {
    style: styles.button,
    onPress: handleRefresh3
  }, "\u5237\u65B0")));
};

export default LoadingDemo;
//# sourceMappingURL=index.js.map