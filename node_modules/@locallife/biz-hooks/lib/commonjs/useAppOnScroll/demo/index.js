"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _2 = _interopRequireDefault(require(".."));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/* eslint-disable react/jsx-no-bind */
// 本Demo展示了useAppOnScroll的使用，通过该hook监听列表的滑动，实时获取滑动的距离
const styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1
  },
  text: {
    width: '100%',
    height: 100,
    textAlign: 'center',
    lineHeight: 100,
    color: '#ffffff',
    fontSize: 22
  },
  blue: {
    backgroundColor: 'blue'
  },
  orange: {
    backgroundColor: 'orange'
  },
  purple: {
    backgroundColor: 'purple'
  },
  green: {
    backgroundColor: 'green'
  },
  bottom: {
    backgroundColor: 'black',
    color: '#ffffff',
    textAlign: 'center',
    height: 50,
    lineHeight: 50
  }
});

var _default = () => {
  const [transY, onScroll] = (0, _2.default)();
  const [transYValue, setTransYValue] = (0, _react.useState)(0);
  (0, _react.useEffect)(() => {
    transY.addListener(_ref => {
      let {
        value
      } = _ref;
      setTransYValue(value);
    });
  }, [transY]);
  const data = Array(100).fill(0).map((_, index) => `第${index + 1}个文本`);
  const backgroundArray = [styles.blue, styles.orange, styles.purple, styles.green];

  const renderItem = _ref2 => {
    let {
      index
    } = _ref2;
    return /*#__PURE__*/_react.default.createElement(_reactNative.Text, {
      style: [styles.text, backgroundArray[index % backgroundArray.length]]
    }, data[index]);
  };

  return /*#__PURE__*/_react.default.createElement(_reactNative.SafeAreaView, {
    style: styles.container
  }, /*#__PURE__*/_react.default.createElement(_reactNative.Animated.FlatList, {
    data: data,
    renderItem: renderItem,
    keyExtractor: index => `${index}`,
    onScroll: onScroll()
  }), /*#__PURE__*/_react.default.createElement(_reactNative.Text, {
    style: styles.bottom
  }, "\u6ED1\u52A8\u8DDD\u79BB", transYValue));
};

exports.default = _default;
//# sourceMappingURL=index.js.map