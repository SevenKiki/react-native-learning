{"version":3,"names":["useOnTextLayout","textStr","initTextInfo","hasNextLine","firstLineBrand","firstLineText","text","nextLineText","textInfo","setTextInfo","hasLayout","onTextLayout","e","newTitleInfo","current","nativeEvent","lines","length","remainText","i"],"sources":["index.tsx"],"sourcesContent":["import { useCallback, useMemo, useState, useRef } from 'react';\n\nexport interface TextLayoutInfo {\n    text?: string;\n    hasNextLine: boolean;\n    firstLineBrand: boolean;\n    firstLineText?: string;\n    nextLineText?: string;\n}\n\n/**\n * 监听文本布局\n *\n * @param textStr 文本字符串\n * @returns [textInfo, onTextLayout] [文本信息, 用来监听文本布局的变化]\n */\nexport default function useOnTextLayout(\n    textStr: string,\n): [TextLayoutInfo, (e: any) => void] {\n    const initTextInfo: TextLayoutInfo = useMemo(() => {\n        return {\n            hasNextLine: false,\n            firstLineBrand: false,\n            firstLineText: '',\n            text: textStr,\n            nextLineText: '',\n        };\n    }, [textStr]);\n    const [textInfo, setTextInfo] = useState(initTextInfo);\n    const hasLayout = useRef(false);\n    const onTextLayout = useCallback(\n        (e) => {\n            let newTitleInfo: TextLayoutInfo;\n            if (hasLayout.current === false) {\n                if (e.nativeEvent.lines.length > 1) {\n                    let { text } = e.nativeEvent.lines[0];\n                    let remainText = '';\n                    for (let i = 1; i < e.nativeEvent.lines.length; i++) {\n                        remainText += e.nativeEvent.lines[i].text;\n                    }\n                    newTitleInfo = {\n                        hasNextLine: true,\n                        firstLineBrand: false,\n                        text: initTextInfo.text,\n                        nextLineText: remainText,\n                        firstLineText: text,\n                    };\n                } else {\n                    newTitleInfo = {\n                        ...initTextInfo,\n                        firstLineBrand: true,\n                    };\n                }\n                hasLayout.current = true;\n                setTextInfo(newTitleInfo);\n            }\n        },\n        [initTextInfo],\n    );\n    return [textInfo, onTextLayout];\n}\n"],"mappings":";;;;;;;AAAA;;AAUA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,eAAT,CACXC,OADW,EAEuB;EAClC,MAAMC,YAA4B,GAAG,oBAAQ,MAAM;IAC/C,OAAO;MACHC,WAAW,EAAE,KADV;MAEHC,cAAc,EAAE,KAFb;MAGHC,aAAa,EAAE,EAHZ;MAIHC,IAAI,EAAEL,OAJH;MAKHM,YAAY,EAAE;IALX,CAAP;EAOH,CARoC,EAQlC,CAACN,OAAD,CARkC,CAArC;EASA,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0B,qBAASP,YAAT,CAAhC;EACA,MAAMQ,SAAS,GAAG,mBAAO,KAAP,CAAlB;EACA,MAAMC,YAAY,GAAG,wBAChBC,CAAD,IAAO;IACH,IAAIC,YAAJ;;IACA,IAAIH,SAAS,CAACI,OAAV,KAAsB,KAA1B,EAAiC;MAC7B,IAAIF,CAAC,CAACG,WAAF,CAAcC,KAAd,CAAoBC,MAApB,GAA6B,CAAjC,EAAoC;QAChC,IAAI;UAAEX;QAAF,IAAWM,CAAC,CAACG,WAAF,CAAcC,KAAd,CAAoB,CAApB,CAAf;QACA,IAAIE,UAAU,GAAG,EAAjB;;QACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,CAAC,CAACG,WAAF,CAAcC,KAAd,CAAoBC,MAAxC,EAAgDE,CAAC,EAAjD,EAAqD;UACjDD,UAAU,IAAIN,CAAC,CAACG,WAAF,CAAcC,KAAd,CAAoBG,CAApB,EAAuBb,IAArC;QACH;;QACDO,YAAY,GAAG;UACXV,WAAW,EAAE,IADF;UAEXC,cAAc,EAAE,KAFL;UAGXE,IAAI,EAAEJ,YAAY,CAACI,IAHR;UAIXC,YAAY,EAAEW,UAJH;UAKXb,aAAa,EAAEC;QALJ,CAAf;MAOH,CAbD,MAaO;QACHO,YAAY,GAAG,EACX,GAAGX,YADQ;UAEXE,cAAc,EAAE;QAFL,CAAf;MAIH;;MACDM,SAAS,CAACI,OAAV,GAAoB,IAApB;MACAL,WAAW,CAACI,YAAD,CAAX;IACH;EACJ,CA1BgB,EA2BjB,CAACX,YAAD,CA3BiB,CAArB;EA6BA,OAAO,CAACM,QAAD,EAAWG,YAAX,CAAP;AACH"}