import { NativeModules, Platform } from 'react-native';
import AppVersion from './AppVersion';
import LocalLifeCustomLogger from './LocalLifeCustomLogger';
import LocalLifeInitLogger from './LocalLifeInitLogger';
import { ReportType } from './ReportType';
import { VersionUtil } from './VersionUtil';

function inValidVersion(): boolean {
    if (Platform.OS === 'android') {
        return VersionUtil.currentGreaterThanEqualVersion(
            AppVersion.VERSION_11_2_10,
        );
    } else if (Platform.OS === 'ios') {
        return VersionUtil.currentGreaterThanEqualVersion(
            AppVersion.VERSION_11_3_10,
        );
    }
    return false;
}

export default class LocalLifeJinJingLogger {
    static async reportLog2JinJing(
        customEventKey: string,
        isReportErrorLog: boolean,
        tag: string,
        message?: string,
        params?: object,
        error?: object,
        reportType?: ReportType,
    ) {
        try {
            let rootTag = LocalLifeInitLogger.getRootTag();
            let appModel = LocalLifeInitLogger.getAppModel();
            if (inValidVersion()) {
                let { bundleId } = appModel || {};
                if (!bundleId) {
                    bundleId = NativeModules.KRNBasic.getBundleInfo(rootTag);
                }
                let bundleIdValue = bundleId || {};
                let paramsValue = params || {};
                let reportTypeValue = reportType || ReportType.CUSTOM_EVENT;
                if (error) {
                    if (error instanceof Error) {
                        paramsValue = {
                            ...params,
                            errorInfo: error.message,
                            errorStack: error.stack,
                        };
                    } else {
                        paramsValue = {
                            ...params,
                            errorInfo: JSON.stringify(error),
                        };
                    }
                }
                NativeModules.Kds.invoke(
                    'poi',
                    'reportLog2JinJing',
                    JSON.stringify({
                        customEventKey,
                        isReportErrorLog,
                        bundleId: bundleIdValue,
                        tag,
                        message,
                        reportType: reportTypeValue,
                        params: paramsValue,
                        rootTag,
                    }),
                );
                console.log(
                    '[customEventKey:' +
                        customEventKey +
                        '][logBiz:BundleId_' +
                        bundleIdValue +
                        '][tag:' +
                        tag +
                        '][msg:' +
                        message +
                        ']' +
                        '[params:' +
                        JSON.stringify(paramsValue || {}) +
                        ']',
                );
            } else {
                LocalLifeCustomLogger.logCustomEvent(customEventKey, params);
            }
        } catch (e) {
            console.error(`LocalLifeJingJinLogger error:${e || ''}`);
        }
    }
}
