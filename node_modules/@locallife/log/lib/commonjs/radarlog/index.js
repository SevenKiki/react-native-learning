"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.localLifeRadarLogger = void 0;

var _krn = _interopRequireDefault(require("@ks-radar/radar/krn"));

var _ = require("..");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class LocalLifeRadarLogger {
  constructor() {
    _defineProperty(this, "radarKrnLog", void 0);

    _defineProperty(this, "rootPropsRadar", void 0);

    const appModel = _.LocalLifeInitLogger.getAppModel();

    const weblog = _.LocalLifeInitLogger.getWeblog();

    this.radarKrnLog = new _krn.default({
      weblog: weblog,
      sessionId: `${appModel.sessionId}`,
      bundleId: appModel.bundleId,
      bundleVersionCode: `${appModel.BundleVersionCode}`,
      bundleVersion: `${appModel.bundleVersion}`,
      componentName: appModel.componentName
    });
    this.rootPropsRadar = appModel;
  }

  radarEvent(name, params) {
    try {
      this.radarKrnLog.event({
        name,
        // 必填
        params,
        // eslint-disable-next-line camelcase
        extra_info: { ...params.extraInfo,
          rootProps: this.rootPropsRadar
        }
      });
    } catch (error) {
      console.error('LocalLifeRadarLogger.radarEvent Error: ', error);
    }
  }

  logRadar(name, extraInfo) {
    this.radarEvent(name, {
      extraInfo: extraInfo
    });
  }

}

const localLifeRadarLogger = new LocalLifeRadarLogger();
exports.localLifeRadarLogger = localLifeRadarLogger;
//# sourceMappingURL=index.js.map