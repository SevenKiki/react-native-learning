{"version":3,"names":["NativeModules","VersionUtil","initVersion","currentVersion","KRNBasic","getDeviceInfoSync","data","appVersion","greaterThanVersion","version","compareVersion","greaterThanEqualVersion","version1","version2","currentLessThanVersion","lessThanEqualVersion","currentGreaterThanEqualVersion","pA","pB","findDigit","str","start","i","length","nextA","nextB","numA","substr","numB"],"sources":["VersionUtil.ts"],"sourcesContent":["import { NativeModules } from 'react-native';\n\nexport class VersionUtil {\n    private static currentVersion;\n    private static initVersion() {\n        if (!this.currentVersion) {\n            this.currentVersion =\n                NativeModules.KRNBasic.getDeviceInfoSync().data.appVersion;\n        }\n    }\n\n    static greaterThanVersion(version) {\n        this.initVersion();\n        return this.compareVersion(this.currentVersion, version) === 1;\n    }\n\n    /**\n     * @deprecated 请使用currentGreaterThanEqualVersion\n     */\n    static greaterThanEqualVersion(version1, version2) {\n        return this.compareVersion(version1, version2) >= 0;\n    }\n\n    static currentLessThanVersion(version) {\n        this.initVersion();\n        return this.compareVersion(this.currentVersion, version) === -1;\n    }\n\n    static lessThanEqualVersion(version) {\n        this.initVersion();\n        return this.compareVersion(this.currentVersion, version) <= 0;\n    }\n\n    static currentGreaterThanEqualVersion(version) {\n        this.initVersion();\n        return this.greaterThanEqualVersion(this.currentVersion, version);\n    }\n\n    static compareVersion(version1, version2) {\n        let pA = 0;\n        let pB = 0;\n        /** 寻找当前区间的版本号 */\n        let findDigit = function (str, start) {\n            let i = start;\n            while (str[i] !== '.' && i < str.length) {\n                i++;\n            }\n            return i;\n        };\n        while (pA < version1.length && pB < version2.length) {\n            let nextA = findDigit(version1, pA);\n            let nextB = findDigit(version2, pB);\n            let numA = +version1.substr(pA, nextA - pA);\n            let numB = +version2.substr(pB, nextB - pB);\n            if (numA !== numB) {\n                return numA > numB ? 1 : -1;\n            }\n            pA = nextA + 1;\n            pB = nextB + 1;\n        }\n        // 若arrayA仍有小版本号\n        while (pA < version1.length) {\n            let nextA = findDigit(version1, pA);\n            let numA = +version1.substr(pA, nextA - pA);\n            if (numA > 0) {\n                return 1;\n            }\n            pA = nextA + 1;\n        }\n        // 若arrayB仍有小版本号\n        while (pB < version2.length) {\n            let nextB = findDigit(version2, pB);\n            let numB = +version2.substr(pB, nextB - pB);\n            if (numB > 0) {\n                return -1;\n            }\n            pB = nextB + 1;\n        }\n        // 版本号完全相同\n        return 0;\n    }\n}\n"],"mappings":"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"}