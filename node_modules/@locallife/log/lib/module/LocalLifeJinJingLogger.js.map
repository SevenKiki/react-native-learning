{"version":3,"names":["NativeModules","Platform","AppVersion","LocalLifeCustomLogger","LocalLifeInitLogger","ReportType","VersionUtil","inValidVersion","OS","currentGreaterThanEqualVersion","VERSION_11_2_10","VERSION_11_3_10","LocalLifeJinJingLogger","reportLog2JinJing","customEventKey","isReportErrorLog","tag","message","params","error","reportType","rootTag","getRootTag","appModel","getAppModel","bundleId","KRNBasic","getBundleInfo","bundleIdValue","paramsValue","reportTypeValue","CUSTOM_EVENT","Error","errorInfo","errorStack","stack","JSON","stringify","Kds","invoke","console","log","logCustomEvent","e"],"sources":["LocalLifeJinJingLogger.ts"],"sourcesContent":["import { NativeModules, Platform } from 'react-native';\nimport AppVersion from './AppVersion';\nimport LocalLifeCustomLogger from './LocalLifeCustomLogger';\nimport LocalLifeInitLogger from './LocalLifeInitLogger';\nimport { ReportType } from './ReportType';\nimport { VersionUtil } from './VersionUtil';\n\nfunction inValidVersion(): boolean {\n    if (Platform.OS === 'android') {\n        return VersionUtil.currentGreaterThanEqualVersion(\n            AppVersion.VERSION_11_2_10,\n        );\n    } else if (Platform.OS === 'ios') {\n        return VersionUtil.currentGreaterThanEqualVersion(\n            AppVersion.VERSION_11_3_10,\n        );\n    }\n    return false;\n}\n\nexport default class LocalLifeJinJingLogger {\n    static async reportLog2JinJing(\n        customEventKey: string,\n        isReportErrorLog: boolean,\n        tag: string,\n        message?: string,\n        params?: object,\n        error?: object,\n        reportType?: ReportType,\n    ) {\n        try {\n            let rootTag = LocalLifeInitLogger.getRootTag();\n            let appModel = LocalLifeInitLogger.getAppModel();\n            if (inValidVersion()) {\n                let { bundleId } = appModel || {};\n                if (!bundleId) {\n                    bundleId = NativeModules.KRNBasic.getBundleInfo(rootTag);\n                }\n                let bundleIdValue = bundleId || {};\n                let paramsValue = params || {};\n                let reportTypeValue = reportType || ReportType.CUSTOM_EVENT;\n                if (error) {\n                    if (error instanceof Error) {\n                        paramsValue = {\n                            ...params,\n                            errorInfo: error.message,\n                            errorStack: error.stack,\n                        };\n                    } else {\n                        paramsValue = {\n                            ...params,\n                            errorInfo: JSON.stringify(error),\n                        };\n                    }\n                }\n                NativeModules.Kds.invoke(\n                    'poi',\n                    'reportLog2JinJing',\n                    JSON.stringify({\n                        customEventKey,\n                        isReportErrorLog,\n                        bundleId: bundleIdValue,\n                        tag,\n                        message,\n                        reportType: reportTypeValue,\n                        params: paramsValue,\n                        rootTag,\n                    }),\n                );\n                console.log(\n                    '[customEventKey:' +\n                        customEventKey +\n                        '][logBiz:BundleId_' +\n                        bundleIdValue +\n                        '][tag:' +\n                        tag +\n                        '][msg:' +\n                        message +\n                        ']' +\n                        '[params:' +\n                        JSON.stringify(paramsValue || {}) +\n                        ']',\n                );\n            } else {\n                LocalLifeCustomLogger.logCustomEvent(customEventKey, params);\n            }\n        } catch (e) {\n            console.error(`LocalLifeJingJinLogger error:${e || ''}`);\n        }\n    }\n}\n"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,cAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,SAASC,cAAT,GAAmC;EAC/B,IAAIN,QAAQ,CAACO,EAAT,KAAgB,SAApB,EAA+B;IAC3B,OAAOF,WAAW,CAACG,8BAAZ,CACHP,UAAU,CAACQ,eADR,CAAP;EAGH,CAJD,MAIO,IAAIT,QAAQ,CAACO,EAAT,KAAgB,KAApB,EAA2B;IAC9B,OAAOF,WAAW,CAACG,8BAAZ,CACHP,UAAU,CAACS,eADR,CAAP;EAGH;;EACD,OAAO,KAAP;AACH;;AAED,eAAe,MAAMC,sBAAN,CAA6B;EACV,aAAjBC,iBAAiB,CAC1BC,cAD0B,EAE1BC,gBAF0B,EAG1BC,GAH0B,EAI1BC,OAJ0B,EAK1BC,MAL0B,EAM1BC,KAN0B,EAO1BC,UAP0B,EAQ5B;IACE,IAAI;MACA,IAAIC,OAAO,GAAGjB,mBAAmB,CAACkB,UAApB,EAAd;MACA,IAAIC,QAAQ,GAAGnB,mBAAmB,CAACoB,WAApB,EAAf;;MACA,IAAIjB,cAAc,EAAlB,EAAsB;QAClB,IAAI;UAAEkB;QAAF,IAAeF,QAAQ,IAAI,EAA/B;;QACA,IAAI,CAACE,QAAL,EAAe;UACXA,QAAQ,GAAGzB,aAAa,CAAC0B,QAAd,CAAuBC,aAAvB,CAAqCN,OAArC,CAAX;QACH;;QACD,IAAIO,aAAa,GAAGH,QAAQ,IAAI,EAAhC;QACA,IAAII,WAAW,GAAGX,MAAM,IAAI,EAA5B;QACA,IAAIY,eAAe,GAAGV,UAAU,IAAIf,UAAU,CAAC0B,YAA/C;;QACA,IAAIZ,KAAJ,EAAW;UACP,IAAIA,KAAK,YAAYa,KAArB,EAA4B;YACxBH,WAAW,GAAG,EACV,GAAGX,MADO;cAEVe,SAAS,EAAEd,KAAK,CAACF,OAFP;cAGViB,UAAU,EAAEf,KAAK,CAACgB;YAHR,CAAd;UAKH,CAND,MAMO;YACHN,WAAW,GAAG,EACV,GAAGX,MADO;cAEVe,SAAS,EAAEG,IAAI,CAACC,SAAL,CAAelB,KAAf;YAFD,CAAd;UAIH;QACJ;;QACDnB,aAAa,CAACsC,GAAd,CAAkBC,MAAlB,CACI,KADJ,EAEI,mBAFJ,EAGIH,IAAI,CAACC,SAAL,CAAe;UACXvB,cADW;UAEXC,gBAFW;UAGXU,QAAQ,EAAEG,aAHC;UAIXZ,GAJW;UAKXC,OALW;UAMXG,UAAU,EAAEU,eAND;UAOXZ,MAAM,EAAEW,WAPG;UAQXR;QARW,CAAf,CAHJ;QAcAmB,OAAO,CAACC,GAAR,CACI,qBACI3B,cADJ,GAEI,oBAFJ,GAGIc,aAHJ,GAII,QAJJ,GAKIZ,GALJ,GAMI,QANJ,GAOIC,OAPJ,GAQI,GARJ,GASI,UATJ,GAUImB,IAAI,CAACC,SAAL,CAAeR,WAAW,IAAI,EAA9B,CAVJ,GAWI,GAZR;MAcH,CAlDD,MAkDO;QACH1B,qBAAqB,CAACuC,cAAtB,CAAqC5B,cAArC,EAAqDI,MAArD;MACH;IACJ,CAxDD,CAwDE,OAAOyB,CAAP,EAAU;MACRH,OAAO,CAACrB,KAAR,CAAe,gCAA+BwB,CAAC,IAAI,EAAG,EAAtD;IACH;EACJ;;AArEuC"}