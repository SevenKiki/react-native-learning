function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import RadarKrn from '@ks-radar/radar/krn';
import { LocalLifeInitLogger } from '..';

class LocalLifeRadarLogger {
  constructor() {
    _defineProperty(this, "radarKrnLog", void 0);

    _defineProperty(this, "rootPropsRadar", void 0);

    const appModel = LocalLifeInitLogger.getAppModel();
    const weblog = LocalLifeInitLogger.getWeblog();
    this.radarKrnLog = new RadarKrn({
      weblog: weblog,
      sessionId: `${appModel.sessionId}`,
      bundleId: appModel.bundleId,
      bundleVersionCode: `${appModel.BundleVersionCode}`,
      bundleVersion: `${appModel.bundleVersion}`,
      componentName: appModel.componentName
    });
    this.rootPropsRadar = appModel;
  }

  radarEvent(name, params) {
    try {
      this.radarKrnLog.event({
        name,
        // 必填
        params,
        // eslint-disable-next-line camelcase
        extra_info: { ...params.extraInfo,
          rootProps: this.rootPropsRadar
        }
      });
    } catch (error) {
      console.error('LocalLifeRadarLogger.radarEvent Error: ', error);
    }
  }

  logRadar(name, extraInfo) {
    this.radarEvent(name, {
      extraInfo: extraInfo
    });
  }

}

export const localLifeRadarLogger = new LocalLifeRadarLogger();
//# sourceMappingURL=index.js.map