{"version":3,"names":["clone","obj","JSON","parse","stringify","camel2Underline","str","replaceAll","i","toLowerCase","generateUuid","replace","c","r","Math","random","v","toString","preDealOptions","options","Object","entries","reduce","key","val","assign","name","presetStartStatus","presetEndStatus","defaultTimeout","LocalLifeTaskLogger","setTaskLogFn","logFn","taskLogFn","setErrorLogFn","errorFn","errorLogFn","task","isAsync","maxLifeTimeBetweenSteps","Error","extra_info","status","other","taskChainId","statTime","Date","now","lastTime","taskChain","ended","timer","setTimer","timeout","time","setTimeout","end","clearTimer","clearTimeout","nextTrigger","nextOptions","nextName","nextExtraInfo","nextStatus","nextOther","includes","lastStepDuration","duration","next"],"sources":["LocalLifeTaskLogger.ts"],"sourcesContent":["/* eslint-disable no-use-before-define */\n\nfunction clone(obj) {\n    return typeof obj === 'object' ? JSON.parse(JSON.stringify(obj)) : obj;\n}\n\nfunction camel2Underline(str = '') {\n    return str.replaceAll(/[A-Z]/g, (i) => {\n        return '_' + i.toLowerCase();\n    });\n}\n\nfunction generateUuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\n        /[xy]/g,\n        function (c) {\n            let r = (Math.random() * 16) | 0,\n                v = c === 'x' ? r : (r & 0x3) | 0x8;\n            return v.toString(16);\n        },\n    );\n}\n\n// 进行克隆是为了不影响调用侧的参数对象\nfunction preDealOptions(options) {\n    return Object.entries(options).reduce(\n        (obj, [key, val]) =>\n            Object.assign(obj, { [camel2Underline(key)]: clone(val) }),\n        { name: '' },\n    );\n}\n\nconst presetStartStatus = ['start', 'START'];\nconst presetEndStatus = ['end', 'END'];\n\n// 默认多步任务时间间隔\nconst defaultTimeout = 30000;\n\ninterface LogOption {\n    name: string;\n    extra_info?: any;\n    [key: string]: any;\n}\n\ninterface CustomOption extends LogOption {\n    status?: string;\n    extraInfo?: {\n        status?: string;\n        [key: string]: any;\n    };\n    extra_info?: {\n        status?: string;\n        [key: string]: any;\n    };\n}\n\nexport default class LocalLifeTaskLogger {\n    private static taskLogFn: any;\n    private static errorLogFn: any;\n    /** logFn函数需要能接受处理格式如{name, extra_info, ...other} */\n    static setTaskLogFn(logFn: (option: LogOption) => void) {\n        this.taskLogFn = logFn;\n    }\n\n    static setErrorLogFn(errorFn) {\n        this.errorLogFn = errorFn;\n    }\n\n    static task(\n        options: CustomOption,\n        isAsync = false as boolean,\n        maxLifeTimeBetweenSteps = defaultTimeout as number,\n    ) {\n        if (!this.errorLogFn) {\n            throw new Error('You should set error function firstly.');\n        }\n        if (!this.taskLogFn) {\n            this.errorLogFn('You should set log function firstly.');\n            return;\n        }\n\n        let {\n            name,\n            extra_info = {},\n            status,\n            ...other\n        }: CustomOption = preDealOptions(options);\n\n        if (!name) {\n            this.errorLogFn('event should take a [name] key');\n            return;\n        }\n\n        // status处理\n        if (!extra_info.status && status) {\n            extra_info.status = status;\n        }\n\n        // 单步任务直接发\n        if (!isAsync) {\n            this.taskLogFn({ name, extra_info, ...other });\n            return;\n        }\n\n        // 多步任务\n        if (isAsync) {\n            // 默认状态是开始 - 'START'\n            if (!extra_info.status) {\n                extra_info.status = presetStartStatus[0];\n            }\n            // 用于识别任务链\n            const taskChainId = generateUuid();\n            extra_info.taskChainId = taskChainId;\n\n            // 发第一个任务埋点\n            this.taskLogFn({\n                name,\n                extra_info,\n                ...other,\n            });\n\n            // 任务开始时间\n            let statTime = Date.now();\n            // 上一次任务时间\n            let lastTime = statTime;\n            // 任务链\n            let taskChain = null as any;\n            // 记录任务链是否被终止，免去调用时的‘?.’判断\n            let ended = false as boolean;\n\n            /**\n             * 定时器部分\n             **/\n            let timer = null as any;\n            const setTimer = (timeout = 0) => {\n                const time = timeout || maxLifeTimeBetweenSteps;\n                setTimeout(() => {\n                    // 清掉变量\n                    end();\n                    // 如果超时，以当前任务报超时错误\n                    this.errorLogFn(\n                        `task ${taskChainId} timed out for ${\n                            time / 1000\n                        } second(s).`,\n                    );\n                }, time);\n            };\n            const clearTimer = () => {\n                clearTimeout(timer);\n                timer = null;\n            };\n            setTimer();\n\n            // 下一次任务\n            /**\n             * nextOptions第一层可包含status，若options.extra_info无status字段，外层status字段将会包含在options.extra_info进行埋点发送\n             * nextOptions: {name: string, extra_info: any, status?: string, ...other}\n             * @param nextOptions 埋点参数\n             * @param timeout\n             * @returns\n             */\n            const nextTrigger = (nextOptions: CustomOption, timeout = 0) => {\n                if (ended) {\n                    return;\n                }\n                let {\n                    name: nextName = name,\n                    extra_info: nextExtraInfo = {},\n                    status: nextStatus,\n                    ...nextOther\n                } = nextOptions;\n                if (!nextExtraInfo.status && nextStatus) {\n                    nextExtraInfo.status = nextStatus;\n                }\n                nextStatus = nextExtraInfo.status;\n                // status是异常值，空值或者为开始值\n                if (!nextStatus || presetStartStatus.includes(nextStatus)) {\n                    // 先帮你把这个发了\n                    this.taskLogFn({\n                        name: nextName,\n                        // eslint-disable-next-line camelcase\n                        extra_info: nextExtraInfo,\n                        ...nextOther,\n                    });\n                    // 结束当前任务\n                    end();\n                    // 异常状态报个错\n                    this.errorLogFn(\n                        `task ${taskChainId} received invalid status - [${nextStatus}].`,\n                    );\n                    return;\n                }\n\n                const now = Date.now();\n                nextExtraInfo = {\n                    ...extra_info, //初始value，包含了taskChainId\n                    ...nextExtraInfo, // 当次value\n                    lastStepDuration: now - lastTime, // 上一步到当前步骤的耗时\n                };\n\n                lastTime = now;\n\n                this.taskLogFn({\n                    name: nextName,\n                    extra_info: nextExtraInfo,\n                    ...nextOther,\n                });\n\n                // 重置定时\n                clearTimer();\n                setTimer(timeout);\n\n                // 当前状态是结束\n                if (presetEndStatus.includes(nextStatus)) {\n                    end();\n                }\n\n                // 使之可以链式调用，end时候会比较有用\n                return taskChain;\n            };\n\n            // 任务超时或结束，清掉变量，记录持续时间\n            const end = () => {\n                if (ended) {\n                    return;\n                }\n                this.taskLogFn({\n                    name: 'CUSTOM_TASK_CHAIN_LOGGER_END',\n                    extra_info: {\n                        duration: lastTime - statTime,\n                        taskChainId,\n                        lastStepDuration: Date.now() - lastTime,\n                    },\n                });\n                clearTimer();\n                ended = true;\n            };\n            taskChain = {\n                next: nextTrigger,\n                end,\n            };\n            return taskChain;\n        }\n    }\n}\n"],"mappings":"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"}