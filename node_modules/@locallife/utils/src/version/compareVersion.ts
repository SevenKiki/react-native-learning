/**
 * 两个版本之间比较
 * @param version1 版本1
 * @param version2 版本2
 * @returns 版本相同返回0，版本1小于版本2时小于0，版本1大于版本2时大于0
 */
export function compareVersion(version1, version2) {
    let pA = 0;
    let pB = 0;
    /** 寻找当前区间的版本号 */
    let findDigit = function (str, start) {
        let i = start;
        while (str[i] !== '.' && i < str.length) {
            i++;
        }
        return i;
    };
    while (pA < version1.length && pB < version2.length) {
        let nextA = findDigit(version1, pA);
        let nextB = findDigit(version2, pB);
        let numA = +version1.substr(pA, nextA - pA);
        let numB = +version2.substr(pB, nextB - pB);
        if (numA !== numB) {
            return numA > numB ? 1 : -1;
        }
        pA = nextA + 1;
        pB = nextB + 1;
    }
    // 若arrayA仍有小版本号
    while (pA < version1.length) {
        let nextA = findDigit(version1, pA);
        let numA = +version1.substr(pA, nextA - pA);
        if (numA > 0) {
            return 1;
        }
        pA = nextA + 1;
    }
    // 若arrayB仍有小版本号
    while (pB < version2.length) {
        let nextB = findDigit(version2, pB);
        let numB = +version2.substr(pB, nextB - pB);
        if (numB > 0) {
            return -1;
        }
        pB = nextB + 1;
    }
    // 版本号完全相同
    return 0;
}
