export type TTheme = 'light' | 'dark';

export type TDarkModel = {
    light: string;
    dark: string;
};

export type TRGBColor = `${'#'}${string & { length: 6 }}`;

export type TRGBAColor = `${'#'}${string & { length: 8 }}`;

type Enumerate<
    N extends number,
    Acc extends number[] = [],
> = Acc['length'] extends N
    ? Acc[number]
    : Enumerate<N, [...Acc, Acc['length']]>;

type NumberRange<F extends number, T extends number> = Exclude<
    Enumerate<T>,
    Enumerate<F>
>;

export type TAlpha = NumberRange<0, 1>;
