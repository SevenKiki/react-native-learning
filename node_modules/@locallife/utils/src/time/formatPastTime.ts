import { logException } from '../log/logException';
import { calculateDiffDays } from './calculateDiffDays';
import { getMonthDay } from './getMonthDay';
import { getYearMonthDay } from './getYearMonthDay';

/**
 * 计算过去的某个时间距离今天的天数并格式化：
 * 如果不是同一年，显示 xx年x月x日
 * 如果是同一天，显示今天；
 * 如果距离今天 <= daysLimit 显示 x天前
 * 如果距离今天 > daysLimit 显示 x月x日
 * @param timeStamp 时间戳
 * @param daysLimit 天数限制
 * @returns 格式化后的时间
 */
export function formatPastTime(
    timeStamp: number,
    daysLimit: number = 7,
): string {
    if (!timeStamp) {
        logException('formatPastTime', '格式化过去的某个时间错误');
        return;
    }
    let nowTime = new Date();
    let formattedTime = new Date(timeStamp);
    // 判断不是本年，直接展示时间
    let nY = nowTime.getFullYear();
    let fY = formattedTime.getFullYear();
    if (nY !== fY) {
        return getYearMonthDay(timeStamp);
    }

    let nM = nowTime.getMonth() + 1;
    let fM = formattedTime.getMonth() + 1;
    let nd = nowTime.getDate();
    let fd = formattedTime.getDate();

    if (nM === fM && nd === fd) {
        return '今天';
    } else {
        const diffDays = calculateDiffDays(timeStamp);
        if (diffDays <= daysLimit) {
            return nd - fd + '天前';
        } else {
            return getMonthDay(timeStamp);
        }
    }
}
