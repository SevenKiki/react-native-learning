{"version":3,"names":[],"sources":["types.ts"],"sourcesContent":["export type TTheme = 'light' | 'dark';\n\nexport type TDarkModel = {\n    light: string;\n    dark: string;\n};\n\nexport type TRGBColor = `${'#'}${string & { length: 6 }}`;\n\nexport type TRGBAColor = `${'#'}${string & { length: 8 }}`;\n\ntype Enumerate<\n    N extends number,\n    Acc extends number[] = [],\n> = Acc['length'] extends N\n    ? Acc[number]\n    : Enumerate<N, [...Acc, Acc['length']]>;\n\ntype NumberRange<F extends number, T extends number> = Exclude<\n    Enumerate<T>,\n    Enumerate<F>\n>;\n\nexport type TAlpha = NumberRange<0, 1>;\n"],"mappings":""}