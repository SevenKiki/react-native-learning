{"version":3,"names":["parsePriceFromFen2Yuan","price","allowZero","priceNum","parseFloat","toString","undefined","priceYuan"],"sources":["parsePriceFromFen2Yuan.ts"],"sourcesContent":["import isNumber from 'lodash/isNumber';\nimport isString from 'lodash/isString';\nimport { logException } from '../log/logException';\n\n/**\n * 分--->元\n * @param price 价格，单位为分\n * @param allowZero\n * @returns 分变成元之后的价格\n */\nexport function parsePriceFromFen2Yuan(\n    price: number | string,\n    allowZero: Boolean,\n): string {\n    let priceNum;\n    if (isString(price)) {\n        try {\n            priceNum = parseFloat(price.toString());\n        } catch {\n            logException('parseFloat', '字符串转换数字异常');\n        }\n    } else {\n        priceNum = price;\n    }\n    if (isNumber(priceNum) && priceNum >= 0) {\n        if (!allowZero && priceNum === 0) {\n            return undefined;\n        }\n        const priceYuan = priceNum / 100;\n        return parseFloat(priceYuan.toString()).toString();\n    }\n    return undefined;\n}\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,sBAAT,CACHC,KADG,EAEHC,SAFG,EAGG;EACN,IAAIC,QAAJ;;EACA,IAAI,uBAASF,KAAT,CAAJ,EAAqB;IACjB,IAAI;MACAE,QAAQ,GAAGC,UAAU,CAACH,KAAK,CAACI,QAAN,EAAD,CAArB;IACH,CAFD,CAEE,MAAM;MACJ,gCAAa,YAAb,EAA2B,WAA3B;IACH;EACJ,CAND,MAMO;IACHF,QAAQ,GAAGF,KAAX;EACH;;EACD,IAAI,uBAASE,QAAT,KAAsBA,QAAQ,IAAI,CAAtC,EAAyC;IACrC,IAAI,CAACD,SAAD,IAAcC,QAAQ,KAAK,CAA/B,EAAkC;MAC9B,OAAOG,SAAP;IACH;;IACD,MAAMC,SAAS,GAAGJ,QAAQ,GAAG,GAA7B;IACA,OAAOC,UAAU,CAACG,SAAS,CAACF,QAAV,EAAD,CAAV,CAAiCA,QAAjC,EAAP;EACH;;EACD,OAAOC,SAAP;AACH"}