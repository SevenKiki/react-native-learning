"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.openMiniApplet = openMiniApplet;

var _log = require("@locallife/log");

var _reactNative = require("react-native");

var _ = require("..");

/**
 * 用来打开小程序
 * @param url 小程序快链
 * @param bundleId 打开小程序的bundleId
 * @param exceptionCallback 异常时的回调
 */
function openMiniApplet(url, exceptionCallback) {
  const data = {
    action: 'start',
    data: {
      url
    }
  };

  _reactNative.NativeModules.Kds.invoke('mini', 'startMini', JSON.stringify(data)).then(data => {
    console.log('启动小程序成功=>', data);
  }).catch(e => {
    exceptionCallback && exceptionCallback(e);

    if (_reactNative.Platform.OS === 'ios' && (e === null || e === void 0 ? void 0 : e.code) === -1) {
      (0, _.logException)('启动小程序失败code=-1=>', e);
    } else {
      (0, _.logException)('小程序打开失败', JSON.stringify(e));
      (0, _.jumpUrl)(url, exceptionCallback);
    }
  });

  const appModel = _log.LocalLifeInitLogger.getAppModel();

  if (appModel) {
    _log.LocalLifeUrlLogger.logUrl('utils_openMiniApplet', url, `${appModel.bundleId}_${appModel.componentName}`);
  }
}
//# sourceMappingURL=openMiniApplet.js.map