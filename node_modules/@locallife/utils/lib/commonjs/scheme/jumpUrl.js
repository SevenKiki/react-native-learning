"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.jumpUrl = jumpUrl;

var _isString = _interopRequireDefault(require("lodash/isString"));

var _liveBridge = _interopRequireDefault(require("@krn/live-bridge"));

var _reactNative = require("react-native");

var _globalConfig = require("../globalConfig");

var _log = require("@locallife/log");

var _logException = require("../log/logException");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * 打开某个快链（bottom_sheet半屏、h5、直播）
 * @param url 快链链接
 * @param exceptionCallback 异常时的回调
 * @returns
 */
function jumpUrl(url, exceptionCallback) {
  if ((0, _isString.default)(url)) {
    if (url.startsWith('kwailive')) {
      _liveBridge.default.liveCommon.liveRouter({
        url: url
      });

      return;
    } else {
      if (url.startsWith('http')) {
        url = 'kwai://yodaweb?url=' + encodeURIComponent(url);
      }

      if (!_globalConfig.utilsGlobalConfig.rootTag) {
        (0, _logException.logException)('请在入口先设置setUtilsGlobalConfig');
      }

      _reactNative.NativeModules.Kds.invoke('platform', 'loadUri', JSON.stringify({
        url,
        rootTag: _globalConfig.utilsGlobalConfig.rootTag
      })).then(() => {}, e => {
        exceptionCallback && exceptionCallback(e);
      }).catch(e => {
        exceptionCallback && exceptionCallback(e);
      });
    }
  }

  const appModel = _log.LocalLifeInitLogger.getAppModel();

  if (appModel) {
    _log.LocalLifeUrlLogger.logUrl('utils_jumpUrl', url, `${appModel.bundleId}_${appModel.componentName}`);
  }
}
//# sourceMappingURL=jumpUrl.js.map