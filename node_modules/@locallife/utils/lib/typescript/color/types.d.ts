export declare type TTheme = 'light' | 'dark';
export declare type TDarkModel = {
    light: string;
    dark: string;
};
export declare type TRGBColor = `${'#'}${string & {
    length: 6;
}}`;
export declare type TRGBAColor = `${'#'}${string & {
    length: 8;
}}`;
declare type Enumerate<N extends number, Acc extends number[] = []> = Acc['length'] extends N ? Acc[number] : Enumerate<N, [...Acc, Acc['length']]>;
declare type NumberRange<F extends number, T extends number> = Exclude<Enumerate<T>, Enumerate<F>>;
export declare type TAlpha = NumberRange<0, 1>;
export {};
