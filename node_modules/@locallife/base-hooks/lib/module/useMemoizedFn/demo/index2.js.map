{"version":3,"names":["React","useState","Button","Text","View","useCallback","useMemoizedFn","useRef","Demo2","count","setCount","plusBySetState","c","callbackFn","console","log","memoizedFn","marginTop","ExpensiveTree","memo","title","showCount","renderCountRef","current"],"sources":["index2.tsx"],"sourcesContent":["/* eslint-disable react-native/no-inline-styles */\n/* eslint-disable react/jsx-no-bind */\nimport React, { useState } from 'react';\nimport { Button, Text } from 'react-native';\nimport { View } from 'react-native';\nimport { useCallback } from 'react';\nimport useMemoizedFn from '../index';\nimport { useRef } from 'react';\n\n// 本demo中，可以看到使用 useMemoizedFn 会比 useCallback 减少渲染次数\n// 注：点击 加1 按钮，使用 useCallback 的渲染次数会被加1，而 useMemoizedFn 的渲染次数不变\n// 按 Command+S，触发页面的刷新，useCallback 和 useMemoizedFn 的渲染次数会同时加1\nexport const Demo2 = () => {\n    const [count, setCount] = useState(0);\n    const plusBySetState = () => {\n        setCount((c) => c + 1);\n    };\n\n    const callbackFn = useCallback(() => {\n        console.log(`callbackFn：current count is ${count}`);\n    }, [count]);\n\n    const memoizedFn = useMemoizedFn(() => {\n        console.log(`memoizedFn：current count is ${count}`);\n    });\n\n    return (\n        <>\n            <View>\n                <Text>count: {count}</Text>\n                <Button title=\"加1\" onPress={plusBySetState} />\n            </View>\n\n            <View style={{ marginTop: 15 }}>\n                <Text>Component with useCallback function: </Text>\n                <ExpensiveTree title=\"callback\" showCount={callbackFn} />\n            </View>\n\n            <View style={{ marginTop: 10 }}>\n                <Text>Component with useMemoizedFn function: </Text>\n                <ExpensiveTree title=\"useMemoized\" showCount={memoizedFn} />\n            </View>\n        </>\n    );\n};\n\nconst ExpensiveTree = React.memo<{ [key: string]: any }>(\n    ({ title, showCount }) => {\n        const renderCountRef = useRef(0);\n        renderCountRef.current += 1;\n        return (\n            <View>\n                <Text>Render Count: {renderCountRef.current}</Text>\n                <Button title={title} onPress={showCount} />\n            </View>\n        );\n    },\n);\n"],"mappings":"AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,cAA7B;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,aAAP,MAA0B,UAA1B;AACA,SAASC,MAAT,QAAuB,OAAvB,C,CAEA;AACA;AACA;;AACA,OAAO,MAAMC,KAAK,GAAG,MAAM;EACvB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CAAD,CAAlC;;EACA,MAAMU,cAAc,GAAG,MAAM;IACzBD,QAAQ,CAAEE,CAAD,IAAOA,CAAC,GAAG,CAAZ,CAAR;EACH,CAFD;;EAIA,MAAMC,UAAU,GAAGR,WAAW,CAAC,MAAM;IACjCS,OAAO,CAACC,GAAR,CAAa,+BAA8BN,KAAM,EAAjD;EACH,CAF6B,EAE3B,CAACA,KAAD,CAF2B,CAA9B;EAIA,MAAMO,UAAU,GAAGV,aAAa,CAAC,MAAM;IACnCQ,OAAO,CAACC,GAAR,CAAa,+BAA8BN,KAAM,EAAjD;EACH,CAF+B,CAAhC;EAIA,oBACI,uDACI,oBAAC,IAAD,qBACI,oBAAC,IAAD,mBAAcA,KAAd,CADJ,eAEI,oBAAC,MAAD;IAAQ,KAAK,EAAC,SAAd;IAAmB,OAAO,EAAEE;EAA5B,EAFJ,CADJ,eAMI,oBAAC,IAAD;IAAM,KAAK,EAAE;MAAEM,SAAS,EAAE;IAAb;EAAb,gBACI,oBAAC,IAAD,gDADJ,eAEI,oBAAC,aAAD;IAAe,KAAK,EAAC,UAArB;IAAgC,SAAS,EAAEJ;EAA3C,EAFJ,CANJ,eAWI,oBAAC,IAAD;IAAM,KAAK,EAAE;MAAEI,SAAS,EAAE;IAAb;EAAb,gBACI,oBAAC,IAAD,kDADJ,eAEI,oBAAC,aAAD;IAAe,KAAK,EAAC,aAArB;IAAmC,SAAS,EAAED;EAA9C,EAFJ,CAXJ,CADJ;AAkBH,CAhCM;AAkCP,MAAME,aAAa,gBAAGlB,KAAK,CAACmB,IAAN,CAClB,QAA0B;EAAA,IAAzB;IAAEC,KAAF;IAASC;EAAT,CAAyB;EACtB,MAAMC,cAAc,GAAGf,MAAM,CAAC,CAAD,CAA7B;EACAe,cAAc,CAACC,OAAf,IAA0B,CAA1B;EACA,oBACI,oBAAC,IAAD,qBACI,oBAAC,IAAD,0BAAqBD,cAAc,CAACC,OAApC,CADJ,eAEI,oBAAC,MAAD;IAAQ,KAAK,EAAEH,KAAf;IAAsB,OAAO,EAAEC;EAA/B,EAFJ,CADJ;AAMH,CAViB,CAAtB"}