{"version":3,"names":["useRef","useMemo","useMemoizedFn","fn","fnRef","current","memoizedFn","args","apply"],"sources":["index.tsx"],"sourcesContent":["import { useRef, useMemo } from 'react';\n\ntype RefFn = (...args: any[]) => any;\n\ntype PickFunction<T extends RefFn> = (\n    this: ThisParameterType<T>,\n    ...args: Parameters<T>\n) => ReturnType<T>;\n\nexport default function useMemoizedFn<T extends RefFn>(fn: T) {\n    const fnRef = useRef<T>(fn);\n    fnRef.current = useMemo(() => fn, [fn]);\n\n    const memoizedFn = useRef<PickFunction<T>>();\n    if (!memoizedFn.current) {\n        memoizedFn.current = function (this, ...args) {\n            return fnRef.current.apply(this, args);\n        };\n    }\n    return memoizedFn.current as T;\n}\n"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,OAAjB,QAAgC,OAAhC;AASA,eAAe,SAASC,aAAT,CAAwCC,EAAxC,EAA+C;EAC1D,MAAMC,KAAK,GAAGJ,MAAM,CAAIG,EAAJ,CAApB;EACAC,KAAK,CAACC,OAAN,GAAgBJ,OAAO,CAAC,MAAME,EAAP,EAAW,CAACA,EAAD,CAAX,CAAvB;EAEA,MAAMG,UAAU,GAAGN,MAAM,EAAzB;;EACA,IAAI,CAACM,UAAU,CAACD,OAAhB,EAAyB;IACrBC,UAAU,CAACD,OAAX,GAAqB,YAAyB;MAAA,kCAANE,IAAM;QAANA,IAAM;MAAA;;MAC1C,OAAOH,KAAK,CAACC,OAAN,CAAcG,KAAd,CAAoB,IAApB,EAA0BD,IAA1B,CAAP;IACH,CAFD;EAGH;;EACD,OAAOD,UAAU,CAACD,OAAlB;AACH"}