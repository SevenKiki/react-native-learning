import React, { useState } from 'react';
import { Button, Text, View } from 'react-native';
import useAsync from '..'; // 本demo中，开始只有一个按钮，点击按钮执行 run , 即 useAsync 中的 async 语句块，isRunning 和 flag 值为 true ，显示执行中
// mockAsync 中模拟了异步操作，三秒中后返回 true , isRunning 值变为 false

function mockAsync() {
  return new Promise(resolve => {
    setTimeout(() => {
      resolve(true);
    }, 3000);
  });
}

export default (() => {
  const [flag, setFlag] = useState();
  const [isSuccess, setIsSuccess] = useState();
  const {
    isRunning,
    run
  } = useAsync(async () => {
    setFlag(true);
    setFlag(await mockAsync());
  }, {
    onSuccess: () => {
      setIsSuccess(true);
    },
    onError: () => {
      setIsSuccess(false);
    }
  });
  const result = isSuccess ? '执行成功' : '执行失败';
  return /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(Button, {
    onPress: run,
    title: "\u70B9\u51FB\u6267\u884C"
  }), flag && /*#__PURE__*/React.createElement(Text, null, isRunning ? '执行中' : result));
});
//# sourceMappingURL=index.js.map