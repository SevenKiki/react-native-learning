import React, { useEffect, useState } from 'react';
import { Button, Text, View } from 'react-native';
import useActiveCallBack from '..'; // 本Demo展示了在useActiveCallBack中自动累加的功能，如果切到后台将停止累加，切到前台将恢复累加

export default (() => {
  const [count, setCount] = useState(0);
  const onPress = useActiveCallBack(() => {
    setInterval(() => {
      setCount(c => c + 1);
    }, 1000);
  }, [count]);
  useEffect(() => {
    console.log(`count = ${count}`);
  }, [count]);
  return /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(Text, null, "\u5728\u524D\u53F0\u7D2F\u8BA1\u52A01\u6B21\u6570\uFF1A", count, "\uFF0C\u5207\u5230\u540E\u53F0\u81EA\u52A8\u505C\u6B62\u7D2F\u52A0"), /*#__PURE__*/React.createElement(Button, {
    title: "\u5F00\u59CB\u81EA\u52A8\u52A01",
    onPress: onPress,
    disabled: count > 0
  }));
});
//# sourceMappingURL=index.js.map