/* eslint-disable react-native/no-inline-styles */
/* eslint-disable react/jsx-no-bind */
import React from 'react';
import useMountUntilEffect from '..';
import { Button, Text, View } from 'react-native';
import { useState } from 'react';

// 本demo中，TestComponent一开始就挂载了，useMountUntilEffect只监听了count的状态
// 组件1 count初始值为0（相当于不符合副作用执行的条件），所以渲染组件1时，不会执行useMountUntilEffect中的逻辑，在触发加1后打印 Mounted
// 组件2 count初始值为1（相当于符合副作用执行的条件），所以渲染组件2时，也会执行useMountUntilEffect中的逻辑，不触发加1也会打印 Mounted，但是在触发加1后不会打印 Mounted
const TestComponent = ({ name, count }) => {
    console.log(`render ${name}`);
    useMountUntilEffect(() => {
        console.log(`${name} Mounted ${count}`);
    }, [count]);
    return (
        <Text>
            name={name}；count = {count}
        </Text>
    );
};

export default () => {
    const [count, setCount] = useState(0);

    const onPlusOne = () => {
        setCount((c) => c + 1);
    };

    return (
        <View>
            <Button title="加1" onPress={onPlusOne} />
            <View style={{ height: 20 }} />
            <TestComponent name={'组件1'} count={count} />
            <TestComponent name={'组件2'} count={1} />
        </View>
    );
};
